<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github on 阿航的技术小站</title>
    <link>http://localhost:1313/categories/github/</link>
    <description>Recent content in Github on 阿航的技术小站</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 26 Jul 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Github 中 Repository 和 Project的区别</title>
      <link>http://localhost:1313/posts/post/2020/github-%E4%B8%AD-repository-%E5%92%8C-project%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Sun, 26 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/github-%E4%B8%AD-repository-%E5%92%8C-project%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <description>&lt;p&gt;在使用全球最大的同性交友网站进行开源时, 也许你在打算创建一个新项目时碰到这种情况:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Github-%E4%B8%AD-Repository-%E5%92%8C-Project%E7%9A%84%E5%8C%BA%E5%88%AB-01.png&#34; alt=&#34;Github-中-Repository-和-Project的区别-01&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;点击Github右上角的加号&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;点击加号后, 出现了两个选项. 分别是&lt;code&gt;New repository&lt;/code&gt;以及&lt;code&gt;New project&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;转念一想&amp;hellip;咦, 一个是仓库, 又一个是项目. 感觉是一个东西啊!&lt;/p&gt;&#xA;&lt;h2 id=&#34;github-project&#34;&gt;Github Project&lt;/h2&gt;&#xA;&lt;p&gt;我们先来看一下&lt;a href=&#34;https://docs.github.com/cn/github/managing-your-work-on-github/about-project-boards&#34; target=&#34;_blank&#34;&gt;官方文档&lt;/a&gt;&#xA;的解释:&lt;/p&gt;&#xA;&lt;p&gt;GitHub 上的项目板帮助您组织工作和排列工作的优先级。 您可以为特定功能工作、全面的路线图甚至发布检查列表创建项目板。 通过项目板可以灵活地创建适合需求的自定义工作流程。&lt;/p&gt;&#xA;&lt;p&gt;这样一看就懂了, Project翻译过来的&amp;quot;项目&amp;quot;指的并非开发人员的&amp;quot;代码项目&amp;quot;, 而是一整个软件项目管理.&lt;/p&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]如果你经历过大项目, 应该使用过Jira、Tapd、禅道等项目管理系统! [/epcl_box]&lt;/p&gt;&#xA;&lt;h2 id=&#34;github-repository&#34;&gt;Github Repository&lt;/h2&gt;&#xA;&lt;p&gt;我们仍然来看一下&lt;a href=&#34;https://docs.github.com/cn/github/creating-cloning-and-archiving-repositories/about-repositories&#34; target=&#34;_blank&#34;&gt;官方文档&lt;/a&gt;&#xA;的解释:&lt;/p&gt;&#xA;&lt;p&gt;仓库就像项目的文件夹。 项目的仓库包含项目的所有文件，并存储每个文件的修订记录。 您也可以在仓库中讨论并管理项目的工作。&lt;/p&gt;&#xA;&lt;p&gt;我们程序员上传下载代码时频繁使用的是Repository!&lt;/p&gt;&#xA;&lt;h2 id=&#34;区别&#34;&gt;区别&lt;/h2&gt;&#xA;&lt;p&gt;一个表格非常直观的展现它们之间的区别:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Repository&lt;/th&gt;&#xA;          &lt;th&gt;Project&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;保存代码, 进行版本控制&lt;/td&gt;&#xA;          &lt;td&gt;进行项目管理, 可以添加任务、制定工作流程等.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>Github/Gitlab 等远程Git仓库fork后与原仓库同步</title>
      <link>http://localhost:1313/posts/post/2020/github-gitlab-%E7%AD%89%E8%BF%9C%E7%A8%8Bgit%E4%BB%93%E5%BA%93fork%E5%90%8E%E4%B8%8E%E5%8E%9F%E4%BB%93%E5%BA%93%E5%90%8C%E6%AD%A5/</link>
      <pubDate>Thu, 04 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/github-gitlab-%E7%AD%89%E8%BF%9C%E7%A8%8Bgit%E4%BB%93%E5%BA%93fork%E5%90%8E%E4%B8%8E%E5%8E%9F%E4%BB%93%E5%BA%93%E5%90%8C%E6%AD%A5/</guid>
      <description>&lt;p&gt;看到这篇文章, 说明你也是个勤奋的贡献者🤝🤝. 同学们在贡献代码 PR 前, 都需要将原仓库&lt;code&gt;fork&lt;/code&gt;下来. 但有时原仓库的代码比我们fork后的代码新, 并且github目前似乎并未提供自动fork的机制. 本篇文章就来记录下Github/Gitlab 等远程Git仓库fork后与原仓库同步的方法.&lt;/p&gt;&#xA;&lt;h2 id=&#34;适用场景&#34;&gt;适用场景&lt;/h2&gt;&#xA;&lt;p&gt;github等远程仓库的原仓库代码有大量变更, 需要将自己fork下来的仓库和原仓库同步.&lt;/p&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;p&gt;本篇教程假定:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;你已经掌握基础的CMD/Bash/Shell终端命令.&lt;/li&gt;&#xA;&lt;li&gt;你已经掌握了基本的Git命令以及Github操作.&lt;/li&gt;&#xA;&lt;li&gt;你已经有了待同步的、fork下来的代码仓库.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;notice&amp;rdquo;]本篇教程将会尽可能减少废话, 只放干货. 所以请你仔细阅读并严谨遵循教程步骤![/epcl_box]&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;h3 id=&#34;查看当前远程仓库配置&#34;&gt;查看当前远程仓库配置&lt;/h3&gt;&#xA;&lt;p&gt;打开终端, &lt;code&gt;cd&lt;/code&gt;至仓库目录内.&lt;/p&gt;&#xA;&lt;p&gt;输入以下命令以查看当前的远程仓库:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git remote -v&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;正常情况下, 会返回类似于:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git remote -v&#xA;origin  https://github.com/你的用户名/你的仓库名.git (fetch)&#xA;origin  https://github.com/你的用户名/你的仓库名.git (push)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;[epcl_box type=&amp;ldquo;notice&amp;rdquo;]如果你未返回数据, 请检查你的本地仓库是否关联了远程仓库. 若格式和上面不一致, 请检查你的仓库状态.[/epcl_box]&lt;/p&gt;&#xA;&lt;h3 id=&#34;绑定上游远程仓库&#34;&gt;绑定上游远程仓库&lt;/h3&gt;&#xA;&lt;p&gt;紧接着输入以下命令行, 绑定上游仓库:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git remote add upstream &amp;#34;https://github.com/上游用户名/上游仓库名.git&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;再次查看当前仓库:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git remote -v&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;正常情况下, 会返回类似于:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git remote -v&#xA;origin  https://github.com/你的用户名/你的仓库名.git (fetch)&#xA;origin  https://github.com/你的用户名/你的仓库名.git (push)&#xA;upstream        https://github.com/上游用户名/上游仓库名.git (fetch)&#xA;upstream        https://github.com/上游用户名/上游仓库名.git (push)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;拉取上游仓库代码&#34;&gt;拉取上游仓库代码&lt;/h3&gt;&#xA;&lt;p&gt;输入以下命令, 拉取上游仓库代码:&lt;/p&gt;</description>
    </item>
    <item>
      <title>PR? LGTM? WIP? 盘点Github的那些缩写!</title>
      <link>http://localhost:1313/posts/post/2020/pr-lgtm-wip-%E7%9B%98%E7%82%B9github%E7%9A%84%E9%82%A3%E4%BA%9B%E7%BC%A9%E5%86%99/</link>
      <pubDate>Sat, 23 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/pr-lgtm-wip-%E7%9B%98%E7%82%B9github%E7%9A%84%E9%82%A3%E4%BA%9B%E7%BC%A9%E5%86%99/</guid>
      <description>&lt;p&gt;今天阿航在请求合并代码时, 仓库原作者突然回复了一个&amp;quot;LGTM&amp;quot;. 一下子给我搞蒙了!😲😲 拼音缩写? 不是! 查词典? 查不到! 后面Google了一下, 看到了最终解释, 茅塞顿开! PR? LGTM? SGTM? 这篇文章来给大家罗列一下Github中老司机的常用缩写!&lt;/p&gt;&#xA;&lt;h2 id=&#34;例子&#34;&gt;例子&lt;/h2&gt;&#xA;&lt;p&gt;直接举阿航碰到的:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/PR-LGTM-WIP-%E7%9B%98%E7%82%B9Github%E7%9A%84%E9%82%A3%E4%BA%9B%E7%BC%A9%E5%86%99-01.png&#34; alt=&#34;PR LGTM WIP 盘点Github的那些缩写-01&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;如果你不知道这些缩写, 估计你也会一脸懵逼!&lt;/p&gt;&#xA;&lt;h2 id=&#34;缩写含义&#34;&gt;缩写&amp;amp;含义&lt;/h2&gt;&#xA;&lt;p&gt;就像&amp;quot;LBWNB&amp;quot;代表&amp;quot;卢本伟牛逼&amp;quot;, &amp;ldquo;现充&amp;quot;代表&amp;quot;现实生活很充实的人生赢家&amp;quot;一样.&lt;/p&gt;&#xA;&lt;p&gt;如果你不去刻意了解, 是无法从缩写中猜出这些词的真正含义一样. Github的老司机会通过缩写来节省时间或者提高逼格.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;缩写&lt;/th&gt;&#xA;          &lt;th&gt;完整写法&lt;/th&gt;&#xA;          &lt;th&gt;含义&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;PR&lt;/td&gt;&#xA;          &lt;td&gt;Pull Request&lt;/td&gt;&#xA;          &lt;td&gt;拉取请求, 贡献其他项目.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;LGTM&lt;/td&gt;&#xA;          &lt;td&gt;Looks Good To Me&lt;/td&gt;&#xA;          &lt;td&gt;已阅, 代码经过review(审查), 可以合并.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;SGTM&lt;/td&gt;&#xA;          &lt;td&gt;Sounds Good To Me&lt;/td&gt;&#xA;          &lt;td&gt;和LGTM类似, 也是经过review的意思.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;WIP&lt;/td&gt;&#xA;          &lt;td&gt;Work In Progress&lt;/td&gt;&#xA;          &lt;td&gt;已经提上日程了, 属于&amp;quot;部分&amp;quot;PR, 告诉项目维护者功能还未完成, 方便其提前进行部分review&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;PTAL&lt;/td&gt;&#xA;          &lt;td&gt;Please Take A Look&lt;/td&gt;&#xA;          &lt;td&gt;你来看一下? 提示别人再审查下代码.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;TBR&lt;/td&gt;&#xA;          &lt;td&gt;To Be Reviewed&lt;/td&gt;&#xA;          &lt;td&gt;待评审, 用于提示项目维护者进行review.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;TL;DR&lt;/td&gt;&#xA;          &lt;td&gt;Too Long; Didn&amp;rsquo;t Read&lt;/td&gt;&#xA;          &lt;td&gt;文字过多, 懒得看. 代码过长, 不便于进行Code review.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;TBD&lt;/td&gt;&#xA;          &lt;td&gt;To Be Done(or Defined/Discussed/Decided/Determined)&lt;/td&gt;&#xA;          &lt;td&gt;通常是&amp;quot;没搞定&amp;quot;的意思, 也需要根据语境进行判断.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;感谢&#34;&gt;感谢&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;这篇&lt;a href=&#34;https://github.com/flame-engine/flame/pull/350&#34; target=&#34;_blank&#34;&gt;PR&lt;/a&gt;&#xA;的&lt;a href=&#34;https://github.com/impulse&#34; target=&#34;_blank&#34;&gt;impulse&lt;/a&gt;&#xA;发布的评论, 让我了解到这个东西&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://farer.org/2017/03/01/code-review-acronyms/&#34; target=&#34;_blank&#34;&gt;《LGTM? 那些迷之缩写》&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
