<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>运维 on 阿航的技术小站</title>
    <link>http://localhost:1313/categories/%E8%BF%90%E7%BB%B4/</link>
    <description>Recent content in 运维 on 阿航的技术小站</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 05 Mar 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/%E8%BF%90%E7%BB%B4/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker传输/复制文件(宿主机与容器)</title>
      <link>http://localhost:1313/posts/post/2021/docker%E4%BC%A0%E8%BE%93-%E5%A4%8D%E5%88%B6%E6%96%87%E4%BB%B6%E5%AE%BF%E4%B8%BB%E6%9C%BA%E4%B8%8E%E5%AE%B9%E5%99%A8/</link>
      <pubDate>Fri, 05 Mar 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2021/docker%E4%BC%A0%E8%BE%93-%E5%A4%8D%E5%88%B6%E6%96%87%E4%BB%B6%E5%AE%BF%E4%B8%BB%E6%9C%BA%E4%B8%8E%E5%AE%B9%E5%99%A8/</guid>
      <description>&lt;p&gt;有时我们并没有配置某文件的映射关系, 当需要调整时, 就需要将文件进行复制. 所以本篇文章来记录下如何在docker容器和宿主机直接传输文件.&lt;/p&gt;&#xA;&lt;h2 id=&#34;开始&#34;&gt;开始&lt;/h2&gt;&#xA;&lt;p&gt;首先来确认下你的容器ID:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`docker ps`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;拿到需要传输文件的容器ID(示例中是&lt;code&gt;bec079&lt;/code&gt;):&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;宿主机向容器传输文件&#34;&gt;宿主机向容器传输文件&lt;/h3&gt;&#xA;&lt;p&gt;先来看下把宿主机的文件传入容器的命令:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker cp 宿主机文件路径 容器ID:容器内目录路径&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;例如:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`docker cp /usr/local/bin/mysql.cnf bec079:/etc/mysql/`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;容器向宿主机传输文件&#34;&gt;容器向宿主机传输文件&lt;/h3&gt;&#xA;&lt;p&gt;类似的, 只需要将公式交换即可:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker cp 容器ID:容器内文件路径 宿主机目录路径&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;例如:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`docker cp bec079:/etc/mysql/mysql.cnf /usr/local/bin/`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;搞定&#34;&gt;搞定!&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Nginx 设置密码/开启密码验证/需用户名密码才能访问</title>
      <link>http://localhost:1313/posts/post/2020/nginx-%E8%AE%BE%E7%BD%AE%E5%AF%86%E7%A0%81-%E5%BC%80%E5%90%AF%E5%AF%86%E7%A0%81%E9%AA%8C%E8%AF%81-%E9%9C%80%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%86%E7%A0%81%E6%89%8D%E8%83%BD%E8%AE%BF%E9%97%AE/</link>
      <pubDate>Thu, 16 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/nginx-%E8%AE%BE%E7%BD%AE%E5%AF%86%E7%A0%81-%E5%BC%80%E5%90%AF%E5%AF%86%E7%A0%81%E9%AA%8C%E8%AF%81-%E9%9C%80%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%86%E7%A0%81%E6%89%8D%E8%83%BD%E8%AE%BF%E9%97%AE/</guid>
      <description>&lt;p&gt;这次阿航需要为公司的某网站开启远程访问, 但是仅允许公司内部员工使用. 本篇文章就来记录下如何为Nginx 设置密码/开启密码验证/需用户名密码才能访问.&lt;/p&gt;&#xA;&lt;h2 id=&#34;效果&#34;&gt;效果&lt;/h2&gt;&#xA;&lt;p&gt;有图有真相, 我们最终要实现的效果如下:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Nginx-%E8%AE%BE%E7%BD%AE%E5%AF%86%E7%A0%81-01.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;用户名与密码输入正确&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Nginx-%E8%AE%BE%E7%BD%AE%E5%AF%86%E7%A0%81-02.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;尝试匿名访问&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h2 id=&#34;前置条件&#34;&gt;前置条件&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;掌握Nginx基础.&lt;/li&gt;&#xA;&lt;li&gt;掌握bash/shell的基本命令.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;本篇文章的环境:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;安装生成账号密码工具&#34;&gt;安装生成账号密码工具&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code&gt;`yum install httpd-tools`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;notice&amp;rdquo;]如果yum下载过慢, 请阅读&lt;a href=&#34;https://www.bugcatt.com/archives/981&#34; target=&#34;_blank&#34;&gt;这篇文章&lt;/a&gt;&#xA;开启加速.[/epcl_box]&lt;/p&gt;</description>
    </item>
    <item>
      <title>IDEA 一键部署 SpringBoot 项目到远程服务器 Docker 内</title>
      <link>http://localhost:1313/posts/post/2020/idea-%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2-springboot-%E9%A1%B9%E7%9B%AE%E5%88%B0%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8-docker-%E5%86%85/</link>
      <pubDate>Sun, 21 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/idea-%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2-springboot-%E9%A1%B9%E7%9B%AE%E5%88%B0%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8-docker-%E5%86%85/</guid>
      <description>&lt;p&gt;Docker作为当前较为流行的微服务容器管理工具, 极大的方便了传统运维部署的工作. IDEA作为地表最强Java开发IDE, 自然提供了对Docker服务的支持. 本篇文章就来记录下如何使用IDEA 一键部署 SpringBoot 到远程服务器 Docker 内.&lt;/p&gt;&#xA;&lt;h2 id=&#34;应用场景&#34;&gt;应用场景&lt;/h2&gt;&#xA;&lt;p&gt;先来看下传统的部署流程:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/IDEA-%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2-SpringBoot-%E9%A1%B9%E7%9B%AE%E5%88%B0%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8-Docker-%E5%86%85-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;传统开发流程还好, 每个版本的间隔时间较长. 但是对于小型敏捷开发团队, 这个流程就很要命了! 阿航个人的经验, 每个项目从打包到重启Docker服务器, 预计要花费近10~20分钟! 痛不欲生.&lt;/p&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;你了解服务器的基本使用.&lt;/li&gt;&#xA;&lt;li&gt;你掌握Docker/Dockerfile的使用.&lt;/li&gt;&#xA;&lt;li&gt;你掌握基础的Bash命令.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;本篇文章的环境:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;notice&amp;rdquo;]本篇教程小步骤较多! 只要稍有疏忽就可能导致失败! 请实践时仔细阅读教程![/epcl_box]&lt;/p&gt;&#xA;&lt;h3 id=&#34;生成ca公钥私钥&#34;&gt;生成CA公钥私钥&lt;/h3&gt;&#xA;&lt;p&gt;进入&lt;strong&gt;安装了Docker的远程服务器&lt;/strong&gt;, 创建目录&lt;code&gt;ca&lt;/code&gt;, 用于存储docker ca认证文件:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mkdir -p /usr/local/ca&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;进入该目录中:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd /usr/local/ca&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行以下命令, 生成公钥及私钥. 需要输入你自己的密码. &lt;strong&gt;记住该密码, 下面会多次使用&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;openssl genrsa -aes256 -out ca-key.pem 4096&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行以下命令, 根据提示分别输入你的信息:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;openssl req -new -x509 -days 365 -key ca-key.pem -sha256 -out ca.pem&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行以下命令生成key:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;openssl genrsa -out server-key.pem 4096&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行以下命令, 把&lt;code&gt;$HOST&lt;/code&gt;替换为你的远程服务器的IP地址:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker 安装 MySQL</title>
      <link>http://localhost:1313/posts/post/2020/docker-%E5%AE%89%E8%A3%85-mysql/</link>
      <pubDate>Mon, 13 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/docker-%E5%AE%89%E8%A3%85-mysql/</guid>
      <description>&lt;p&gt;本文为 docker 安装 mysql 容器的完整详细教程.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;若图片展示异常, 请访问我的&lt;a href=&#34;https://blog.bugcatt.com/archives/267&#34; target=&#34;_blank&#34;&gt;官方博客&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;h2 id=&#34;准备工作&#34;&gt;准备工作&lt;/h2&gt;&#xA;&lt;h3 id=&#34;开发环境&#34;&gt;开发环境&lt;/h3&gt;&#xA;&lt;p&gt;本博客的环境一览:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;环境&lt;/th&gt;&#xA;          &lt;th&gt;版本号&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;docker&lt;/td&gt;&#xA;          &lt;td&gt;1.13.1&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;注意您的环境和文中的差异, 避免出现不兼容的情况哦!&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;h3 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h3&gt;&#xA;&lt;p&gt;要顺利阅读本文, 假定您已经掌握了以下知识:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;docker环境已正常安装&lt;/li&gt;&#xA;&lt;li&gt;掌握基本的终端命令&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;查询所有的mysql镜像&#34;&gt;查询所有的mysql镜像&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker search mysql&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;选择并拉取你想要的镜像这里拿官方的mysql8进行举例&#34;&gt;选择并拉取你想要的镜像(这里拿官方的mysql8进行举例)&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker pull mysql:8.0&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;查询已下载的mysql镜像&#34;&gt;查询已下载的MySQL镜像&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker images |grep mysql&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;使用镜像创建容器&#34;&gt;使用镜像创建容器&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker run -p 3306:3306 --name mymysql -v $PWD/conf:/etc/mysql/conf.d -v $PWD/logs:/logs -v $PWD/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:8.0&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;解析:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;-p 3306:3306&lt;/code&gt;&lt;/strong&gt;：将容器的 3306 端口映射到主机的 3306 端口。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;-v $PWD/conf:/etc/mysql/conf.d&lt;/code&gt;&lt;/strong&gt;：将主机当前目录下的 &lt;code&gt;conf/my.cnf&lt;/code&gt; 挂载到容器的&lt;code&gt;/etc/mysql/my.cnf&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;-v $PWD/logs:/logs&lt;/code&gt;&lt;/strong&gt;：将主机当前目录下的 logs 目录挂载到容器的 &lt;code&gt;/logs&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;-v $PWD/data:/var/lib/mysql&lt;/code&gt;&lt;/strong&gt; ：将主机当前目录下的&lt;code&gt;data&lt;/code&gt;目录挂载到容器的 &lt;code&gt;/var/lib/mysql&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;**&lt;code&gt;-e MYSQL_ROOT_PASSWORD=123456&lt;/code&gt;：**初始化 root 用户的密码。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;查看容器运行情况&#34;&gt;查看容器运行情况&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker ps&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;优雅关闭&#34;&gt;优雅关闭&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker stop [容器id]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;启动已停止的容器&#34;&gt;启动已停止的容器&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker start [容器id]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;重启容器&#34;&gt;重启容器&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker restart [容器id]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;大功告成&#34;&gt;大功告成&lt;/h2&gt;&#xA;&lt;p&gt;通过以上的一些步骤, 我们完成了Dokcer安装Mysql的目标, 是不是很简单?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nginx 踩坑 413 Request Entity Too Large</title>
      <link>http://localhost:1313/posts/post/2020/nginx-413-request-entity-too-large/</link>
      <pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/nginx-413-request-entity-too-large/</guid>
      <description>&lt;p&gt;在进行文件上传的操作时, Nginx 报错: 413 Request Entity Too Large&lt;/p&gt;&#xA;&lt;h2 id=&#34;问题展示&#34;&gt;问题展示&lt;/h2&gt;&#xA;&lt;p&gt;又是熟悉的踩坑环节😂! 看看今天阿航踩了啥坑吧:&lt;/p&gt;&#xA;&lt;p&gt;在尝试上传文件到服务器时, 碰到了大大的:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/nginx-413-595x154.png&#34; alt=&#34;Nginx 踩坑 413 Request Entity Too Large&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;原因&#34;&gt;原因&lt;/h2&gt;&#xA;&lt;p&gt;nginx的默认文件上传大小大于你上传文件的大小&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;h3 id=&#34;找到nginx配置文件&#34;&gt;找到nginx配置文件&lt;/h3&gt;&#xA;&lt;p&gt;找到nginx的配置文件(nginx/conf/nginx.conf)&lt;/p&gt;&#xA;&lt;h3 id=&#34;修改server的location的配置&#34;&gt;修改&lt;code&gt;server&lt;/code&gt;的&lt;code&gt;location&lt;/code&gt;的配置&lt;/h3&gt;&#xA;&lt;p&gt;找到你要修改的server, 比如:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;server {&#xA;    listen 80;&#xA;    server_name adb.abc.com;&#xA;    location / {&#xA;        root   html;&#xA;        index  index.html index.htm;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在location块中添加一行配置:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;client_max_body_size  64m; # 改为你需要的大小!&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;修改后就变为了:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;server {&#xA;    listen 80;&#xA;    server_name adb.abc.com;&#xA;    location / {&#xA;        root   html;&#xA;        index  index.html index.htm;&#xA;        client_max_body_size  64m; # 改为你需要的大小!&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;保存并重启&#34;&gt;保存并重启&lt;/h3&gt;&#xA;&lt;p&gt;保存文件, 重启nginx(首个nginx替换为你安装的目录):&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
