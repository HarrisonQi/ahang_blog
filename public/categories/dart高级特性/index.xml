<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dart高级特性 on 阿航的技术小站</title>
    <link>http://localhost:1313/categories/dart%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/</link>
    <description>Recent content in Dart高级特性 on 阿航的技术小站</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 09 May 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/dart%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dart 中的 Null-aware (null感知运算符)</title>
      <link>http://localhost:1313/posts/post/2020/dart-%E4%B8%AD%E7%9A%84-null-aware-null%E6%84%9F%E7%9F%A5%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/dart-%E4%B8%AD%E7%9A%84-null-aware-null%E6%84%9F%E7%9F%A5%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>&lt;p&gt;来到这篇文章, 说明你一定想在 Dart 的语法上更进一步(不出意外的话, 你在学 Flutter 🤭🤭). 工欲善其事, 必先利其器. 一个优秀的程序员应该掌握可以节省代码量的高级语法, 不论是节约时间还是提升水平. 本篇文章就来讲讲Dart语言中的 Null-aware ( null感知运算符 )吧!&lt;/p&gt;&#xA;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;&#xA;&lt;p&gt;Dart的Null-aware来自于&lt;code&gt;Dart 1.12&lt;/code&gt;正式版本:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/01-2-1500x675.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;你也可以看看&lt;a href=&#34;https://news.dartlang.org/2015/08/dart-112-released-with-null-aware.html&#34; target=&#34;_blank&#34;&gt;官网版本介绍&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;h2 id=&#34;用途&#34;&gt;用途&lt;/h2&gt;&#xA;&lt;p&gt;存在即是合理. 既然有这样的新运算符, 说明它在一定程度上&lt;strong&gt;节省了我们的代码&lt;/strong&gt;, 使&lt;strong&gt;代码更加简洁&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;既然它被称为&lt;code&gt;Null-aware&lt;/code&gt;, 说明这个运算符是专门&lt;strong&gt;用于处理&lt;code&gt;null&lt;/code&gt;值&lt;/strong&gt;的. 将会提供空指针的相关操作.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/02-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;创建示例对象&#34;&gt;创建示例对象&lt;/h2&gt;&#xA;&lt;p&gt;我们来创建一个&lt;code&gt;Person&lt;/code&gt;对象, 方便后续使用:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;class Person{&#xA;  // 性别&#xA;  String gender;&#xA;&#xA;  // 变更性别为女性&#xA;  void changeToFemale(){&#xA;    gender = &amp;#34;女性&amp;#34;;&#xA;  }&#xA;}&#xA;&#xA;Person person = Person();&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;heading&#34;&gt;??&lt;/h2&gt;&#xA;&lt;p&gt;当前者为null时, 返回后者.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;exp ?? anotherExp&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;实例-获取用户性别&#34;&gt;实例: 获取用户性别&lt;/h3&gt;&#xA;&lt;p&gt;当某个Person对象的gender(性别)属性为null时, 返回&amp;rsquo;未知&#39;:&lt;/p&gt;&#xA;&lt;h4 id=&#34;方法一-基础if语句&#34;&gt;方法一: 基础IF语句&lt;/h4&gt;&#xA;&lt;p&gt;我们可以用最基础的语句来写:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;String gender;&#xA;if(person.gender!=null){&#xA;    gender = person.gender;&#xA;}else{&#xA;    gender = &amp;#39;未知&amp;#39;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;方法二-三目运算&#34;&gt;方法二: 三目运算&lt;/h4&gt;&#xA;&lt;p&gt;三目运算符相当好用:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
