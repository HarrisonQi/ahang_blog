<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mybatis-Plus on 阿航的技术小站</title>
    <link>http://localhost:1313/categories/mybatis-plus/</link>
    <description>Recent content in Mybatis-Plus on 阿航的技术小站</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 24 Jul 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/mybatis-plus/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mybatis-Plus 查询获取数据集最大值(Max())</title>
      <link>http://localhost:1313/posts/post/2020/mybatis-plus-%E6%9F%A5%E8%AF%A2%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E9%9B%86%E6%9C%80%E5%A4%A7%E5%80%BCmax/</link>
      <pubDate>Fri, 24 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/mybatis-plus-%E6%9F%A5%E8%AF%A2%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E9%9B%86%E6%9C%80%E5%A4%A7%E5%80%BCmax/</guid>
      <description>&lt;p&gt;在使用Mybatis-Plus框架进行查询时, 碰到了需要查询最大值的情况. 但是截止本文章撰写前, Mybatis-Plus并没有提供直接的查询数据最大值的函数. 本篇文章就来记录下如何实现.&lt;/p&gt;&#xA;&lt;h2 id=&#34;前置条件&#34;&gt;前置条件&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;掌握Spring框架&lt;/li&gt;&#xA;&lt;li&gt;掌握Mybatis&lt;/li&gt;&#xA;&lt;li&gt;掌握Mybatis-Plus的基本使用&lt;/li&gt;&#xA;&lt;li&gt;掌握SQL语句&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;p&gt;我们进行普通查询的时候, 需要用到以下语句:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`xxxMapper.selectOne(QueryWrapper(...));`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;我们只需要分别添加排序(&lt;code&gt;orderByDesc&lt;/code&gt;)和取第1个(&lt;code&gt;limit 1&lt;/code&gt;)就可拿到最大值:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`xxxMapper.selectOne(QueryWrapper(...).orderByDesc(&amp;quot;排序字段名&amp;quot;).last(&amp;quot;limit 1&amp;quot;));`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;拿到最小值只需改为正序排列:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`xxxMapper.selectOne(QueryWrapper(...).orderByAsc(&amp;quot;排序字段名&amp;quot;).last(&amp;quot;limit 1&amp;quot;));`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;搞定.&lt;/p&gt;&#xA;&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;&#xA;&lt;p&gt;本文的方法虽然实现了我们的目标. 但是&lt;strong&gt;仅为代码美观&lt;/strong&gt;. 实际上这样的查询效率可能不高. 生产环境的项目慎用.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mybatis-Plus 更新字段数据为null</title>
      <link>http://localhost:1313/posts/post/2020/mybatis-plus-%E6%9B%B4%E6%96%B0%E5%AD%97%E6%AE%B5%E6%95%B0%E6%8D%AE%E4%B8%BAnull/</link>
      <pubDate>Mon, 20 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/mybatis-plus-%E6%9B%B4%E6%96%B0%E5%AD%97%E6%AE%B5%E6%95%B0%E6%8D%AE%E4%B8%BAnull/</guid>
      <description>&lt;p&gt;在使用Mybatis-Plus开发项目时, 需要将数据库某字段值设置为null. 但是仅将实体类的值赋值为null是不够的. 还需要为实体类的属性添加以下注解:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`@TableField(fill = FieldFill.UPDATE)`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;比如你需要设置某表的字段name为null, 则需要进入实体类, 在对应的属性上添加注解:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`@TableField(fill = FieldFill.UPDATE) private String name;`&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>MyBatis-Plus 读写 Mysql的Json类型字段数据</title>
      <link>http://localhost:1313/posts/post/2020/mybatis-plus-%E8%AF%BB%E5%86%99-mysql%E7%9A%84json%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Fri, 05 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/mybatis-plus-%E8%AF%BB%E5%86%99-mysql%E7%9A%84json%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5%E6%95%B0%E6%8D%AE/</guid>
      <description>&lt;p&gt;Mybatis-Plus是一款相当优秀的开源框架, 为单表操作提供了极大的便利. 这次阿航在写服务端时, 需要对MySQL的json类型字段进行操作, 忙活了一阵, 终于找到了解决方案, 并在本篇文章进行记录.&lt;/p&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;p&gt;本篇文章环境:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;环境&lt;/th&gt;&#xA;          &lt;th&gt;版本号&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Mybatis-Plus&lt;/td&gt;&#xA;          &lt;td&gt;3.3.2&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;本篇文章假定:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;你掌握Java/Kotlin基础(注解)&lt;/li&gt;&#xA;&lt;li&gt;你掌握Mybatis以及Mybatis-Plus的基本使用&lt;/li&gt;&#xA;&lt;li&gt;你了解FastJSON或Gson&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;notice&amp;rdquo;]如果还不具备以上的条件, 阅读本篇文章可能会有阻碍! 建议先满足条件后再尝试阅读![/epcl_box]&lt;/p&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]老规矩, 速度快的同学直接向下拉. 看核心代码.[/epcl_box]&lt;/p&gt;&#xA;&lt;h2 id=&#34;场景&#34;&gt;场景&lt;/h2&gt;&#xA;&lt;p&gt;我们拥有一个json类型的数据库字段, 我们在进行写操作时, 不希望将对象转为json字符串再存数据库. 读数据也是一样. 我们希望这一切自动完成.&lt;/p&gt;&#xA;&lt;h2 id=&#34;准备工作&#34;&gt;准备工作&lt;/h2&gt;&#xA;&lt;p&gt;我们先来创建一个数据库表:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE TABLE `mybatis_json_test`  (&#xA;  `id` int(10) NOT NULL AUTO_INCREMENT PRIMARY KEY,&#xA;  `extra_object` json NULL,&#xA;  `extra_list` json NULL,&#xA;  `extra_array` json NULL&#xA;);&#xA;&#xA;INSERT INTO `mybatis_json_test`&#xA;VALUES&#xA;&#x9;( 1, &amp;#39;{\&amp;#34;id\&amp;#34;: 1, \&amp;#34;name\&amp;#34;: \&amp;#34;2\&amp;#34;}&amp;#39;, &amp;#39;[{\&amp;#34;id\&amp;#34;: 1, \&amp;#34;name\&amp;#34;: \&amp;#34;2\&amp;#34;}]&amp;#39;, &amp;#39;[{\&amp;#34;id\&amp;#34;: 1, \&amp;#34;name\&amp;#34;: \&amp;#34;2\&amp;#34;}]&amp;#39; );&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;创建表对应实体类&#34;&gt;创建表对应实体类&lt;/h3&gt;&#xA;&lt;p&gt;首先创建实体类&lt;code&gt;MybatisJsonTest&lt;/code&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>MyBatis Plus 分页查询返回的 数据总数total为0 的解决方案</title>
      <link>http://localhost:1313/posts/post/2020/mybatis-plus-%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2%E8%BF%94%E5%9B%9E%E7%9A%84-%E6%95%B0%E6%8D%AE%E6%80%BB%E6%95%B0total%E4%B8%BA0-%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/mybatis-plus-%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2%E8%BF%94%E5%9B%9E%E7%9A%84-%E6%95%B0%E6%8D%AE%E6%80%BB%E6%95%B0total%E4%B8%BA0-%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>&lt;p&gt;今天在使用MyBatis-Plus在进行分页查询时, 返回的&lt;code&gt;IPage&lt;/code&gt;对象数据的&lt;code&gt;total&lt;/code&gt;属性一直是&lt;code&gt;0&lt;/code&gt;. 没有数据总数, 前端的分页部分将会比较难搞, 在此记录一下排坑过程.&lt;/p&gt;&#xA;&lt;h2 id=&#34;开发环境&#34;&gt;开发环境&lt;/h2&gt;&#xA;&lt;p&gt;本教程的开发环境如下:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;名称&lt;/th&gt;&#xA;          &lt;th&gt;版本&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;JDK&lt;/td&gt;&#xA;          &lt;td&gt;1.8&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Spring Boot&lt;/td&gt;&#xA;          &lt;td&gt;2.1.14.RELEASE&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Mybatis-Plus&lt;/td&gt;&#xA;          &lt;td&gt;3.2.0&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;h3 id=&#34;方案一-添加配置类-注入paginationinterceptor推荐&#34;&gt;方案一: 添加配置类, 注入&lt;code&gt;PaginationInterceptor&lt;/code&gt;(推荐)&lt;/h3&gt;&#xA;&lt;p&gt;创建类文件&lt;code&gt;MybatisPlusConfig&lt;/code&gt;文件, 输入以下代码:&lt;/p&gt;&#xA;&lt;p&gt;[epcl_tabs] [epcl_tab title=&amp;ldquo;Kotlin&amp;rdquo;]&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&#xA;import com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor&#xA;import org.springframework.context.annotation.Bean&#xA;import org.springframework.context.annotation.Configuration&#xA;&#xA;@Configuration&#xA;class MybatisPlusConfig {&#xA;    /**&#xA;     * 分页插件&#xA;     */&#xA;    @Bean&#xA;    fun paginationInterceptor(): PaginationInterceptor {&#xA;        return PaginationInterceptor()&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;[/epcl_tab] [epcl_tab title=&amp;ldquo;Java&amp;rdquo;]&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&#xA;import com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor;&#xA;import org.springframework.context.annotation.Bean;&#xA;import org.springframework.context.annotation.Configuration;&#xA;&#xA;@Configuration&#xA;public class MybatisPlusConfig {&#xA;    /**&#xA;     * 分页插件&#xA;     */&#xA;    @Bean&#xA;    public PaginationInterceptor paginationInterceptor() {&#xA;        return new PaginationInterceptor();&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;[/epcl_tab] [/epcl_tabs]&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
