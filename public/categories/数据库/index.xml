<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据库 on 阿航的技术小站</title>
    <link>http://localhost:1313/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
    <description>Recent content in 数据库 on 阿航的技术小站</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 24 Oct 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL教程 01 什么是MySQL</title>
      <link>http://localhost:1313/posts/post/2020/mysql%E6%95%99%E7%A8%8B-01-%E4%BB%80%E4%B9%88%E6%98%AFmysql/</link>
      <pubDate>Sat, 24 Oct 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/mysql%E6%95%99%E7%A8%8B-01-%E4%BB%80%E4%B9%88%E6%98%AFmysql/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1eT4y1F7cp/&#34; target=&#34;_blank&#34;&gt;点击进入bilibili查看高清教程&lt;/a&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>MySql根据生日计算年龄</title>
      <link>http://localhost:1313/posts/post/2020/mysql%E6%A0%B9%E6%8D%AE%E7%94%9F%E6%97%A5%E8%AE%A1%E7%AE%97%E5%B9%B4%E9%BE%84/</link>
      <pubDate>Sat, 24 Oct 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/mysql%E6%A0%B9%E6%8D%AE%E7%94%9F%E6%97%A5%E8%AE%A1%E7%AE%97%E5%B9%B4%E9%BE%84/</guid>
      <description>&lt;p&gt;这次的需求是需要通过出生日期（年月日）来计算年龄。一句SQL就可以搞定:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`SELECT TIMESTAMPDIFF(YEAR, &#39;2000-01-01&#39;, CURDATE());`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;如果格式是 年-月-日 ，那就使用&lt;code&gt;CONCAT&lt;/code&gt;拼接起来，这么写：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`SELECT TIMESTAMPDIFF(YEAR, CONCAT(2000, &#39;-&#39;, 1, &#39;-&#39;, 1), CURDATE());`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;如果你遇到了更好的解法，欢迎在下方留言哟！&lt;/p&gt;</description>
    </item>
    <item>
      <title>Access denied for user</title>
      <link>http://localhost:1313/posts/post/2020/access-denied-for-user/</link>
      <pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/access-denied-for-user/</guid>
      <description>&lt;p&gt;在开发的过程中坎坷不断。今天在Spring Boot中碰到了这个异常：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`Caused by: com.mysql.cj.exceptions.CJException: Access denied for user &#39;root&#39;@&#39;localhost&#39; (using password: YES)`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;本篇文章就来记录下可能的情况以及解决方案。&lt;/p&gt;&#xA;&lt;h2 id=&#34;问题原因&#34;&gt;问题原因&lt;/h2&gt;&#xA;&lt;p&gt;问题的根源就在数据库登陆上。肯定是账号和密码有误，所以我们要仔细检查配置文件，有以下几个地方容易出错：&lt;/p&gt;&#xA;&lt;h3 id=&#34;情况一检查配置文件是否包含空格&#34;&gt;情况一：检查配置文件是否包含空格&lt;/h3&gt;&#xA;&lt;p&gt;因为application.yml似乎并不会给我们的配置文件进行去空格处理，所以我们来仔细检查。配置文件人模人样的，看起来没啥问题：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Access-denied-for-user-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;结果一选中：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Access-denied-for-user-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;呵！其实不然。所以一定要&lt;strong&gt;去除多余的空格&lt;/strong&gt;！&lt;/p&gt;&#xA;&lt;h3 id=&#34;情况二检查username和password值是否写反&#34;&gt;情况二：检查username和password值是否写反&lt;/h3&gt;&#xA;&lt;p&gt;因为26个字母中&lt;code&gt;u&lt;/code&gt;在&lt;code&gt;p&lt;/code&gt;的后面，所以默认的yml排序中&lt;code&gt;username&lt;/code&gt;会在&lt;code&gt;password&lt;/code&gt;下面。阿航就是踩了这个坑！以为用户名在上方，导致写反！&lt;/p&gt;&#xA;&lt;h3 id=&#34;情况三检查ip是否正确&#34;&gt;情况三：检查IP是否正确&lt;/h3&gt;&#xA;&lt;p&gt;如果确定账户密码正确，我们就来看看IP是否有误吧。&lt;/p&gt;&#xA;&lt;p&gt;在数据库中输入以下SQL进行查询（这里以MySQL为例）：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;` SELECT &#x9;CONCAT( USER, &#39;@&#39;, HOST ) Result FROM &#x9;mysql.USER;`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;查看返回结果是否包含你的报错。如果不包含就说明你的IP未被创建。&lt;/p&gt;&#xA;&lt;h3 id=&#34;情况四检查数据库服务器配置&#34;&gt;情况四：检查数据库服务器配置&lt;/h3&gt;&#xA;&lt;p&gt;使用其他的软件连接你的数据库（如Navicat），使用相同的用户名和密码看看能否登陆。如果不能登陆则是数据库层的问题，与代码无关了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;&#xA;&lt;p&gt;总之，解决方案就是细心。。&lt;/p&gt;</description>
    </item>
    <item>
      <title>MySQL多条记录/结果合并为一行,并转换为JSON</title>
      <link>http://localhost:1313/posts/post/2020/mysql%E5%A4%9A%E6%9D%A1%E8%AE%B0%E5%BD%95-%E7%BB%93%E6%9E%9C%E5%90%88%E5%B9%B6%E4%B8%BA%E4%B8%80%E8%A1%8C%E5%B9%B6%E8%BD%AC%E6%8D%A2%E4%B8%BAjson/</link>
      <pubDate>Tue, 14 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/mysql%E5%A4%9A%E6%9D%A1%E8%AE%B0%E5%BD%95-%E7%BB%93%E6%9E%9C%E5%90%88%E5%B9%B6%E4%B8%BA%E4%B8%80%E8%A1%8C%E5%B9%B6%E8%BD%AC%E6%8D%A2%E4%B8%BAjson/</guid>
      <description>&lt;p&gt;我们在使用MySQL进行查询时, 我们希望把同类结果合并为一行(1个字段内). 本篇文章就来记录下如何使用MySQL将多条记录/结果合并为一行.&lt;/p&gt;&#xA;&lt;h2 id=&#34;效果&#34;&gt;效果&lt;/h2&gt;&#xA;&lt;p&gt;有图有真相, 先来看下查询的最终效果对比:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/MySQL%E5%A4%9A%E6%9D%A1%E8%AE%B0%E5%BD%95%E7%BB%93%E6%9E%9C%E5%90%88%E5%B9%B6-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;合并前&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/MySQL%E5%A4%9A%E6%9D%A1%E8%AE%B0%E5%BD%95%E7%BB%93%E6%9E%9C%E5%90%88%E5%B9%B6-03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/MySQL%E5%A4%9A%E6%9D%A1%E8%AE%B0%E5%BD%95%E7%BB%93%E6%9E%9C%E5%90%88%E5%B9%B6-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;合并后&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;创建表及填充数据&#34;&gt;创建表及填充数据&lt;/h3&gt;&#xA;&lt;p&gt;先来创建一个表. 在库中运行以下SQL命令:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;``DROP TABLE IF EXISTS `t_name`; CREATE TABLE `t_name`  (   `name` varchar(255) NOT NULL,   PRIMARY KEY (`name`) ) ; INSERT INTO `t_name` VALUES (&#39;阿航&#39;),(&#39;张三&#39;),(&#39;李四&#39;),(&#39;王五&#39;),(&#39;傻根&#39;);``&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;至此, 我们有了一个&lt;code&gt;t_name&lt;/code&gt;表了. 这个表用于存储名字.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MySQL JOIN MIN()/MAX() 组合使用</title>
      <link>http://localhost:1313/posts/post/2020/mysql-join-min-max/</link>
      <pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/mysql-join-min-max/</guid>
      <description>&lt;p&gt;这次阿航在开发后端接口, 写复杂SQL查询时碰到了这个问题, 我需要将MySQL的&lt;code&gt;JOIN&lt;/code&gt;关键字和&lt;code&gt;MIN()&lt;/code&gt;同时使用. 本篇文章就来记录下&lt;code&gt;MySQL&lt;/code&gt; &lt;code&gt;JOIN&lt;/code&gt; &lt;code&gt;MIN()/MAX()&lt;/code&gt;的组合使用.&lt;/p&gt;&#xA;&lt;h2 id=&#34;应用场景&#34;&gt;应用场景&lt;/h2&gt;&#xA;&lt;p&gt;大家都有过淘宝网购的经历, 应该记得在搜索时, 出来的结果列表都是每个产品的最小价格. 点进去后, 选择不同的型号会有相应的价格.&lt;/p&gt;&#xA;&lt;p&gt;阿航碰到的是我有两个表, 一个是SPU(产品表), 一个是SKU(商品表), 它们是一对多的关系(因为一款产品会有多个型号). 我需要在查询SPU的同时, 再把对应的最便宜的SKU的价格进行返回.&lt;/p&gt;&#xA;&lt;p&gt;总结: &lt;strong&gt;一对多关联查询, 并且把多的表的最大/最小值返回.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]为了方便大家理解, 阿航在这里进行相应的简化[/epcl_box]&lt;/p&gt;&#xA;&lt;h3 id=&#34;数据关系&#34;&gt;数据关系&lt;/h3&gt;&#xA;&lt;p&gt;先来看下两个表的关系:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/MySQL-JOIN-MINMAX-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;其中, 一个SPU对应多个SKU ( 比如一件衣服有多个颜色 ).&lt;/p&gt;&#xA;&lt;p&gt;💡 解析&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;h3 id=&#34;初始化数据库&#34;&gt;初始化数据库&lt;/h3&gt;&#xA;&lt;p&gt;进入数据库, 运行以下SQL语句定义并初始化数据表:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE DATABASE mysql_join_demo DEFAULT CHARACTER &#xA;SET = &amp;#39;utf8mb4&amp;#39;;&#xA;&#xA;USE mysql_join_demo;&#xA;&#xA;CREATE TABLE t_spu(&#xA;    id BIGINT NOT NULL AUTO_INCREMENT COMMENT &amp;#39;主键&amp;#39;,&#xA;    name VARCHAR(32) NOT NULL COMMENT &amp;#39;产品名&amp;#39;,&#xA;    PRIMARY KEY (id)&#xA;) COMMENT = &amp;#39;产品SPU表&amp;#39;;&#xA;&#xA;CREATE TABLE t_sku(&#xA;    id BIGINT NOT NULL AUTO_INCREMENT COMMENT &amp;#39;主键&amp;#39;,&#xA;    spu_id BIGINT NOT NULL COMMENT &amp;#39;产品ID&amp;#39;,&#xA;    spec VARCHAR(32) NOT NULL COMMENT &amp;#39;型号&amp;#39;,&#xA;    price BIGINT NOT NULL COMMENT &amp;#39;价格&amp;#39;,&#xA;    PRIMARY KEY (id)&#xA;) COMMENT = &amp;#39;商品表&amp;#39;;&#xA;&#xA;INSERT INTO `mysql_join_demo`.`t_spu`(`id`, `name`) VALUES (1, &amp;#39;联想电脑&amp;#39;);&#xA;INSERT INTO `mysql_join_demo`.`t_sku`(`id`, `spu_id`, `spec`, `price`) VALUES (1, 1, &amp;#39;低配版&amp;#39;, 5000);&#xA;INSERT INTO `mysql_join_demo`.`t_sku`(`id`, `spu_id`, `spec`, `price`) VALUES (2, 1, &amp;#39;高配版&amp;#39;, 8000);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;运行完成后, 表的数据结构应该为:&lt;/p&gt;</description>
    </item>
    <item>
      <title>MySQL 创建用户 &amp; 授权</title>
      <link>http://localhost:1313/posts/post/2020/mysql-%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7-%E6%8E%88%E6%9D%83/</link>
      <pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/mysql-%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7-%E6%8E%88%E6%9D%83/</guid>
      <description>&lt;p&gt;MySQL 等主流 数据库 的最高权限一般是root用户. 有时我们需要提供数据库的账号和密码以使用某些服务. 但实际上每个服务只会使用1个左右的数据库. 直接将root账号和密码随意分配是一件很危险的事情. 所以我们需要单独的 创建用户, 并 授权 需要的数据库给它.&lt;/p&gt;&#xA;&lt;h2 id=&#34;用户管理&#34;&gt;用户管理&lt;/h2&gt;&#xA;&lt;h3 id=&#34;创建用户&#34;&gt;创建用户&lt;/h3&gt;&#xA;&lt;p&gt;创建用户harrison, 并指定IP为192.118.1.1; 设置密码为123&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE USER &amp;#39;harrison&amp;#39; @&amp;#39;192.118.1.1&amp;#39; IDENTIFIED BY &amp;#39;123&amp;#39;;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;创建用户harrison, 任意IP即可登录; 设置密码为123&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE USER &amp;#39;harrison&amp;#39; @&amp;#39;%&amp;#39; IDENTIFIED BY &amp;#39;123&amp;#39;;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;删除用户&#34;&gt;删除用户&lt;/h3&gt;&#xA;&lt;p&gt;删除用户名为harrison, 且IP为192.118.1.1的用户&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DROP USER &amp;#39;harrison&amp;#39; @&amp;#39;192.118.1.1&amp;#39;;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;修改用户名及ip&#34;&gt;修改用户名及IP&lt;/h3&gt;&#xA;&lt;p&gt;修改用户名为harrison, 不限制登录IP的用户 -&amp;gt; 用户名harry, 限制登录IP为192.168.1.1&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;RENAME USER &amp;#39;harrison&amp;#39; @&amp;#39;%&amp;#39; TO &amp;#39;harry&amp;#39; @&amp;#39;192.168.1.1&amp;#39;;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;修改用户密码&#34;&gt;修改用户密码&lt;/h3&gt;&#xA;&lt;p&gt;修改用户名为harrison, 不限制登录IP的用户的密码为456&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SET PASSWORD FOR &amp;#39;harrison&amp;#39; @&amp;#39;%&amp;#39; = PASSWORD ( &amp;#39;456&amp;#39; );&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;用户授权&#34;&gt;用户授权&lt;/h2&gt;&#xA;&lt;h3 id=&#34;查看用户拥有权限&#34;&gt;查看用户拥有权限&lt;/h3&gt;&#xA;&lt;p&gt;查看用户harrison拥有的权限:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SHOW GRANTS FOR &amp;#39;harrison&amp;#39; @&amp;#39;%&amp;#39;;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;赋予权限&#34;&gt;赋予权限&lt;/h3&gt;&#xA;&lt;p&gt;为harrison提供db1数据库的table1表SELECT(查询)、INSERT(新增)、UPDATE(修改)权限&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
