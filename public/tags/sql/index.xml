<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sql on 阿航的技术小站</title>
    <link>http://localhost:1313/tags/sql/</link>
    <description>Recent content in Sql on 阿航的技术小站</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 24 Jul 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/sql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mybatis-Plus 查询获取数据集最大值(Max())</title>
      <link>http://localhost:1313/posts/post/2020/mybatis-plus-%E6%9F%A5%E8%AF%A2%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E9%9B%86%E6%9C%80%E5%A4%A7%E5%80%BCmax/</link>
      <pubDate>Fri, 24 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/mybatis-plus-%E6%9F%A5%E8%AF%A2%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E9%9B%86%E6%9C%80%E5%A4%A7%E5%80%BCmax/</guid>
      <description>&lt;p&gt;在使用Mybatis-Plus框架进行查询时, 碰到了需要查询最大值的情况. 但是截止本文章撰写前, Mybatis-Plus并没有提供直接的查询数据最大值的函数. 本篇文章就来记录下如何实现.&lt;/p&gt;&#xA;&lt;h2 id=&#34;前置条件&#34;&gt;前置条件&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;掌握Spring框架&lt;/li&gt;&#xA;&lt;li&gt;掌握Mybatis&lt;/li&gt;&#xA;&lt;li&gt;掌握Mybatis-Plus的基本使用&lt;/li&gt;&#xA;&lt;li&gt;掌握SQL语句&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;p&gt;我们进行普通查询的时候, 需要用到以下语句:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`xxxMapper.selectOne(QueryWrapper(...));`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;我们只需要分别添加排序(&lt;code&gt;orderByDesc&lt;/code&gt;)和取第1个(&lt;code&gt;limit 1&lt;/code&gt;)就可拿到最大值:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`xxxMapper.selectOne(QueryWrapper(...).orderByDesc(&amp;quot;排序字段名&amp;quot;).last(&amp;quot;limit 1&amp;quot;));`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;拿到最小值只需改为正序排列:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`xxxMapper.selectOne(QueryWrapper(...).orderByAsc(&amp;quot;排序字段名&amp;quot;).last(&amp;quot;limit 1&amp;quot;));`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;搞定.&lt;/p&gt;&#xA;&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;&#xA;&lt;p&gt;本文的方法虽然实现了我们的目标. 但是&lt;strong&gt;仅为代码美观&lt;/strong&gt;. 实际上这样的查询效率可能不高. 生产环境的项目慎用.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
