<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>关联查询 on 阿航的技术小站</title>
    <link>http://localhost:1313/tags/%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2/</link>
    <description>Recent content in 关联查询 on 阿航的技术小站</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 14 Jul 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL多条记录/结果合并为一行,并转换为JSON</title>
      <link>http://localhost:1313/posts/post/2020/mysql%E5%A4%9A%E6%9D%A1%E8%AE%B0%E5%BD%95-%E7%BB%93%E6%9E%9C%E5%90%88%E5%B9%B6%E4%B8%BA%E4%B8%80%E8%A1%8C%E5%B9%B6%E8%BD%AC%E6%8D%A2%E4%B8%BAjson/</link>
      <pubDate>Tue, 14 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/mysql%E5%A4%9A%E6%9D%A1%E8%AE%B0%E5%BD%95-%E7%BB%93%E6%9E%9C%E5%90%88%E5%B9%B6%E4%B8%BA%E4%B8%80%E8%A1%8C%E5%B9%B6%E8%BD%AC%E6%8D%A2%E4%B8%BAjson/</guid>
      <description>&lt;p&gt;我们在使用MySQL进行查询时, 我们希望把同类结果合并为一行(1个字段内). 本篇文章就来记录下如何使用MySQL将多条记录/结果合并为一行.&lt;/p&gt;&#xA;&lt;h2 id=&#34;效果&#34;&gt;效果&lt;/h2&gt;&#xA;&lt;p&gt;有图有真相, 先来看下查询的最终效果对比:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/MySQL%E5%A4%9A%E6%9D%A1%E8%AE%B0%E5%BD%95%E7%BB%93%E6%9E%9C%E5%90%88%E5%B9%B6-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;合并前&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/MySQL%E5%A4%9A%E6%9D%A1%E8%AE%B0%E5%BD%95%E7%BB%93%E6%9E%9C%E5%90%88%E5%B9%B6-03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/MySQL%E5%A4%9A%E6%9D%A1%E8%AE%B0%E5%BD%95%E7%BB%93%E6%9E%9C%E5%90%88%E5%B9%B6-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;合并后&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;创建表及填充数据&#34;&gt;创建表及填充数据&lt;/h3&gt;&#xA;&lt;p&gt;先来创建一个表. 在库中运行以下SQL命令:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;``DROP TABLE IF EXISTS `t_name`; CREATE TABLE `t_name`  (   `name` varchar(255) NOT NULL,   PRIMARY KEY (`name`) ) ; INSERT INTO `t_name` VALUES (&#39;阿航&#39;),(&#39;张三&#39;),(&#39;李四&#39;),(&#39;王五&#39;),(&#39;傻根&#39;);``&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;至此, 我们有了一个&lt;code&gt;t_name&lt;/code&gt;表了. 这个表用于存储名字.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MySQL JOIN MIN()/MAX() 组合使用</title>
      <link>http://localhost:1313/posts/post/2020/mysql-join-min-max/</link>
      <pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/mysql-join-min-max/</guid>
      <description>&lt;p&gt;这次阿航在开发后端接口, 写复杂SQL查询时碰到了这个问题, 我需要将MySQL的&lt;code&gt;JOIN&lt;/code&gt;关键字和&lt;code&gt;MIN()&lt;/code&gt;同时使用. 本篇文章就来记录下&lt;code&gt;MySQL&lt;/code&gt; &lt;code&gt;JOIN&lt;/code&gt; &lt;code&gt;MIN()/MAX()&lt;/code&gt;的组合使用.&lt;/p&gt;&#xA;&lt;h2 id=&#34;应用场景&#34;&gt;应用场景&lt;/h2&gt;&#xA;&lt;p&gt;大家都有过淘宝网购的经历, 应该记得在搜索时, 出来的结果列表都是每个产品的最小价格. 点进去后, 选择不同的型号会有相应的价格.&lt;/p&gt;&#xA;&lt;p&gt;阿航碰到的是我有两个表, 一个是SPU(产品表), 一个是SKU(商品表), 它们是一对多的关系(因为一款产品会有多个型号). 我需要在查询SPU的同时, 再把对应的最便宜的SKU的价格进行返回.&lt;/p&gt;&#xA;&lt;p&gt;总结: &lt;strong&gt;一对多关联查询, 并且把多的表的最大/最小值返回.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]为了方便大家理解, 阿航在这里进行相应的简化[/epcl_box]&lt;/p&gt;&#xA;&lt;h3 id=&#34;数据关系&#34;&gt;数据关系&lt;/h3&gt;&#xA;&lt;p&gt;先来看下两个表的关系:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/MySQL-JOIN-MINMAX-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;其中, 一个SPU对应多个SKU ( 比如一件衣服有多个颜色 ).&lt;/p&gt;&#xA;&lt;p&gt;💡 解析&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;h3 id=&#34;初始化数据库&#34;&gt;初始化数据库&lt;/h3&gt;&#xA;&lt;p&gt;进入数据库, 运行以下SQL语句定义并初始化数据表:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE DATABASE mysql_join_demo DEFAULT CHARACTER &#xA;SET = &amp;#39;utf8mb4&amp;#39;;&#xA;&#xA;USE mysql_join_demo;&#xA;&#xA;CREATE TABLE t_spu(&#xA;    id BIGINT NOT NULL AUTO_INCREMENT COMMENT &amp;#39;主键&amp;#39;,&#xA;    name VARCHAR(32) NOT NULL COMMENT &amp;#39;产品名&amp;#39;,&#xA;    PRIMARY KEY (id)&#xA;) COMMENT = &amp;#39;产品SPU表&amp;#39;;&#xA;&#xA;CREATE TABLE t_sku(&#xA;    id BIGINT NOT NULL AUTO_INCREMENT COMMENT &amp;#39;主键&amp;#39;,&#xA;    spu_id BIGINT NOT NULL COMMENT &amp;#39;产品ID&amp;#39;,&#xA;    spec VARCHAR(32) NOT NULL COMMENT &amp;#39;型号&amp;#39;,&#xA;    price BIGINT NOT NULL COMMENT &amp;#39;价格&amp;#39;,&#xA;    PRIMARY KEY (id)&#xA;) COMMENT = &amp;#39;商品表&amp;#39;;&#xA;&#xA;INSERT INTO `mysql_join_demo`.`t_spu`(`id`, `name`) VALUES (1, &amp;#39;联想电脑&amp;#39;);&#xA;INSERT INTO `mysql_join_demo`.`t_sku`(`id`, `spu_id`, `spec`, `price`) VALUES (1, 1, &amp;#39;低配版&amp;#39;, 5000);&#xA;INSERT INTO `mysql_join_demo`.`t_sku`(`id`, `spu_id`, `spec`, `price`) VALUES (2, 1, &amp;#39;高配版&amp;#39;, 8000);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;运行完成后, 表的数据结构应该为:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
