<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dart on 阿航的技术小站</title>
    <link>http://localhost:1313/tags/dart/</link>
    <description>Recent content in Dart on 阿航的技术小站</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 02 Jun 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/dart/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Default value of an optional parameter must be constant</title>
      <link>http://localhost:1313/posts/post/2020/default-value-of-an-optional-parameter-must-be-constant/</link>
      <pubDate>Tue, 02 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/default-value-of-an-optional-parameter-must-be-constant/</guid>
      <description>&lt;p&gt;今天阿航在使用Flutter进行开发时, 希望为&lt;code&gt;final&lt;/code&gt;修饰的实例变量提供默认值. 尝试过程中IDE报错:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Default values of an optional parameter must be constant.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;本篇文章就来记录下碰到这种问题该如何解决!&lt;/p&gt;&#xA;&lt;h2 id=&#34;错误示例&#34;&gt;错误示例&lt;/h2&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]因为阿航出错的源码并不便于演示, 所以这里采用Stack Overflow上的简单示范, 使大家更直观的解决问题.[/epcl_box]&lt;/p&gt;&#xA;&lt;p&gt;先来看下错误源码:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;enum MyEnum { a, b }&#xA;&#xA;class ClassA {&#xA;  final MyEnum myEnum;&#xA;  ClassA({this.myEnum = MyEnum.a});&#xA;}&#xA;&#xA;class ClassB {&#xA;  final ClassA classA;&#xA;  ClassB({this.classA = ClassA()}); // ClassA 报错&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;乍一看似乎没有什么问题, 但是实际上Dart并不允许这种写法.&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;p&gt;其实解决方案很简单, 来看下修改后的代码(注意高亮的行):&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;enum MyEnum { a, b }&#xA;&#xA;class ClassA {&#xA;  final MyEnum myEnum;&#xA;  const ClassA({this.myEnum = MyEnum.a});&#xA;}&#xA;&#xA;class ClassB {&#xA;  final ClassA classA;&#xA;  ClassB({this.classA = const ClassA()});&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;可以看出, 我们在&lt;code&gt;ClassA&lt;/code&gt;构造函数前增加了&lt;code&gt;const&lt;/code&gt;进行修饰. 并在&lt;code&gt;ClassB&lt;/code&gt;设置classA的默认值时做了同样的操作.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Waiting for another flutter command to release the startup lock...</title>
      <link>http://localhost:1313/posts/post/2020/waiting-for-another-flutter-command-to-release-the-startup-lock/</link>
      <pubDate>Tue, 26 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/waiting-for-another-flutter-command-to-release-the-startup-lock/</guid>
      <description>&lt;p&gt;又是开发APP的一天, 但是在执行Flutter命令时, 终端中返回:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Waiting for another flutter command to release the startup lock…&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;字面意思是: 正在等待另一个正在执行的Flutter命令完成&amp;hellip; 本篇文章就来记录一下如何如何解决这种问题.&lt;/p&gt;&#xA;&lt;h2 id=&#34;出现原因&#34;&gt;出现原因&lt;/h2&gt;&#xA;&lt;p&gt;非常明显, 它告诉了我们已经有另一个Flutter命令正在执行! 一方面因为国内网络的原因, 有些命令执行相当慢. 导致可能很久之前执行的命令到现在也没完成. 亦或者是Flutter自己在后台执行了一些命令.&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;p&gt;所以, 要解决这个问题, 我们的目标就确定了. 那就是关闭掉当前执行的Flutter命令进程!&lt;/p&gt;&#xA;&lt;p&gt;这里阿航给大家提供了若干方法, 大家可以按需选择.&lt;/p&gt;&#xA;&lt;h3 id=&#34;方法一-安全地等待执行结束&#34;&gt;方法一: 安全地等待执行结束&lt;/h3&gt;&#xA;&lt;p&gt;这个是最省心, 也是最安全的方式. 因为强行停止某个进程可能会出现各种异常, 甚至会导致需要重新安装Flutter&amp;hellip; 如果真变成这样就糟透了😭😭😭&lt;/p&gt;&#xA;&lt;p&gt;当然, 有时我们不想等, 那么就需要下面的方法了.&lt;/p&gt;&#xA;&lt;h3 id=&#34;方法二-taskkill&#34;&gt;方法二: taskkill&lt;/h3&gt;&#xA;&lt;p&gt;打开Flutter安装目录, 复制&lt;code&gt;dart.exe&lt;/code&gt;的路径(一般会在&lt;code&gt;flutter安装目录\bin\cache\dart-sdk\bin&lt;/code&gt;).&lt;/p&gt;&#xA;&lt;p&gt;打开Powershell或CMD.&lt;/p&gt;&#xA;&lt;p&gt;若盘符不一致, 需要先切换盘符, 比如当前在C盘, 切换至D盘:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;D:&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CD进入刚才复制的路径:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd flutter安装目录\bin\cache\dart-sdk\bin&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用taskkill关闭进程:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;taskkill /F /IM dart.exe&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果返回类似这样的信息即是成功:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;taskkill /F /IM dart.exe&#xA;成功: 已终止进程 &amp;#34;dart.exe&amp;#34;，其 PID 为 9804。&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;[epcl_box type=&amp;ldquo;success&amp;rdquo;]这是目前最便捷的强行关闭方式![/epcl_box]&lt;/p&gt;&#xA;&lt;h3 id=&#34;方法三-任务管理器关闭dart进程&#34;&gt;方法三: 任务管理器关闭dart进程&lt;/h3&gt;&#xA;&lt;p&gt;打开任务管理器, 点击详细信息:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dart 中的 Null-aware (null感知运算符)</title>
      <link>http://localhost:1313/posts/post/2020/dart-%E4%B8%AD%E7%9A%84-null-aware-null%E6%84%9F%E7%9F%A5%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/dart-%E4%B8%AD%E7%9A%84-null-aware-null%E6%84%9F%E7%9F%A5%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>&lt;p&gt;来到这篇文章, 说明你一定想在 Dart 的语法上更进一步(不出意外的话, 你在学 Flutter 🤭🤭). 工欲善其事, 必先利其器. 一个优秀的程序员应该掌握可以节省代码量的高级语法, 不论是节约时间还是提升水平. 本篇文章就来讲讲Dart语言中的 Null-aware ( null感知运算符 )吧!&lt;/p&gt;&#xA;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;&#xA;&lt;p&gt;Dart的Null-aware来自于&lt;code&gt;Dart 1.12&lt;/code&gt;正式版本:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/01-2-1500x675.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;你也可以看看&lt;a href=&#34;https://news.dartlang.org/2015/08/dart-112-released-with-null-aware.html&#34; target=&#34;_blank&#34;&gt;官网版本介绍&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;h2 id=&#34;用途&#34;&gt;用途&lt;/h2&gt;&#xA;&lt;p&gt;存在即是合理. 既然有这样的新运算符, 说明它在一定程度上&lt;strong&gt;节省了我们的代码&lt;/strong&gt;, 使&lt;strong&gt;代码更加简洁&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;既然它被称为&lt;code&gt;Null-aware&lt;/code&gt;, 说明这个运算符是专门&lt;strong&gt;用于处理&lt;code&gt;null&lt;/code&gt;值&lt;/strong&gt;的. 将会提供空指针的相关操作.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/02-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;创建示例对象&#34;&gt;创建示例对象&lt;/h2&gt;&#xA;&lt;p&gt;我们来创建一个&lt;code&gt;Person&lt;/code&gt;对象, 方便后续使用:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;class Person{&#xA;  // 性别&#xA;  String gender;&#xA;&#xA;  // 变更性别为女性&#xA;  void changeToFemale(){&#xA;    gender = &amp;#34;女性&amp;#34;;&#xA;  }&#xA;}&#xA;&#xA;Person person = Person();&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;heading&#34;&gt;??&lt;/h2&gt;&#xA;&lt;p&gt;当前者为null时, 返回后者.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;exp ?? anotherExp&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;实例-获取用户性别&#34;&gt;实例: 获取用户性别&lt;/h3&gt;&#xA;&lt;p&gt;当某个Person对象的gender(性别)属性为null时, 返回&amp;rsquo;未知&#39;:&lt;/p&gt;&#xA;&lt;h4 id=&#34;方法一-基础if语句&#34;&gt;方法一: 基础IF语句&lt;/h4&gt;&#xA;&lt;p&gt;我们可以用最基础的语句来写:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;String gender;&#xA;if(person.gender!=null){&#xA;    gender = person.gender;&#xA;}else{&#xA;    gender = &amp;#39;未知&amp;#39;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;方法二-三目运算&#34;&gt;方法二: 三目运算&lt;/h4&gt;&#xA;&lt;p&gt;三目运算符相当好用:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
