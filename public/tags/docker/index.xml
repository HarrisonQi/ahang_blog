<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on 阿航的技术小站</title>
    <link>http://localhost:1313/tags/docker/</link>
    <description>Recent content in Docker on 阿航的技术小站</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 05 Mar 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker传输/复制文件(宿主机与容器)</title>
      <link>http://localhost:1313/posts/post/2021/docker%E4%BC%A0%E8%BE%93-%E5%A4%8D%E5%88%B6%E6%96%87%E4%BB%B6%E5%AE%BF%E4%B8%BB%E6%9C%BA%E4%B8%8E%E5%AE%B9%E5%99%A8/</link>
      <pubDate>Fri, 05 Mar 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2021/docker%E4%BC%A0%E8%BE%93-%E5%A4%8D%E5%88%B6%E6%96%87%E4%BB%B6%E5%AE%BF%E4%B8%BB%E6%9C%BA%E4%B8%8E%E5%AE%B9%E5%99%A8/</guid>
      <description>&lt;p&gt;有时我们并没有配置某文件的映射关系, 当需要调整时, 就需要将文件进行复制. 所以本篇文章来记录下如何在docker容器和宿主机直接传输文件.&lt;/p&gt;&#xA;&lt;h2 id=&#34;开始&#34;&gt;开始&lt;/h2&gt;&#xA;&lt;p&gt;首先来确认下你的容器ID:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`docker ps`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;拿到需要传输文件的容器ID(示例中是&lt;code&gt;bec079&lt;/code&gt;):&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;宿主机向容器传输文件&#34;&gt;宿主机向容器传输文件&lt;/h3&gt;&#xA;&lt;p&gt;先来看下把宿主机的文件传入容器的命令:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker cp 宿主机文件路径 容器ID:容器内目录路径&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;例如:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`docker cp /usr/local/bin/mysql.cnf bec079:/etc/mysql/`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;容器向宿主机传输文件&#34;&gt;容器向宿主机传输文件&lt;/h3&gt;&#xA;&lt;p&gt;类似的, 只需要将公式交换即可:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker cp 容器ID:容器内文件路径 宿主机目录路径&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;例如:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`docker cp bec079:/etc/mysql/mysql.cnf /usr/local/bin/`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;搞定&#34;&gt;搞定!&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Docker安装Discourse论坛/BBS系统（Nginx）</title>
      <link>http://localhost:1313/posts/post/2020/docker%E5%AE%89%E8%A3%85discourse%E8%AE%BA%E5%9D%9B-bbs%E7%B3%BB%E7%BB%9Fnginx/</link>
      <pubDate>Wed, 19 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/docker%E5%AE%89%E8%A3%85discourse%E8%AE%BA%E5%9D%9B-bbs%E7%B3%BB%E7%BB%9Fnginx/</guid>
      <description>&lt;p&gt;最近要做&lt;a href=&#34;https://flame-cn.com&#34; target=&#34;_blank&#34;&gt;Flame中文站&lt;/a&gt;&#xA;的论坛模块，考虑到技术人社区的重要性，选用了Discourse论坛系统。安装过程相当坎坷，本篇文章就来记录下Docker安装Discourse论坛/BBS系统的全过程。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;先决条件&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;你的服务器/主机已经妥善安装Docker&lt;/li&gt;&#xA;&lt;li&gt;你的服务器/主机已经妥善安装Git&lt;/li&gt;&#xA;&lt;li&gt;掌握Git基础&lt;/li&gt;&#xA;&lt;li&gt;掌握Docker基础&lt;/li&gt;&#xA;&lt;li&gt;掌握Bash基础&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;本篇文章的环境：&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;环境&lt;/th&gt;&#xA;          &lt;th&gt;版本&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;主机&lt;/td&gt;&#xA;          &lt;td&gt;阿里云ECS&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;操作系统&lt;/td&gt;&#xA;          &lt;td&gt;CentOS 7&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;开始&#34;&gt;开始&lt;/h2&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;notice&amp;rdquo;]即使有阿航的教程会较少大部分坑，在国内部署Discourse是仍然是较痛苦的一件事情。可以查询的资料微乎其微，如果你不喜欢折腾，请选用其他的论坛框架！[/epcl_box]&lt;/p&gt;&#xA;&lt;h3 id=&#34;配置&#34;&gt;配置&lt;/h3&gt;&#xA;&lt;p&gt;你的服务器的&lt;strong&gt;必须大于&lt;/strong&gt;以下配置，否则你会无限踩坑：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;双核CPU&lt;/li&gt;&#xA;&lt;li&gt;1 GB 运行内存&lt;/li&gt;&#xA;&lt;li&gt;64位 Linux内核系统&lt;/li&gt;&#xA;&lt;li&gt;已经安装Docker&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;下载discourse&#34;&gt;下载Discourse&lt;/h3&gt;&#xA;&lt;p&gt;创建一个目录，用于存放Discourse。比如：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`mkdir /usr/local/discourse`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;获得管理员权限：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`sudo -s`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;克隆discourse(命令后半段的路径和上方创建的保持一致)：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`git clone &#39;https://github.com/discourse/discourse_docker.git&#39; /usr/local/discourse`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;耐心等待完成。&lt;/p&gt;&#xA;&lt;p&gt;完成后，进入该目录：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`cd /usr/local/discourse`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;修改配置&#34;&gt;修改配置&lt;/h3&gt;&#xA;&lt;p&gt;克隆示例配置文件：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`cp samples/standalone.yml containers/app.yml`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;打开文本编辑器，修改复制后的配置文件：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`vim containers/app.yml`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h4 id=&#34;配置国内镜像&#34;&gt;配置国内镜像&lt;/h4&gt;&#xA;&lt;p&gt;如果你身在大陆，则需要进行镜像加速。找到配置文件中的&lt;code&gt;templates&lt;/code&gt;块，添加国内镜像&lt;code&gt;templates/web.china.template.yml&lt;/code&gt;：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;` templates:   - &amp;quot;templates/postgres.template.yml&amp;quot;   - &amp;quot;templates/redis.template.yml&amp;quot;   - &amp;quot;templates/sshd.template.yml&amp;quot;   - &amp;quot;templates/web.template.yml&amp;quot;   - &amp;quot;templates/web.china.template.yml&amp;quot;`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h4 id=&#34;其他配置&#34;&gt;其他配置&lt;/h4&gt;&#xA;&lt;p&gt;注销或删除掉expose下面的80和443端口：&lt;/p&gt;</description>
    </item>
    <item>
      <title>修改Docker 的 MySQL 容器时区</title>
      <link>http://localhost:1313/posts/post/2020/%E4%BF%AE%E6%94%B9docker-%E7%9A%84-mysql-%E5%AE%B9%E5%99%A8%E6%97%B6%E5%8C%BA/</link>
      <pubDate>Sun, 12 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E4%BF%AE%E6%94%B9docker-%E7%9A%84-mysql-%E5%AE%B9%E5%99%A8%E6%97%B6%E5%8C%BA/</guid>
      <description>&lt;p&gt;阿航在开发Springboot项目时, 前端告诉验证码一直无效. 本地测试没有问题, 一看远程服务器的数据库时间, 哇塞&amp;ndash;早了8小时. 很明显, 是MySQL的时区问题. 本篇文章就来记录下如何修改Docker 的 MySQL 容器时区.&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;p&gt;先来校验下数据库是否真的时区不对. 进入MySQL数据库, 运行语句:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`SELECT NOW();`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;会返回类似这样的数据:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`mysql&amp;gt; SELECT NOW(); +---------------------+ | NOW()               | +---------------------+ | 2020-07-04 15:46:46 | +---------------------+ 1 row in set (0.09 sec)`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;再来查询下当前时区, 输入以下命令:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`SHOW VARIABLES LIKE &#39;%time_zone%&#39;;`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;会返回类似这样的数据:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`mysql&amp;gt; SHOW VARIABLES LIKE &#39;%time_zone%&#39;; +------------------+--------+ | Variable_name    | Value  | +------------------+--------+ | system_time_zone | UTC    | | time_zone        | +00:00 | +------------------+--------+ 2 rows in set (0.12 sec)`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;如果返回的时间和你的相差多个小时, 并且时区不对(非+08:00)的话, 那么证明你需要向下看了.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker容器没有vim命令的解决方案</title>
      <link>http://localhost:1313/posts/post/2020/docker%E5%AE%B9%E5%99%A8%E6%B2%A1%E6%9C%89vim%E5%91%BD%E4%BB%A4%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Fri, 10 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/docker%E5%AE%B9%E5%99%A8%E6%B2%A1%E6%9C%89vim%E5%91%BD%E4%BB%A4%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>&lt;p&gt;今天在尝试修改Docker容器内文件时, 发现容器内并没有vim命令, 返回了:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`vim my.cnf bash: vim: command not found`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;本篇文章就来记录下如何解决此问题.&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;p&gt;仍然在docker容器内部, 首先运行以下命令, 并耐心等待一会儿:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`apt-get update`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;完成后运行:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`apt-get install vim`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;等待安装完成后, 运行以下命令, 验证是否安装成功:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`vim`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;如果返回了类似以下界面则证明vim安装成功:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Docker%E5%AE%B9%E5%99%A8%E6%B2%A1%E6%9C%89vim%E5%91%BD%E4%BB%A4%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88-01.png&#34; alt=&#34;VIM安装成功返回&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;VIM安装成功返回&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;success&amp;rdquo;]成功搞定. 继续你的文本编辑操作吧![/epcl_box]&lt;/p&gt;</description>
    </item>
    <item>
      <title>IDEA 一键部署 SpringBoot 项目到远程服务器 Docker 内</title>
      <link>http://localhost:1313/posts/post/2020/idea-%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2-springboot-%E9%A1%B9%E7%9B%AE%E5%88%B0%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8-docker-%E5%86%85/</link>
      <pubDate>Sun, 21 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/idea-%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2-springboot-%E9%A1%B9%E7%9B%AE%E5%88%B0%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8-docker-%E5%86%85/</guid>
      <description>&lt;p&gt;Docker作为当前较为流行的微服务容器管理工具, 极大的方便了传统运维部署的工作. IDEA作为地表最强Java开发IDE, 自然提供了对Docker服务的支持. 本篇文章就来记录下如何使用IDEA 一键部署 SpringBoot 到远程服务器 Docker 内.&lt;/p&gt;&#xA;&lt;h2 id=&#34;应用场景&#34;&gt;应用场景&lt;/h2&gt;&#xA;&lt;p&gt;先来看下传统的部署流程:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/IDEA-%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2-SpringBoot-%E9%A1%B9%E7%9B%AE%E5%88%B0%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8-Docker-%E5%86%85-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;传统开发流程还好, 每个版本的间隔时间较长. 但是对于小型敏捷开发团队, 这个流程就很要命了! 阿航个人的经验, 每个项目从打包到重启Docker服务器, 预计要花费近10~20分钟! 痛不欲生.&lt;/p&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;你了解服务器的基本使用.&lt;/li&gt;&#xA;&lt;li&gt;你掌握Docker/Dockerfile的使用.&lt;/li&gt;&#xA;&lt;li&gt;你掌握基础的Bash命令.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;本篇文章的环境:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;notice&amp;rdquo;]本篇教程小步骤较多! 只要稍有疏忽就可能导致失败! 请实践时仔细阅读教程![/epcl_box]&lt;/p&gt;&#xA;&lt;h3 id=&#34;生成ca公钥私钥&#34;&gt;生成CA公钥私钥&lt;/h3&gt;&#xA;&lt;p&gt;进入&lt;strong&gt;安装了Docker的远程服务器&lt;/strong&gt;, 创建目录&lt;code&gt;ca&lt;/code&gt;, 用于存储docker ca认证文件:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mkdir -p /usr/local/ca&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;进入该目录中:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd /usr/local/ca&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行以下命令, 生成公钥及私钥. 需要输入你自己的密码. &lt;strong&gt;记住该密码, 下面会多次使用&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;openssl genrsa -aes256 -out ca-key.pem 4096&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行以下命令, 根据提示分别输入你的信息:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;openssl req -new -x509 -days 365 -key ca-key.pem -sha256 -out ca.pem&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行以下命令生成key:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;openssl genrsa -out server-key.pem 4096&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行以下命令, 把&lt;code&gt;$HOST&lt;/code&gt;替换为你的远程服务器的IP地址:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker 搭建 Minecraft (我的世界)服务器</title>
      <link>http://localhost:1313/posts/post/2020/docker-%E6%90%AD%E5%BB%BA-minecraft-%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/docker-%E6%90%AD%E5%BB%BA-minecraft-%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>&lt;p&gt;国内的某易代理简直是太好(la)用(ji)了. 这不最近想重拾一下青春.. 下载, 并打开国服 我的世界 Minecraft , 好家伙, 占了1g多的手机存储, 材质光影资源短缺, 界面卡到爆😓&lt;br&gt;&#xA;回头一看官方版, 包大小只有98m.. 作为一个7年的MC老玩家简直不能忍! 回想起很久之前自己开服, 现在又掌握了Docker容器技术, 尝试一下自己开服.&lt;/p&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;p&gt;本篇教程针对于以下人群:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;愿意为Minecraft而折腾的人.&lt;/li&gt;&#xA;&lt;li&gt;了解Docker基本用法, 如果你对Docker还不太熟悉, 可以阅读&lt;a href=&#34;https://www.docker.com/&#34; target=&#34;_blank&#34;&gt;Docker官方文档&lt;/a&gt;&#xA;、&lt;a href=&#34;https://www.runoob.com/docker/docker-tutorial.html&#34; target=&#34;_blank&#34;&gt;Docker菜鸟教程&lt;/a&gt;&#xA;等.&lt;/li&gt;&#xA;&lt;li&gt;拥有自己的云服务器(阿里云等).&lt;/li&gt;&#xA;&lt;li&gt;了解常见终端语法.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;使用pocketmine&#34;&gt;使用PocketMine&lt;/h2&gt;&#xA;&lt;p&gt;在&lt;a href=&#34;https://hub.docker.com/&#34; target=&#34;_blank&#34;&gt;Docker Hub&lt;/a&gt;&#xA;中搜索关键字: &lt;code&gt;pocketmine&lt;/code&gt;, 可以看到有好多相关镜像.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;在选型中, 我们一般会选用活跃度高一些的镜像. 也就是&amp;quot;没凉&amp;quot;的镜像. 长时间不维护的镜像可能出现无法快速解决的Bug等!&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;途中最新的镜像距文章编写时间只有18个小时, 已经非常活跃了, 所以选用这个!&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/01-1500x812.png&#34; alt=&#34;Docker 搭建 Minecraft (我的世界)服务器&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;点击, 进入&lt;a href=&#34;https://hub.docker.com/r/circleeh/pocketmine&#34; target=&#34;_blank&#34;&gt;circleeh/pocketmine详情页&lt;/a&gt;&#xA;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;拉取镜像&#34;&gt;拉取镜像&lt;/h2&gt;&#xA;&lt;h3 id=&#34;选取版本&#34;&gt;选取版本&lt;/h3&gt;&#xA;&lt;p&gt;这里一定要注意选择合适的版本, 若版本不兼容则会无法加入至服务器, 先来看一下自己的Minecraft版本号, 再去&lt;a href=&#34;https://github.com/pmmp/PocketMine-MP/releases&#34; target=&#34;_blank&#34;&gt;这个Github网址&lt;/a&gt;&#xA;对照自己的版本!&lt;/p&gt;&#xA;&lt;p&gt;打开&lt;a href=&#34;https://github.com/pmmp/PocketMine-MP/releases&#34; target=&#34;_blank&#34;&gt;官方Github Release网址&lt;/a&gt;&#xA;, 可以看到:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/02-1500x745.png&#34; alt=&#34;Docker 搭建 Minecraft (我的世界)服务器&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;如你所见, 大标题后面的是PocketMine版本号, 下面的副标题是对应的Minecraft版本号.&lt;/p&gt;&#xA;&lt;p&gt;回到&lt;a href=&#34;https://hub.docker.com/r/circleeh/pocketmine&#34; target=&#34;_blank&#34;&gt;circleeh/pocketmine详情页&lt;/a&gt;&#xA;, 点击Tags:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/03-1500x673.png&#34; alt=&#34;Docker 搭建 Minecraft (我的世界)服务器&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker 安装 MySQL</title>
      <link>http://localhost:1313/posts/post/2020/docker-%E5%AE%89%E8%A3%85-mysql/</link>
      <pubDate>Mon, 13 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/docker-%E5%AE%89%E8%A3%85-mysql/</guid>
      <description>&lt;p&gt;本文为 docker 安装 mysql 容器的完整详细教程.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;若图片展示异常, 请访问我的&lt;a href=&#34;https://blog.bugcatt.com/archives/267&#34; target=&#34;_blank&#34;&gt;官方博客&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;h2 id=&#34;准备工作&#34;&gt;准备工作&lt;/h2&gt;&#xA;&lt;h3 id=&#34;开发环境&#34;&gt;开发环境&lt;/h3&gt;&#xA;&lt;p&gt;本博客的环境一览:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;环境&lt;/th&gt;&#xA;          &lt;th&gt;版本号&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;docker&lt;/td&gt;&#xA;          &lt;td&gt;1.13.1&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;注意您的环境和文中的差异, 避免出现不兼容的情况哦!&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;h3 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h3&gt;&#xA;&lt;p&gt;要顺利阅读本文, 假定您已经掌握了以下知识:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;docker环境已正常安装&lt;/li&gt;&#xA;&lt;li&gt;掌握基本的终端命令&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;查询所有的mysql镜像&#34;&gt;查询所有的mysql镜像&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker search mysql&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;选择并拉取你想要的镜像这里拿官方的mysql8进行举例&#34;&gt;选择并拉取你想要的镜像(这里拿官方的mysql8进行举例)&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker pull mysql:8.0&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;查询已下载的mysql镜像&#34;&gt;查询已下载的MySQL镜像&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker images |grep mysql&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;使用镜像创建容器&#34;&gt;使用镜像创建容器&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker run -p 3306:3306 --name mymysql -v $PWD/conf:/etc/mysql/conf.d -v $PWD/logs:/logs -v $PWD/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:8.0&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;解析:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;-p 3306:3306&lt;/code&gt;&lt;/strong&gt;：将容器的 3306 端口映射到主机的 3306 端口。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;-v $PWD/conf:/etc/mysql/conf.d&lt;/code&gt;&lt;/strong&gt;：将主机当前目录下的 &lt;code&gt;conf/my.cnf&lt;/code&gt; 挂载到容器的&lt;code&gt;/etc/mysql/my.cnf&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;-v $PWD/logs:/logs&lt;/code&gt;&lt;/strong&gt;：将主机当前目录下的 logs 目录挂载到容器的 &lt;code&gt;/logs&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;-v $PWD/data:/var/lib/mysql&lt;/code&gt;&lt;/strong&gt; ：将主机当前目录下的&lt;code&gt;data&lt;/code&gt;目录挂载到容器的 &lt;code&gt;/var/lib/mysql&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;**&lt;code&gt;-e MYSQL_ROOT_PASSWORD=123456&lt;/code&gt;：**初始化 root 用户的密码。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;查看容器运行情况&#34;&gt;查看容器运行情况&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker ps&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;优雅关闭&#34;&gt;优雅关闭&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker stop [容器id]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;启动已停止的容器&#34;&gt;启动已停止的容器&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker start [容器id]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;重启容器&#34;&gt;重启容器&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker restart [容器id]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;大功告成&#34;&gt;大功告成&lt;/h2&gt;&#xA;&lt;p&gt;通过以上的一些步骤, 我们完成了Dokcer安装Mysql的目标, 是不是很简单?&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
