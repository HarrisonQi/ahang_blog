<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>国际化 on 阿航的技术小站</title>
    <link>http://localhost:1313/tags/%E5%9B%BD%E9%99%85%E5%8C%96/</link>
    <description>Recent content in 国际化 on 阿航的技术小站</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 22 Apr 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E5%9B%BD%E9%99%85%E5%8C%96/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Flutter 国际化: 多语言处理(Easy localization)</title>
      <link>http://localhost:1313/posts/post/2020/flutter-%E5%9B%BD%E9%99%85%E5%8C%96-%E5%A4%9A%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86easy-localization/</link>
      <pubDate>Wed, 22 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-%E5%9B%BD%E9%99%85%E5%8C%96-%E5%A4%9A%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86easy-localization/</guid>
      <description>&lt;p&gt;语言不互通是困扰了人类几千年的大难题🤐. 许多国外优秀的文学作品、 APP因为没有进行多国语言的处理, 导致发展缓慢甚至停滞. 虽然现在的各大翻译软件已经非常强大了. 但是想象一下: 一个用户一边拿着翻译机一边使用某个软件. 这样恐怕会逼疯用户, 可能会很快的放弃😭😭.&lt;/p&gt;&#xA;&lt;p&gt;如果你的APP有相当一部分用户是来自全球各地, 那么对APP的国际化就是刚需💪.&lt;/p&gt;&#xA;&lt;p&gt;对APP的国际化可以直线提升外国友人用户体验, 顺便会提高你的APP的&amp;quot;逼格&amp;quot;, 用最简单的方式给用户一种&amp;quot;你们的APP很大很强&amp;quot;的感觉😏😏😏.&lt;/p&gt;&#xA;&lt;h2 id=&#34;最终效果&#34;&gt;最终效果&lt;/h2&gt;&#xA;&lt;p&gt;老规矩, 有图有真相. 先来看看我们最终会实现的效果:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/09-2.gif&#34; alt=&#34;Flutter 国际化: 多语言处理(Easy localization)&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;需求&#34;&gt;需求&lt;/h2&gt;&#xA;&lt;p&gt;在做一个事情之前, 我们先来简单的规划一下, 我们的目标是什么, 我们要怎么做:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;提供多种语言处理, 对每部分文本进行单独的翻译.&lt;/li&gt;&#xA;&lt;li&gt;用户可以随时切换语言&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;开始&#34;&gt;开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;第一步-创建flutter-app&#34;&gt;第一步: 创建Flutter APP&lt;/h3&gt;&#xA;&lt;p&gt;这一步不再赘述, 相当基础的东西啦!&lt;/p&gt;&#xA;&lt;h3 id=&#34;第二步-清理项目&#34;&gt;第二步: 清理项目&lt;/h3&gt;&#xA;&lt;h4 id=&#34;删除测试目录&#34;&gt;删除测试目录&lt;/h4&gt;&#xA;&lt;p&gt;删除&lt;code&gt;./lib/test&lt;/code&gt;目录, 因为我们暂时用不上.&lt;/p&gt;&#xA;&lt;h4 id=&#34;清理maindart&#34;&gt;清理main.dart&lt;/h4&gt;&#xA;&lt;p&gt;因为新的Flutter项目中的main会给我们很多用不上的代码, 所以进行替换&lt;code&gt;./lib/main.dart&lt;/code&gt;为:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import &amp;#39;package:flutter/material.dart&amp;#39;;&#xA;&#xA;void main() =&amp;gt; runApp(MyApp());&#xA;&#xA;class MyApp extends StatelessWidget {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return MaterialApp(&#xA;      title: &amp;#39;Flutter 国际化: 多语言处理&amp;#39;,&#xA;      theme: ThemeData(&#xA;        primarySwatch: Colors.blue,&#xA;      ),&#xA;      home: MyHomePage(title: &amp;#39;Hi, 国际化!&amp;#39;),&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;class MyHomePage extends StatefulWidget {&#xA;  MyHomePage({Key key, this.title}) : super(key: key);&#xA;  final String title;&#xA;&#xA;  @override&#xA;  _MyHomePageState createState() =&amp;gt; _MyHomePageState();&#xA;}&#xA;&#xA;class _MyHomePageState extends State {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      appBar: AppBar(&#xA;        title: Text(widget.title),&#xA;      ),&#xA;      body: Center(&#xA;        child: Column(&#xA;          mainAxisAlignment: MainAxisAlignment.center,&#xA;          children: [&#xA;            Text(&#xA;              &amp;#39;你好!&amp;#39;,&#xA;            ),&#xA;          ],&#xA;        ),&#xA;      ),&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;🟢 运行项目, 应该如图所示:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
