<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>阿航的技术小站</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on 阿航的技术小站</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 22 Mar 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java 如何提高代码行数</title>
      <link>http://localhost:1313/posts/post/2023/java-%E5%A6%82%E4%BD%95%E6%8F%90%E9%AB%98%E4%BB%A3%E7%A0%81%E8%A1%8C%E6%95%B0/</link>
      <pubDate>Wed, 22 Mar 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2023/java-%E5%A6%82%E4%BD%95%E6%8F%90%E9%AB%98%E4%BB%A3%E7%A0%81%E8%A1%8C%E6%95%B0/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;公司最近提高了代码行数作为KPI的指标。作为程序员对于这种指标表示非常困惑。&lt;/p&gt;&#xA;&lt;p&gt;通常情况下：&lt;br&gt;&#xA;优秀的程序员 -&amp;gt; 优秀的代码 -&amp;gt; 行数精炼&lt;/p&gt;&#xA;&lt;p&gt;实际情况:&lt;br&gt;&#xA;公司认为的优秀的程序员 -&amp;gt; 行数多&lt;/p&gt;&#xA;&lt;p&gt;十分不解。在此整理下如何快速提高Java代码行数的方法吧。&lt;/p&gt;&#xA;&lt;h2 id=&#34;方法&#34;&gt;方法&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-日志&#34;&gt;1. 日志&lt;/h3&gt;&#xA;&lt;p&gt;在所有方法的出入口增加日志打印。记住&lt;/p&gt;</description>
    </item>
    <item>
      <title>Unity 吸附实现方案</title>
      <link>http://localhost:1313/posts/post/2022/unity-%E5%90%B8%E9%99%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88/</link>
      <pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2022/unity-%E5%90%B8%E9%99%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88/</guid>
      <description>&lt;h2 id=&#34;目标&#34;&gt;目标&lt;/h2&gt;&#xA;&lt;p&gt;一个正在移动的A组件，需要将B组件吸附在A组件上，随之移动&lt;/p&gt;&#xA;&lt;h2 id=&#34;方案&#34;&gt;方案&lt;/h2&gt;&#xA;&lt;p&gt;将B设为A的子物体&lt;/p&gt;</description>
    </item>
    <item>
      <title>Spring Boot 子项目无法找到父项目问题解决</title>
      <link>http://localhost:1313/posts/post/2022/spring-boot-%E5%AD%90%E9%A1%B9%E7%9B%AE%E6%97%A0%E6%B3%95%E6%89%BE%E5%88%B0%E7%88%B6%E9%A1%B9%E7%9B%AE%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2022/spring-boot-%E5%AD%90%E9%A1%B9%E7%9B%AE%E6%97%A0%E6%B3%95%E6%89%BE%E5%88%B0%E7%88%B6%E9%A1%B9%E7%9B%AE%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</guid>
      <description>&lt;h2 id=&#34;场景&#34;&gt;场景&lt;/h2&gt;&#xA;&lt;p&gt;这天在研究SpringBoot父子项目时, 发现子项目无法进行 &lt;code&gt;Maven Install&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;我的项目结构:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;```-父项目 ----公共项目 ----项目A ----项目B```&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;其中, 项目A和项目B要引入公共项目作为依赖&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;p&gt;查看所依赖项目(上文中的&amp;rsquo;公共项目&amp;rsquo;)的&lt;code&gt;pom.xml&lt;/code&gt;是否引入了这个plugin:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupid&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupid&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactid&amp;gt;&lt;/span&gt;spring-boot-maven-plugin&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactid&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;删除后即可成功&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nginx 根据URL入参反向代理至入参值</title>
      <link>http://localhost:1313/posts/post/2022/nginx-%E6%A0%B9%E6%8D%AEurl%E5%85%A5%E5%8F%82%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E8%87%B3%E5%85%A5%E5%8F%82%E5%80%BC/</link>
      <pubDate>Tue, 15 Mar 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2022/nginx-%E6%A0%B9%E6%8D%AEurl%E5%85%A5%E5%8F%82%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E8%87%B3%E5%85%A5%E5%8F%82%E5%80%BC/</guid>
      <description>&lt;h2 id=&#34;场景&#34;&gt;场景&lt;/h2&gt;&#xA;&lt;p&gt;小程序需要下载某平台的资源. 但是白名单域名机制会拦截.&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;p&gt;在nginx中添加配置:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`resolver 8.8.8.8;          location ~/video {       if ($query_string ~*  ^(.*)url=(.*)$){            set $mediaUrl $2;            proxy_pass $mediaUrl;       }     }`&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Linux 出现 too many open files 的处理办法</title>
      <link>http://localhost:1313/posts/post/2021/linux-%E5%87%BA%E7%8E%B0-too-many-open-files-%E7%9A%84%E5%A4%84%E7%90%86%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Tue, 22 Jun 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2021/linux-%E5%87%BA%E7%8E%B0-too-many-open-files-%E7%9A%84%E5%A4%84%E7%90%86%E5%8A%9E%E6%B3%95/</guid>
      <description>&lt;p&gt;今天在使用Hexo generate时出现了&lt;code&gt;oo many open files&lt;/code&gt;这个问题, 在此记录下过程以及解决方案.&lt;/p&gt;&#xA;&lt;h2 id=&#34;环境&#34;&gt;环境&lt;/h2&gt;&#xA;&lt;p&gt;CentOS&lt;/p&gt;&#xA;&lt;h2 id=&#34;排查步骤&#34;&gt;排查步骤&lt;/h2&gt;&#xA;&lt;p&gt;使用此命令获取当前系统打开文件数量:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`lsof | wc -l`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;使用此命令获取打开文件数量上限:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`ulimit -a`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;会返回类似:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`ulimit -a core file size          (blocks, -c) 0 data seg size           (kbytes, -d) unlimited scheduling priority             (-e) 0 file size               (blocks, -f) unlimited pending signals                 (-i) 7268 max locked memory       (kbytes, -l) 64 max memory size         (kbytes, -m) unlimited open files                      (-n) 1024 pipe size            (512 bytes, -p) 8 POSIX message queues     (bytes, -q) 819200 real-time priority              (-r) 0 stack size              (kbytes, -s) 8192 cpu time               (seconds, -t) unlimited max user processes              (-u) 7268 virtual memory          (kbytes, -v) unlimited file locks                      (-x) unlimited`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;其中, &lt;code&gt;open files&lt;/code&gt;的值就为上限. 上方的例子为 1024.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Spring Boot AOP 获取注解中的值</title>
      <link>http://localhost:1313/posts/post/2021/spring-boot-aop-%E8%8E%B7%E5%8F%96%E6%B3%A8%E8%A7%A3%E4%B8%AD%E7%9A%84%E5%80%BC/</link>
      <pubDate>Wed, 12 May 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2021/spring-boot-aop-%E8%8E%B7%E5%8F%96%E6%B3%A8%E8%A7%A3%E4%B8%AD%E7%9A%84%E5%80%BC/</guid>
      <description>&lt;h2 id=&#34;确定需求&#34;&gt;确定需求&lt;/h2&gt;&#xA;&lt;p&gt;首先来确定一下我们的需求:&lt;/p&gt;&#xA;&lt;p&gt;我需要做一个功能, 可以通过注解的方式来使某些controller做一些事情(比如权限校验).&lt;/p&gt;&#xA;&lt;h2 id=&#34;环境&#34;&gt;环境&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;java 8&lt;/li&gt;&#xA;&lt;li&gt;Spring Boot&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;开始&#34;&gt;开始&lt;/h2&gt;&#xA;&lt;p&gt;首先来创建一个注解类&lt;code&gt;MyAnnotation&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`@Target(ElementType.METHOD) @Retention(RetentionPolicy.RUNTIME) public @interface MyAnnotation {      /**      * 注解值(等下要获取并处理该值)      * @return      */     String value() default &amp;quot;&amp;quot;;  }`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;还有处理注解的类&lt;code&gt;MyAnnotaionAspect&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;notice&amp;rdquo;]注意, 需要将下方的@annotation内的值替换为你的注解路径![/epcl_box]&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`import org.aspectj.lang.ProceedingJoinPoint; import org.aspectj.lang.annotation.Around; import org.aspectj.lang.annotation.Aspect; import org.aspectj.lang.reflect.MethodSignature; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import org.springframework.stereotype.Component;  import java.lang.reflect.Method;  @Aspect @Component public class MyAnnotationAspect {      protected static final Logger logger = LoggerFactory.getLogger(MyAnnotationAspect.class);      // TODO 注意这里需要替换为你的注解路径     @Around(&amp;quot;@annotation(com.example.demo.MyAnnotation)&amp;quot;)     public Object doSomething(ProceedingJoinPoint point) throws Throwable {          MethodSignature signature = (MethodSignature) point.getSignature();         Method signatureMethod = signature.getMethod();          MyAnnotation myAnnotation = signatureMethod.getAnnotation(MyAnnotation.class);          String value = myAnnotation.value();                  // 这里就可以打印你的注解值了         System.out.println(value);          return point.proceed();     }  }`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;写一个Controller作为例子:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker传输/复制文件(宿主机与容器)</title>
      <link>http://localhost:1313/posts/post/2021/docker%E4%BC%A0%E8%BE%93-%E5%A4%8D%E5%88%B6%E6%96%87%E4%BB%B6%E5%AE%BF%E4%B8%BB%E6%9C%BA%E4%B8%8E%E5%AE%B9%E5%99%A8/</link>
      <pubDate>Fri, 05 Mar 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2021/docker%E4%BC%A0%E8%BE%93-%E5%A4%8D%E5%88%B6%E6%96%87%E4%BB%B6%E5%AE%BF%E4%B8%BB%E6%9C%BA%E4%B8%8E%E5%AE%B9%E5%99%A8/</guid>
      <description>&lt;p&gt;有时我们并没有配置某文件的映射关系, 当需要调整时, 就需要将文件进行复制. 所以本篇文章来记录下如何在docker容器和宿主机直接传输文件.&lt;/p&gt;&#xA;&lt;h2 id=&#34;开始&#34;&gt;开始&lt;/h2&gt;&#xA;&lt;p&gt;首先来确认下你的容器ID:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`docker ps`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;拿到需要传输文件的容器ID(示例中是&lt;code&gt;bec079&lt;/code&gt;):&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;宿主机向容器传输文件&#34;&gt;宿主机向容器传输文件&lt;/h3&gt;&#xA;&lt;p&gt;先来看下把宿主机的文件传入容器的命令:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker cp 宿主机文件路径 容器ID:容器内目录路径&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;例如:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`docker cp /usr/local/bin/mysql.cnf bec079:/etc/mysql/`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;容器向宿主机传输文件&#34;&gt;容器向宿主机传输文件&lt;/h3&gt;&#xA;&lt;p&gt;类似的, 只需要将公式交换即可:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker cp 容器ID:容器内文件路径 宿主机目录路径&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;例如:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`docker cp bec079:/etc/mysql/mysql.cnf /usr/local/bin/`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;搞定&#34;&gt;搞定!&lt;/h2&gt;</description>
    </item>
    <item>
      <title>pip install 时报错 python setup.py egg_info</title>
      <link>http://localhost:1313/posts/post/2021/pip-install-%E6%97%B6%E6%8A%A5%E9%94%99-python-setup-py-egg_info/</link>
      <pubDate>Mon, 11 Jan 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2021/pip-install-%E6%97%B6%E6%8A%A5%E9%94%99-python-setup-py-egg_info/</guid>
      <description>&lt;p&gt;本篇文章来记录下如何解决 pip install 时报错 python setup.py egg_info 的问题&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;p&gt;安装 Visual C ++ 14.0 :&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.lanzous.com/b0cju0voh&#34; target=&#34;_blank&#34;&gt;https://www.lanzous.com/b0cju0voh&lt;/a&gt;&#xA; 密码: &lt;code&gt;htjy&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;感谢&#34;&gt;感谢&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/89858202&#34; target=&#34;_blank&#34;&gt;在执行 pip install 时遇到错误：python setup.py egg_info &amp;hellip;&lt;/a&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>通过FastJson将对象Object转为Map</title>
      <link>http://localhost:1313/posts/post/2021/%E9%80%9A%E8%BF%87fastjson%E5%B0%86%E5%AF%B9%E8%B1%A1object%E8%BD%AC%E4%B8%BAmap/</link>
      <pubDate>Fri, 08 Jan 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2021/%E9%80%9A%E8%BF%87fastjson%E5%B0%86%E5%AF%B9%E8%B1%A1object%E8%BD%AC%E4%B8%BAmap/</guid>
      <description>&lt;p&gt;本次开发的任务是比对两个对象的属性, 查看有哪些地方不一致. 为了长期考虑, 决定将它们分别转为Map对象, 再遍历该Map, 分别比较键值对来达到效果. 本篇文章记录下如何通过FastJson将对象Object转为Map.&lt;/p&gt;&#xA;&lt;h2 id=&#34;开始&#34;&gt;开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;引入fastjson&#34;&gt;引入FastJson&lt;/h3&gt;&#xA;&lt;p&gt;将&lt;code&gt;version&lt;/code&gt;替换为合适的版本.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`&amp;lt;dependency&amp;gt;     &amp;lt;groupId&amp;gt;com.alibaba&amp;lt;/groupId&amp;gt;     &amp;lt;artifactId&amp;gt;fastjson&amp;lt;/artifactId&amp;gt;     &amp;lt;version&amp;gt;1.2.69&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt;`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;对象转map函数&#34;&gt;对象转map函数&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code&gt;`/**  * 对象转Map  * @param object 要转换的对象  * @return 转换后的Map  */ private Map&amp;lt;String, Object&amp;gt; object2Map(Object object) {     JSONObject jsonObject = (JSONObject) JSON.toJSON(object);     Set&amp;lt;Map.Entry&amp;lt;String, Object&amp;gt;&amp;gt; entrySet = jsonObject.entrySet();     Map&amp;lt;String, Object&amp;gt; map = new HashMap&amp;lt;&amp;gt;();     for (Map.Entry&amp;lt;String, Object&amp;gt; entry : entrySet) {         map.put(entry.getKey(), entry.getValue());     }     return map; }`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;函数--运行测试&#34;&gt;函数 + 运行测试&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code&gt;`import com.alibaba.fastjson.JSON; import com.alibaba.fastjson.JSONObject;  import java.util.HashMap; import java.util.Map; import java.util.Set;  public class FastJsonTest {      public static void main(String[] args) {         // 创建对象         Person person = new Person();         person.setName(&amp;quot;阿航&amp;quot;);         person.setAge(18);         // 转换为Map         Map&amp;lt;String, Object&amp;gt; map = new FastJsonTest().object2Map(person);         // 打印         System.out.println(map.toString());     }      private Map&amp;lt;String, Object&amp;gt; object2Map(Object object) {         JSONObject jsonObject = (JSONObject) JSON.toJSON(object);         Set&amp;lt;Map.Entry&amp;lt;String, Object&amp;gt;&amp;gt; entrySet = jsonObject.entrySet();         Map&amp;lt;String, Object&amp;gt; map = new HashMap&amp;lt;&amp;gt;();         for (Map.Entry&amp;lt;String, Object&amp;gt; entry : entrySet) {             map.put(entry.getKey(), entry.getValue());         }         return map;     }      private static class Person {         private String name;         private Integer age;          public String getName() {             return name;         }          public void setName(String name) {             this.name = name;         }          public Integer getAge() {             return age;         }          public void setAge(Integer age) {             this.age = age;         }     } }`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;运行后打印到控制台:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Maven打包引入外部.jar文件</title>
      <link>http://localhost:1313/posts/post/2020/maven%E6%89%93%E5%8C%85%E5%BC%95%E5%85%A5%E5%A4%96%E9%83%A8-jar%E6%96%87%E4%BB%B6/</link>
      <pubDate>Tue, 22 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/maven%E6%89%93%E5%8C%85%E5%BC%95%E5%85%A5%E5%A4%96%E9%83%A8-jar%E6%96%87%E4%BB%B6/</guid>
      <description>&lt;p&gt;在尝试打包Maven项目, 运行&lt;code&gt;mvn install&lt;/code&gt;命令时, IDEA报了这个错:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`kotlin unresolved reference`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;然后查看该报错指向的行, 是来自外部的jar. 本篇文章就来记录下如何将外部jar打包进入Maven项目.&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;p&gt;将你的&lt;code&gt;*.jar&lt;/code&gt;文件全部移动至&lt;code&gt;项目目录/lib&lt;/code&gt;下. 比如我的springboot项目, 包结构大致是这样的:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/image-3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;然后进入&lt;code&gt;pom.xml&lt;/code&gt;文件, 分别为你的每个jar文件添加依赖, 比如:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`&amp;lt;dependency&amp;gt;     &amp;lt;groupId&amp;gt;com.example&amp;lt;/groupId&amp;gt;     &amp;lt;artifactId&amp;gt;xxx-sdk&amp;lt;/artifactId&amp;gt;     &amp;lt;version&amp;gt;0.0.1&amp;lt;/version&amp;gt;     &amp;lt;scope&amp;gt;system&amp;lt;/scope&amp;gt;     &amp;lt;systemPath&amp;gt;${project.basedir}\lib\xxxx.jar&amp;lt;/systemPath&amp;gt; &amp;lt;/dependency&amp;gt;`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;其中, &lt;code&gt;groupId&lt;/code&gt;、&lt;code&gt;artifactId&lt;/code&gt;以及&lt;code&gt;version&lt;/code&gt;的值你可以随意填写(阿航是参照jar的内容来写).&lt;/p&gt;&#xA;&lt;p&gt;重点是&lt;code&gt;scope&lt;/code&gt;以及&lt;code&gt;systemPath&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;scope标签不能缺少.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;systemPath填写jar所在位置的相对路径. 你直接替换上面的xxxx.jar为你的文件名即可&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>IDEA Spring Boot彩色日志</title>
      <link>http://localhost:1313/posts/post/2020/idea-spring-boot%E5%BD%A9%E8%89%B2%E6%97%A5%E5%BF%97/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/idea-spring-boot%E5%BD%A9%E8%89%B2%E6%97%A5%E5%BF%97/</guid>
      <description>&lt;p&gt;这回在开发Spring Boot应用时, 控制台日志突然变成了黑白. 根本没眼看. 本篇文章就来记录下如何使IDEA日志恢复彩色.&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;p&gt;在IDEA启动命令中添加一条:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`-Dspring.output.ansi.enabled=ALWAYS`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;如图:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/image-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/image-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ERROR: Could not find browser revision</title>
      <link>http://localhost:1313/posts/post/2020/error-could-not-find-browser-revision/</link>
      <pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/error-could-not-find-browser-revision/</guid>
      <description>&lt;p&gt;在使用npm进行开发时, 出现了报错&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`... PuppetPuppeteerBridge start() exception: Error: Could not find browser revision 818858. Run &amp;quot;PUPPETEER_PRODUCT=firefox npm install&amp;quot; or &amp;quot;PUPPETEER_PRODUCT=firefox yarn install&amp;quot; to download a supported Firefox browser binary. ...`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;解决方案:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;删除项目目录中的&lt;code&gt;node_modules&lt;/code&gt;文件&lt;/li&gt;&#xA;&lt;li&gt;重新运行&lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>解决 flutter run: No connected devices</title>
      <link>http://localhost:1313/posts/post/2020/%E8%A7%A3%E5%86%B3-flutter-run-no-connected-devices/</link>
      <pubDate>Sat, 12 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E8%A7%A3%E5%86%B3-flutter-run-no-connected-devices/</guid>
      <description>&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;&#xA;&lt;p&gt;今天在尝试启动flutter项目时碰到了这个问题：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;` flutter run   No connected devices.`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;本篇文章就来记录下解决方案。&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;h3 id=&#34;方案一检查配置&#34;&gt;方案一：检查配置&lt;/h3&gt;&#xA;&lt;p&gt;flutter是个仍在成长的框架，可能出现一些难以排查的bug。如果你之前没有踩过这个坑，在某天突然碰到了，适合进行如下操作。&lt;/p&gt;&#xA;&lt;p&gt;阿航解决疑难杂症的首选方式三部曲：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;运行&lt;code&gt;flutter doctor&lt;/code&gt;，检查是否有出错的条目。&lt;/li&gt;&#xA;&lt;li&gt;运行&lt;code&gt;flutter clean&lt;/code&gt;，清除掉缓存等文件。&lt;/li&gt;&#xA;&lt;li&gt;重启IDE（可以选择“清除缓存并重启”）。&lt;/li&gt;&#xA;&lt;li&gt;重启电脑。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;方案二&#34;&gt;方案二：&lt;/h3&gt;&#xA;&lt;h4 id=&#34;android-真机&#34;&gt;Android 真机&lt;/h4&gt;&#xA;&lt;p&gt;若要在Android设备上进行调试，Android设备版本需要在 4.1（API 16）以上。&lt;/p&gt;&#xA;&lt;p&gt;在设备上启动开发人员选项和USB调试。具体步骤请自行百度。&lt;/p&gt;&#xA;&lt;p&gt;用数据线连接手机和电脑，如果Android设备上出现提示，则授权计算机访问你的手机。&lt;/p&gt;&#xA;&lt;p&gt;在终端中运行&lt;code&gt;flutter devices&lt;/code&gt;命令以验证Flutter是否可以识别你连接的Android设备。&lt;/p&gt;&#xA;&lt;p&gt;运行&lt;code&gt;flutter run&lt;/code&gt;启动你的应用。&lt;/p&gt;&#xA;&lt;h4 id=&#34;安卓虚拟机&#34;&gt;安卓虚拟机&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;在计算机上启动VM加速。&lt;/li&gt;&#xA;&lt;li&gt;启动Android Studio &amp;gt; Tools &amp;gt; Android &amp;gt; AVD Manager and select Create Virtual Device.&lt;/li&gt;&#xA;&lt;li&gt;选择要模拟的Android版本，然后下一步。&lt;/li&gt;&#xA;&lt;li&gt;选择你想模拟的一个或多个系统镜像，建议使用x86或x86_64镜像&lt;/li&gt;&#xA;&lt;li&gt;在 Emulated Performance 选择 Hardware - GLES 2.0 以启动硬件加速。&lt;/li&gt;&#xA;&lt;li&gt;验证AVD配置是否正确，然后选择完成。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h4 id=&#34;连接设备&#34;&gt;连接设备&lt;/h4&gt;&#xA;&lt;p&gt;选择IOS或安卓设备：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/image.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>修改Flutter APP启动图标/Launcher Icon</title>
      <link>http://localhost:1313/posts/post/2020/%E4%BF%AE%E6%94%B9flutter-app%E5%90%AF%E5%8A%A8%E5%9B%BE%E6%A0%87-launcher-icon/</link>
      <pubDate>Thu, 10 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E4%BF%AE%E6%94%B9flutter-app%E5%90%AF%E5%8A%A8%E5%9B%BE%E6%A0%87-launcher-icon/</guid>
      <description>&lt;h2 id=&#34;开门见山&#34;&gt;开门见山&lt;/h2&gt;&#xA;&lt;p&gt;为了简化修改Flutter启动图标的过程, &lt;code&gt;Flutter Launcher Icons&lt;/code&gt;诞生了.&lt;/p&gt;&#xA;&lt;h2 id=&#34;开始&#34;&gt;开始&lt;/h2&gt;&#xA;&lt;p&gt;访问 &lt;a href=&#34;https://pub.dev/packages/flutter_launcher_icons&#34; target=&#34;_blank&#34;&gt;Flutter Launcher Icons 库网址&lt;/a&gt;&#xA; . 访问慢的同学可以使用&lt;a href=&#34;https://pub.flutter-io.cn/packages/flutter_launcher_icons&#34; target=&#34;_blank&#34;&gt;国内镜像&lt;/a&gt;&#xA;.&lt;/p&gt;&#xA;&lt;p&gt;修改你的&lt;code&gt;pubspec.yaml&lt;/code&gt;文件(版本号替换为最新的):&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;` dev_dependencies:   flutter_launcher_icons: ^0.8.1`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;在资源目录中创建你的icon文件, 比如路径&lt;code&gt;assets/icon/icon.png&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;然后再次修改&lt;code&gt;pubspec.yaml&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;` flutter_icons:   android: &amp;quot;launcher_icon&amp;quot;   ios: true   image_path: &amp;quot;assets/icon/icon.png&amp;quot;`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;在终端中分别运行以下命令:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`flutter pub get`&#xA;&#xA;`flutter pub run flutter_launcher_icons:main`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;其他资源&#34;&gt;其他资源&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/fluttercommunity/flutter_launcher_icons/tree/master/example&#34; target=&#34;_blank&#34;&gt;点击此处&lt;/a&gt;&#xA;查看完整示例项目&lt;/li&gt;&#xA;&lt;li&gt;如果使用该库出现任何问题, 请&lt;a href=&#34;https://github.com/fluttercommunity/flutter_launcher_icons/issues&#34; target=&#34;_blank&#34;&gt;提issue&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Flutter 游戏开发 - Flame 系列教程</title>
      <link>http://localhost:1313/posts/page/2020/flame%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B/</link>
      <pubDate>Sat, 24 Oct 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2020/flame%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B/</guid>
      <description></description>
    </item>
    <item>
      <title>MySQL教程 01 什么是MySQL</title>
      <link>http://localhost:1313/posts/post/2020/mysql%E6%95%99%E7%A8%8B-01-%E4%BB%80%E4%B9%88%E6%98%AFmysql/</link>
      <pubDate>Sat, 24 Oct 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/mysql%E6%95%99%E7%A8%8B-01-%E4%BB%80%E4%B9%88%E6%98%AFmysql/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1eT4y1F7cp/&#34; target=&#34;_blank&#34;&gt;点击进入bilibili查看高清教程&lt;/a&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>MySql根据生日计算年龄</title>
      <link>http://localhost:1313/posts/post/2020/mysql%E6%A0%B9%E6%8D%AE%E7%94%9F%E6%97%A5%E8%AE%A1%E7%AE%97%E5%B9%B4%E9%BE%84/</link>
      <pubDate>Sat, 24 Oct 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/mysql%E6%A0%B9%E6%8D%AE%E7%94%9F%E6%97%A5%E8%AE%A1%E7%AE%97%E5%B9%B4%E9%BE%84/</guid>
      <description>&lt;p&gt;这次的需求是需要通过出生日期（年月日）来计算年龄。一句SQL就可以搞定:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`SELECT TIMESTAMPDIFF(YEAR, &#39;2000-01-01&#39;, CURDATE());`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;如果格式是 年-月-日 ，那就使用&lt;code&gt;CONCAT&lt;/code&gt;拼接起来，这么写：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`SELECT TIMESTAMPDIFF(YEAR, CONCAT(2000, &#39;-&#39;, 1, &#39;-&#39;, 1), CURDATE());`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;如果你遇到了更好的解法，欢迎在下方留言哟！&lt;/p&gt;</description>
    </item>
    <item>
      <title>中文网通知Flame</title>
      <link>http://localhost:1313/posts/wp_block/2020/%E6%9C%AA%E5%91%BD%E5%90%8D%E5%8F%AF%E9%87%8D%E7%94%A8%E5%8C%BA%E5%9D%97-5/</link>
      <pubDate>Fri, 21 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/wp_block/2020/%E6%9C%AA%E5%91%BD%E5%90%8D%E5%8F%AF%E9%87%8D%E7%94%A8%E5%8C%BA%E5%9D%97-5/</guid>
      <description>&lt;blockquote&gt;&#xA;    &lt;p&gt;&lt;a href=&#34;https://www.flame-cn.com&#34; target=&#34;_blank&#34;&gt;Flame中文网&lt;/a&gt;&#xA;已建成，欢迎进入&lt;a href=&#34;https://bbs.flame-cn.com&#34; target=&#34;_blank&#34;&gt;Flame中文论坛&lt;/a&gt;&#xA;发帖讨论！&lt;/p&gt;&#xA;  &lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Docker安装Discourse论坛/BBS系统（Nginx）</title>
      <link>http://localhost:1313/posts/post/2020/docker%E5%AE%89%E8%A3%85discourse%E8%AE%BA%E5%9D%9B-bbs%E7%B3%BB%E7%BB%9Fnginx/</link>
      <pubDate>Wed, 19 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/docker%E5%AE%89%E8%A3%85discourse%E8%AE%BA%E5%9D%9B-bbs%E7%B3%BB%E7%BB%9Fnginx/</guid>
      <description>&lt;p&gt;最近要做&lt;a href=&#34;https://flame-cn.com&#34; target=&#34;_blank&#34;&gt;Flame中文站&lt;/a&gt;&#xA;的论坛模块，考虑到技术人社区的重要性，选用了Discourse论坛系统。安装过程相当坎坷，本篇文章就来记录下Docker安装Discourse论坛/BBS系统的全过程。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;先决条件&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;你的服务器/主机已经妥善安装Docker&lt;/li&gt;&#xA;&lt;li&gt;你的服务器/主机已经妥善安装Git&lt;/li&gt;&#xA;&lt;li&gt;掌握Git基础&lt;/li&gt;&#xA;&lt;li&gt;掌握Docker基础&lt;/li&gt;&#xA;&lt;li&gt;掌握Bash基础&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;本篇文章的环境：&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;环境&lt;/th&gt;&#xA;          &lt;th&gt;版本&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;主机&lt;/td&gt;&#xA;          &lt;td&gt;阿里云ECS&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;操作系统&lt;/td&gt;&#xA;          &lt;td&gt;CentOS 7&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;开始&#34;&gt;开始&lt;/h2&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;notice&amp;rdquo;]即使有阿航的教程会较少大部分坑，在国内部署Discourse是仍然是较痛苦的一件事情。可以查询的资料微乎其微，如果你不喜欢折腾，请选用其他的论坛框架！[/epcl_box]&lt;/p&gt;&#xA;&lt;h3 id=&#34;配置&#34;&gt;配置&lt;/h3&gt;&#xA;&lt;p&gt;你的服务器的&lt;strong&gt;必须大于&lt;/strong&gt;以下配置，否则你会无限踩坑：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;双核CPU&lt;/li&gt;&#xA;&lt;li&gt;1 GB 运行内存&lt;/li&gt;&#xA;&lt;li&gt;64位 Linux内核系统&lt;/li&gt;&#xA;&lt;li&gt;已经安装Docker&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;下载discourse&#34;&gt;下载Discourse&lt;/h3&gt;&#xA;&lt;p&gt;创建一个目录，用于存放Discourse。比如：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`mkdir /usr/local/discourse`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;获得管理员权限：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`sudo -s`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;克隆discourse(命令后半段的路径和上方创建的保持一致)：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`git clone &#39;https://github.com/discourse/discourse_docker.git&#39; /usr/local/discourse`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;耐心等待完成。&lt;/p&gt;&#xA;&lt;p&gt;完成后，进入该目录：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`cd /usr/local/discourse`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;修改配置&#34;&gt;修改配置&lt;/h3&gt;&#xA;&lt;p&gt;克隆示例配置文件：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`cp samples/standalone.yml containers/app.yml`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;打开文本编辑器，修改复制后的配置文件：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`vim containers/app.yml`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h4 id=&#34;配置国内镜像&#34;&gt;配置国内镜像&lt;/h4&gt;&#xA;&lt;p&gt;如果你身在大陆，则需要进行镜像加速。找到配置文件中的&lt;code&gt;templates&lt;/code&gt;块，添加国内镜像&lt;code&gt;templates/web.china.template.yml&lt;/code&gt;：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;` templates:   - &amp;quot;templates/postgres.template.yml&amp;quot;   - &amp;quot;templates/redis.template.yml&amp;quot;   - &amp;quot;templates/sshd.template.yml&amp;quot;   - &amp;quot;templates/web.template.yml&amp;quot;   - &amp;quot;templates/web.china.template.yml&amp;quot;`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h4 id=&#34;其他配置&#34;&gt;其他配置&lt;/h4&gt;&#xA;&lt;p&gt;注销或删除掉expose下面的80和443端口：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Homebrew切换国内镜像/切换回官方镜像</title>
      <link>http://localhost:1313/posts/post/2020/homebrew%E5%88%87%E6%8D%A2%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F-%E5%88%87%E6%8D%A2%E5%9B%9E%E5%AE%98%E6%96%B9%E9%95%9C%E5%83%8F/</link>
      <pubDate>Mon, 17 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/homebrew%E5%88%87%E6%8D%A2%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F-%E5%88%87%E6%8D%A2%E5%9B%9E%E5%AE%98%E6%96%B9%E9%95%9C%E5%83%8F/</guid>
      <description>&lt;p&gt;身在大陆，如果不使用国内镜像，每次下载软件都会怀疑人生。本篇文章就来记录下Homebrew如何切换国内镜像/切换回官方镜像。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;先决条件&lt;/h2&gt;&#xA;&lt;p&gt;本篇文章环境：&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;环境&lt;/th&gt;&#xA;          &lt;th&gt;版本&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;MacOS&lt;/td&gt;&#xA;          &lt;td&gt;Catalina 10.15.5&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Homebrew&lt;/td&gt;&#xA;          &lt;td&gt;2.4.9&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;掌握Bash命令&lt;/li&gt;&#xA;&lt;li&gt;已经完整安装Homebrew&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;p&gt;切换Homebrew源非常简单，只要输入几个命令就可以轻松搞定。&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;注意：如果你的MacOS系统的默认终端不是zsh，请把文中出现的所有&lt;code&gt;.zshrc&lt;/code&gt;替换为你的终端的环境变量文件名！&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;h3 id=&#34;切换至中科大国内镜像&#34;&gt;切换至中科大国内镜像&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1-替换brewgit&#34;&gt;1. 替换brew.git&lt;/h4&gt;&#xA;&lt;p&gt;在终端中依次输入以下命令：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`cd &amp;quot;$(brew --repo)&amp;quot;`&#xA;&#xA;`git remote set-url origin &#39;https://mirrors.ustc.edu.cn/brew.git&#39;`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h4 id=&#34;2-替换homebrew-coregit&#34;&gt;2. 替换homebrew-core.git&lt;/h4&gt;&#xA;&lt;p&gt;在终端中依次输入以下命令：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`cd &amp;quot;$(brew --repo)/Library/Taps/homebrew/homebrew-core&amp;quot;`&#xA;&#xA;`git remote set-url origin &#39;https://mirrors.ustc.edu.cn/homebrew-core.git&#39;`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h4 id=&#34;3-替换homebrew-caskgit&#34;&gt;3. 替换homebrew-cask.git&lt;/h4&gt;&#xA;&lt;p&gt;在终端中依次输入以下命令：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`cd &amp;quot;$(brew --repo)/Library/Taps/homebrew/homebrew-cask&amp;quot;`&#xA;&#xA;`git remote set-url origin &#39;https://mirrors.ustc.edu.cn/homebrew-cask.git&#39;`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h4 id=&#34;4-更新brew使配置生效&#34;&gt;4. 更新brew，使配置生效&lt;/h4&gt;&#xA;&lt;p&gt;输入以下命令：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`brew update`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;耐心等待命令行执行，直至完成。&lt;/p&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;success&amp;rdquo;]至此，我们已经成功为brew配置了国内源！享受超高速度吧！[/epcl_box]&lt;/p&gt;&#xA;&lt;h3 id=&#34;切换至官方镜像&#34;&gt;切换至官方镜像&lt;/h3&gt;&#xA;&lt;p&gt;如果你发现国内镜像出了问题，或者外网“顺畅”了，你就需要切换至官方镜像咯。&lt;/p&gt;&#xA;&lt;h4 id=&#34;1-替换brewgit-1&#34;&gt;1. 替换brew.git&lt;/h4&gt;&#xA;&lt;pre&gt;&lt;code&gt;`cd &amp;quot;$(brew --repo)&amp;quot;`&#xA;&#xA;`git remote set-url origin &#39;https://github.com/Homebrew/brew.git&#39;`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h4 id=&#34;2-替换homebrew-coregit-1&#34;&gt;2. 替换homebrew-core.git&lt;/h4&gt;&#xA;&lt;pre&gt;&lt;code&gt;`cd &amp;quot;$(brew --repo)/Library/Taps/homebrew/homebrew-core&amp;quot;`&#xA;&#xA;`git remote set-url origin &#39;https://github.com/Homebrew/homebrew-core.git&#39;`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h4 id=&#34;3-替换homebrew-caskgit-1&#34;&gt;3. 替换homebrew-cask.git&lt;/h4&gt;&#xA;&lt;pre&gt;&lt;code&gt;`cd &amp;quot;$(brew --repo)/Library/Taps/homebrew/homebrew-cask&amp;quot;`&#xA;&#xA;`git remote set-url origin &#39;https://github.com/Homebrew/homebrew-cask.git&#39;`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h4 id=&#34;4-更新brew使配置生效-1&#34;&gt;4. 更新brew，使配置生效&lt;/h4&gt;&#xA;&lt;pre&gt;&lt;code&gt;`brew update`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;别急，还没完成，就剩两步了！&lt;/p&gt;</description>
    </item>
    <item>
      <title>解决NVM报错：“nvm is not compatible with the npm config &#34;prefix&#34; option...”</title>
      <link>http://localhost:1313/posts/post/2020/%E8%A7%A3%E5%86%B3nvm%E6%8A%A5%E9%94%99nvm-is-not-compatible-with-the-npm-config-prefix-option/</link>
      <pubDate>Sat, 15 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E8%A7%A3%E5%86%B3nvm%E6%8A%A5%E9%94%99nvm-is-not-compatible-with-the-npm-config-prefix-option/</guid>
      <description>&lt;p&gt;今天在MacOS上尝试使用NVM切换node版本时出现了如下报错：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;``nvm is not compatible with the npm config &amp;quot;prefix&amp;quot; option:      currently set to &amp;quot;/usr/local/Cellar/nvm/0.35.3/versions/node/v10.21.0&amp;quot; Run `npm config delete prefix`      or `nvm use --delete-prefix v10.21.0` to unset it.``&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;本篇文章就来记录下解决方案。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;先决条件&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;掌握终端命令行基本用法&lt;/li&gt;&#xA;&lt;li&gt;掌握node，npm基本概念&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;本篇文章的环境：&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;环境&lt;/th&gt;&#xA;          &lt;th&gt;版本&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;MacOS&lt;/td&gt;&#xA;          &lt;td&gt;Catalina 10.15.5&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;nvm&lt;/td&gt;&#xA;          &lt;td&gt;0.35.3&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;node&lt;/td&gt;&#xA;          &lt;td&gt;v14.6.0&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;npm&lt;/td&gt;&#xA;          &lt;td&gt;6.14.7&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;p&gt;解决方案非常简单。只需在终端中依次输入以下命令即可：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`npm config delete prefix`&#xA;&#xA;`npm config set prefix $NVM_DIR/versions/node/v6.11.1`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;credit&#34;&gt;Credit&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/34718528/nvm-is-not-compatible-with-the-npm-config-prefix-option&#34; target=&#34;_blank&#34;&gt;nvm is not compatible with the npm config “prefix” option&lt;/a&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>解决IDEA打开Vue/React/Node项目卡顿卡死的问题</title>
      <link>http://localhost:1313/posts/post/2020/%E8%A7%A3%E5%86%B3idea%E6%89%93%E5%BC%80vue-react-node%E9%A1%B9%E7%9B%AE%E5%8D%A1%E9%A1%BF%E5%8D%A1%E6%AD%BB%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Thu, 13 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E8%A7%A3%E5%86%B3idea%E6%89%93%E5%BC%80vue-react-node%E9%A1%B9%E7%9B%AE%E5%8D%A1%E9%A1%BF%E5%8D%A1%E6%AD%BB%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;p&gt;这回因为需要查看同事的前端React项目，所以从版本控制仓库下载后准备打开。使用的依旧是地表最强IDE，IntelliJ IDEA。 但是打开以后，进行&lt;code&gt;npm install&lt;/code&gt;以后IDEA整个卡死了！本篇文章就来记录下如何解决IDEA打开Vue/React/Node项目卡顿卡死的问题。&lt;/p&gt;&#xA;&lt;h2 id=&#34;问题原因&#34;&gt;问题原因&lt;/h2&gt;&#xA;&lt;p&gt;当然不是IDEA软件本身的问题（毕竟这软件这么贵），而是node项目会出现&lt;code&gt;node_modules&lt;/code&gt;目录，放着前端项目使用的库。此目录相当庞大，所以如果不进行设置，会让IDEA累到不行，甚至“累死”。&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;h3 id=&#34;启动仍然卡死&#34;&gt;启动仍然卡死&lt;/h3&gt;&#xA;&lt;p&gt;如果你打不开项目了，并且每次打开都直接卡死，那么有两种方案：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;直接重命名你的项目，改名后，IDEA就找不到项目了。这样我们可以进行设置。&lt;/li&gt;&#xA;&lt;li&gt;删除项目目录的&lt;code&gt;.idea&lt;/code&gt;目录。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;设置忽略文件导入&#34;&gt;设置忽略文件导入&lt;/h3&gt;&#xA;&lt;p&gt;打开设置&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Windows: &lt;code&gt;File&lt;/code&gt; -&amp;gt; &lt;code&gt;Settings&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Mac：左上角的&lt;code&gt;Intellij IDEA&lt;/code&gt; -&amp;gt; &lt;code&gt;Preferences&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;找到&lt;code&gt;Editor&lt;/code&gt; -&amp;gt; &lt;code&gt;File Types&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E8%A7%A3%E5%86%B3IDEA%E6%89%93%E5%BC%80VueReactNode%E9%A1%B9%E7%9B%AE%E5%8D%A1%E9%A1%BF%E5%8D%A1%E6%AD%BB%E7%9A%84%E9%97%AE%E9%A2%98-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;可以看到下方有一个输入框&lt;code&gt;Ignore files and folders&lt;/code&gt;，在下面添加一条：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`node_modules;`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;点击保存。&lt;/p&gt;</description>
    </item>
    <item>
      <title>MacOS 安装 Homebrew 并替换国内源</title>
      <link>http://localhost:1313/posts/post/2020/macos-%E5%AE%89%E8%A3%85-homebrew-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/</link>
      <pubDate>Tue, 11 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/macos-%E5%AE%89%E8%A3%85-homebrew-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B/</guid>
      <description>&lt;p&gt;因为最近刚刚换的Macbook，所以需要部署之前的开发环境。部署一部分以后发现很多都建议使用&lt;code&gt;brew&lt;/code&gt;命令进行安装。本篇文章就来记录下MacOS如何安装Homebrew。&lt;/p&gt;&#xA;&lt;h2 id=&#34;什么是homebrew&#34;&gt;什么是Homebrew&lt;/h2&gt;&#xA;&lt;p&gt;Homebrew是一个包管理器，方便管理你的软件（安装、升级与卸载）。&lt;/p&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]联想一下你安装手机应用时一般都会打开应用商店而不是去每个网站下载，你就很快能够理解它的重要性了。[/epcl_box]&lt;/p&gt;&#xA;&lt;h2 id=&#34;安装homebrew&#34;&gt;安装Homebrew&lt;/h2&gt;&#xA;&lt;h3 id=&#34;海外安装&#34;&gt;海外安装&lt;/h3&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;如果你是大陆用户，请直接跳转至下方的“大陆安装”。&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;如果你身在国外，安装Homebrew非常简单，只需要运行以下命令：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`/bin/bash -c &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&amp;quot;`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;如果返回：&lt;code&gt;curl: (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused&lt;/code&gt;欢迎查看阿航写的教程&lt;a href=&#34;https://www.bugcatt.com/archives/2485&#34; target=&#34;_blank&#34;&gt;《一步解决 Failed to connect to raw.githubusercontent.com port 443: Connection refused》&lt;/a&gt;&#xA;。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;耐心等待一会儿，直到终端中提示：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`Press RETURN to continue or any other key to abort`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;点击回车(&lt;code&gt;ENTER&lt;/code&gt;)键继续，然后继续耐心等待。&lt;/p&gt;&#xA;&lt;h3 id=&#34;大陆安装&#34;&gt;大陆安装&lt;/h3&gt;&#xA;&lt;p&gt;因为国内的外网环境很差，如果按照正常的方法安装，恐怕要到猴年马月去。这里给大家提供加速的方法。&lt;/p&gt;&#xA;&lt;h4 id=&#34;访问官网&#34;&gt;访问官网&lt;/h4&gt;&#xA;&lt;p&gt;访问&lt;a href=&#34;https://brew.sh/index_zh-cn&#34; target=&#34;_blank&#34;&gt;Homebrew官网&lt;/a&gt;&#xA;，可以看到：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/MacOS-%E5%AE%89%E8%A3%85-Homebrew-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B-01-1500x1143.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;复制下方命令行中的链接：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/MacOS-%E5%AE%89%E8%A3%85-Homebrew-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B-02-1500x1143.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;在浏览器中访问该链接，并复制网页上的全部内容（如果电脑无法访问，可尝试在手机上访问）：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/MacOS-%E5%AE%89%E8%A3%85-Homebrew-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B-03-1500x1143.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;粘贴至文本编辑器：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/MacOS-%E5%AE%89%E8%A3%85-Homebrew-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B-04-1500x1066.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;找到其中的&lt;code&gt;BREW_REPO&lt;/code&gt;参数，替换值为&lt;code&gt;git://mirrors.ustc.edu.cn/brew.git&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/MacOS-%E5%AE%89%E8%A3%85-Homebrew-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B-05-1500x1066.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;保存至电脑：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/MacOS-%E5%AE%89%E8%A3%85-Homebrew-%E5%AE%8C%E6%95%B4%E6%95%99%E7%A8%8B-06-1500x932.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;打开终端，为刚才的文件赋予权限（替换&lt;code&gt;~/install_homebrew.sh&lt;/code&gt;为你刚才保存文件的路径）：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`chmod +x ~/install_homebrew.sh`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;运行以下命令（仍然替换&lt;code&gt;~/install_homebrew.sh&lt;/code&gt;为你刚才保存文件的路径）：&lt;/p&gt;</description>
    </item>
    <item>
      <title>一步解决 Failed to connect to raw.githubusercontent.com port 443: Connection refused</title>
      <link>http://localhost:1313/posts/post/2020/%E4%B8%80%E6%AD%A5%E8%A7%A3%E5%86%B3-failed-to-connect-to-raw-githubusercontent-com-port-443-connection-refused/</link>
      <pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E4%B8%80%E6%AD%A5%E8%A7%A3%E5%86%B3-failed-to-connect-to-raw-githubusercontent-com-port-443-connection-refused/</guid>
      <description>&lt;p&gt;今天在尝试安装&lt;code&gt;Homebrew&lt;/code&gt;时碰到这个问题，本篇文章就来记录下如何一步解决 Failed to connect to raw.githubusercontent.com port 443: Connection refused。&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;h3 id=&#34;方案一修改dns&#34;&gt;方案一：修改DNS&lt;/h3&gt;&#xA;&lt;p&gt;修改你的电脑DNS为Google的&lt;code&gt;8.8.8.8&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;👉 &lt;a href=&#34;https://www.bugcatt.com/archives/2486&#34; target=&#34;_blank&#34;&gt;点击这里&lt;/a&gt;&#xA;查看Mac修改DNS教程&lt;/p&gt;&#xA;&lt;h3 id=&#34;方案二修改代理需科学上网&#34;&gt;方案二：修改代理（需科学上网）&lt;/h3&gt;&#xA;&lt;p&gt;此方法仅限于已经可以科学上网的同学。&lt;/p&gt;&#xA;&lt;p&gt;在终端中输入以下命令行（&lt;code&gt;7890&lt;/code&gt; 和 &lt;code&gt;789&lt;/code&gt; 需要换成你自己的端口）：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`export https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:789`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;再次尝试连接，应该可以了！&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;此方法有一个小小的缺陷，那就是运行完上面的命令行会导致终端的命令都处于外网状态。当然，解决方案就是&lt;strong&gt;终止当前Session会话&lt;/strong&gt;或者&lt;strong&gt;直接关闭终端窗口&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;小缺点&lt;/strong&gt;及解决方案&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;h2 id=&#34;感谢&#34;&gt;感谢&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/115450863&#34; target=&#34;_blank&#34;&gt;Failed to connect to raw.githubusercontent.com:443&lt;/a&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>MacOS修改DNS设置</title>
      <link>http://localhost:1313/posts/post/2020/macos%E4%BF%AE%E6%94%B9dns%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Fri, 07 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/macos%E4%BF%AE%E6%94%B9dns%E8%AE%BE%E7%BD%AE/</guid>
      <description>&lt;p&gt;有时修改DNS，就能访问某些原本被禁止的网站。本篇文章就来记录下如何修改MacOS的DNS设置。&lt;/p&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;修改dns&#34;&gt;修改DNS&lt;/h3&gt;&#xA;&lt;p&gt;点击左上角的🍎图标，找到系统偏好设置：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Mac%E4%BF%AE%E6%94%B9DNS-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;找到网络：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Mac%E4%BF%AE%E6%94%B9DNS-02-1500x1494.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;选中当前的网络连接，并点击右下角的&lt;code&gt;高级&lt;/code&gt;按钮:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Mac%E4%BF%AE%E6%94%B9DNS-03-1500x1298.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;在高级设置中，选中&lt;code&gt;DNS&lt;/code&gt;标签，并点击左下角的&lt;code&gt;+&lt;/code&gt;号按钮添加DNS。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Mac%E4%BF%AE%E6%94%B9DNS-04.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这里附上部分公共DNS，供你参考：&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;名称&lt;/th&gt;&#xA;          &lt;th&gt;DNS1&lt;/th&gt;&#xA;          &lt;th&gt;DNS2&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;114 DNS&lt;/td&gt;&#xA;          &lt;td&gt;114.114.114.114&lt;/td&gt;&#xA;          &lt;td&gt;114.114.115.115&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Google DNS&lt;/td&gt;&#xA;          &lt;td&gt;8.8.8.8&lt;/td&gt;&#xA;          &lt;td&gt;8.8.4.4&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;阿里 AliDNS&lt;/td&gt;&#xA;          &lt;td&gt;223.5.5.5&lt;/td&gt;&#xA;          &lt;td&gt;223.6.6.6&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;百度 BaiduDNS&lt;/td&gt;&#xA;          &lt;td&gt;180.76.76.76&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;DNSPod DNS+&lt;/td&gt;&#xA;          &lt;td&gt;119.29.29.29&lt;/td&gt;&#xA;          &lt;td&gt;182.254.116.116&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;完成后&lt;strong&gt;别忘了进行保存&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;h3 id=&#34;刷新dns缓存&#34;&gt;刷新DNS缓存&lt;/h3&gt;&#xA;&lt;p&gt;如果保存完成后并未生效（多数会实时生效），你可以尝试输入以下命令刷新DNS缓存。&lt;/p&gt;&#xA;&lt;h4 id=&#34;os-x-yosemite及后面的版本&#34;&gt;OS X Yosemite及后面的版本&lt;/h4&gt;&#xA;&lt;p&gt;适用于 OS X v10.10.4 及以后的版本：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`sudo killall -HUP mDNSResponder`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;适用于 OS X v10.10 到 v10.10.3 之间:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`sudo discoveryutil mdnsflushcache`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h4 id=&#34;os-x-mavericks-mountain-lion-和-lion&#34;&gt;OS X Mavericks, Mountain Lion, 和 Lion&lt;/h4&gt;&#xA;&lt;p&gt;适用于 OS X v10.9.5 及更早：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter 调整 Switch 组件尺寸</title>
      <link>http://localhost:1313/posts/post/2020/flutter-%E8%B0%83%E6%95%B4-switch-%E7%BB%84%E4%BB%B6%E5%B0%BA%E5%AF%B8/</link>
      <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-%E8%B0%83%E6%95%B4-switch-%E7%BB%84%E4%BB%B6%E5%B0%BA%E5%AF%B8/</guid>
      <description>&lt;p&gt;默认的Switch组件并没有提供类似&lt;code&gt;Size&lt;/code&gt;或者&lt;code&gt;Height&lt;/code&gt;,&lt;code&gt;Weight&lt;/code&gt;等参数。本篇文章就来记录下Flutter如何调整Switch组件尺寸。&lt;/p&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;普通的switch&#34;&gt;普通的Switch&lt;/h3&gt;&#xA;&lt;p&gt;通常，我们声明一个Switch组件会这样写。运行以下代码：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;` import &#39;package:flutter/material.dart&#39;;  void main() =&amp;gt; runApp(MyApp());  class MyApp extends StatelessWidget {   @override   Widget build(BuildContext context) {     return MaterialApp(       title: &#39;Switch Size&#39;,       home: MyHomePage(),     );   } }  class MyHomePage extends StatefulWidget {   MyHomePage({Key key}) : super(key: key);    @override   _MyHomePageState createState() =&amp;gt; _MyHomePageState(); }  class _MyHomePageState extends State {   bool _enabled = true;    @override   Widget build(BuildContext context) {     return Scaffold(         appBar: AppBar(           title: Text(&#39;Switch Size&#39;),         ),         body: Center(           child: Column(             mainAxisAlignment: MainAxisAlignment.center,             children: [               Switch(                   value: _enabled,                   onChanged: (bool) {                     _enabled = bool;                     setState(() {});                   }),             ],           ),         ));   } }`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;🟢 运行项目, 可以看到一个朴实无华的Switch：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Access denied for user</title>
      <link>http://localhost:1313/posts/post/2020/access-denied-for-user/</link>
      <pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/access-denied-for-user/</guid>
      <description>&lt;p&gt;在开发的过程中坎坷不断。今天在Spring Boot中碰到了这个异常：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`Caused by: com.mysql.cj.exceptions.CJException: Access denied for user &#39;root&#39;@&#39;localhost&#39; (using password: YES)`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;本篇文章就来记录下可能的情况以及解决方案。&lt;/p&gt;&#xA;&lt;h2 id=&#34;问题原因&#34;&gt;问题原因&lt;/h2&gt;&#xA;&lt;p&gt;问题的根源就在数据库登陆上。肯定是账号和密码有误，所以我们要仔细检查配置文件，有以下几个地方容易出错：&lt;/p&gt;&#xA;&lt;h3 id=&#34;情况一检查配置文件是否包含空格&#34;&gt;情况一：检查配置文件是否包含空格&lt;/h3&gt;&#xA;&lt;p&gt;因为application.yml似乎并不会给我们的配置文件进行去空格处理，所以我们来仔细检查。配置文件人模人样的，看起来没啥问题：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Access-denied-for-user-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;结果一选中：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Access-denied-for-user-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;呵！其实不然。所以一定要&lt;strong&gt;去除多余的空格&lt;/strong&gt;！&lt;/p&gt;&#xA;&lt;h3 id=&#34;情况二检查username和password值是否写反&#34;&gt;情况二：检查username和password值是否写反&lt;/h3&gt;&#xA;&lt;p&gt;因为26个字母中&lt;code&gt;u&lt;/code&gt;在&lt;code&gt;p&lt;/code&gt;的后面，所以默认的yml排序中&lt;code&gt;username&lt;/code&gt;会在&lt;code&gt;password&lt;/code&gt;下面。阿航就是踩了这个坑！以为用户名在上方，导致写反！&lt;/p&gt;&#xA;&lt;h3 id=&#34;情况三检查ip是否正确&#34;&gt;情况三：检查IP是否正确&lt;/h3&gt;&#xA;&lt;p&gt;如果确定账户密码正确，我们就来看看IP是否有误吧。&lt;/p&gt;&#xA;&lt;p&gt;在数据库中输入以下SQL进行查询（这里以MySQL为例）：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;` SELECT &#x9;CONCAT( USER, &#39;@&#39;, HOST ) Result FROM &#x9;mysql.USER;`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;查看返回结果是否包含你的报错。如果不包含就说明你的IP未被创建。&lt;/p&gt;&#xA;&lt;h3 id=&#34;情况四检查数据库服务器配置&#34;&gt;情况四：检查数据库服务器配置&lt;/h3&gt;&#xA;&lt;p&gt;使用其他的软件连接你的数据库（如Navicat），使用相同的用户名和密码看看能否登陆。如果不能登陆则是数据库层的问题，与代码无关了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;&#xA;&lt;p&gt;总之，解决方案就是细心。。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Spring Boot Swagger-UI 404</title>
      <link>http://localhost:1313/posts/post/2020/spring-boot-swagger-ui-404/</link>
      <pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/spring-boot-swagger-ui-404/</guid>
      <description>&lt;p&gt;这几天换了新的设备用于开发。启动项目后访问swagger地址，发现空空如也。本篇文章就来记录下Spring Boot Swagger-UI 404的可能原因及解决方案。&lt;/p&gt;&#xA;&lt;h2 id=&#34;先决条件&#34;&gt;先决条件&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;掌握Java开发&lt;/li&gt;&#xA;&lt;li&gt;掌握SpringBoot框架&lt;/li&gt;&#xA;&lt;li&gt;掌握Swagger框架及相应配置&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;阿航的项目环境：&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;环境&lt;/th&gt;&#xA;          &lt;th&gt;版本&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;JDK&lt;/td&gt;&#xA;          &lt;td&gt;14&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;SpringBoot&lt;/td&gt;&#xA;          &lt;td&gt;2.1.13.RELEASE&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Swagger&lt;/td&gt;&#xA;          &lt;td&gt;2.9.2&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;问题原因&#34;&gt;问题原因&lt;/h2&gt;&#xA;&lt;p&gt;在网上翻了个遍，众说纷纭。记录下我找到的情况以及对应的解决方案。&lt;/p&gt;&#xA;&lt;h3 id=&#34;情况一检查swagger是否限制环境&#34;&gt;情况一：检查Swagger是否限制环境&lt;/h3&gt;&#xA;&lt;p&gt;很明显我们在生产环境不太希望将完整的接口文档暴露出来，我们通常会通过&lt;code&gt;@Profile&lt;/code&gt;进行限制，比如：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`@EnableSwagger2 @Configuration @Profile(&amp;quot;dev&amp;quot;) class SwaggerConfig { ...`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;上面的&lt;code&gt;@Profile&lt;/code&gt;的值就是限制了我们仅在哪些环境中展示Swagger。&lt;/p&gt;&#xA;&lt;p&gt;所以，&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;检查你的环境是否在&lt;code&gt;@Profile&lt;/code&gt;内部。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;情况二绑定静态资源文件&#34;&gt;情况二：绑定静态资源文件&lt;/h3&gt;&#xA;&lt;p&gt;在你的Swagger配置文件中（或任何注入Bean的类中）添加：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`@Override protected void addResourceHandlers(ResourceHandlerRegistry registry) {     // 解决静态资源无法访问     registry.addResourceHandler(&amp;quot;/**&amp;quot;)             .addResourceLocations(&amp;quot;classpath:/static/&amp;quot;);     // 解决swagger无法访问     registry.addResourceHandler(&amp;quot;/swagger-ui.html&amp;quot;)             .addResourceLocations(&amp;quot;classpath:/META-INF/resources/&amp;quot;);     // 解决swagger的js文件无法访问     registry.addResourceHandler(&amp;quot;/webjars/**&amp;quot;)             .addResourceLocations(&amp;quot;classpath:/META-INF/resources/webjars/&amp;quot;); }`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;此方法存在争议，因为新版本的SpringBoot和Swagger并不需要该配置。&lt;/p&gt;</description>
    </item>
    <item>
      <title>org.apache.ibatis.binding.BindingException: Invalid bound statement (not found)</title>
      <link>http://localhost:1313/posts/post/2020/org-apache-ibatis-binding-bindingexception-invalid-bound-statement-not-found/</link>
      <pubDate>Thu, 30 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/org-apache-ibatis-binding-bindingexception-invalid-bound-statement-not-found/</guid>
      <description>&lt;p&gt;在使用Mybatis进行开发时， 出现了这样的报错：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`org.apache.ibatis.binding.BindingException:      Invalid bound statement (not found)`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;本篇文章就来记录下碰到上述问题的几种解决方案。&lt;/p&gt;&#xA;&lt;h2 id=&#34;情况&#34;&gt;情况&lt;/h2&gt;&#xA;&lt;p&gt;比如我们有Mapper文件&lt;code&gt;UserMapper.java&lt;/code&gt;及其对应的&lt;code&gt;UserMapper.xml&lt;/code&gt;文件&lt;/p&gt;&#xA;&lt;p&gt;这里列举出一些可能出现的情况以及对应的解决方案：&lt;/p&gt;&#xA;&lt;h3 id=&#34;情况一mapperxml的namespace有误&#34;&gt;情况一：Mapper.xml的namespace有误&lt;/h3&gt;&#xA;&lt;p&gt;找到你的&lt;code&gt;mapper.xml&lt;/code&gt;文件，找到类似这一行：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`&amp;lt;!DOCTYPE mapper PUBLIC &amp;quot;-//mybatis.org//DTD Mapper 3.0//EN&amp;quot; &amp;quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&amp;quot;&amp;gt; &amp;lt;mapper namespace=&amp;quot;com.bugcatt.mapper.UserMapper&amp;quot;&amp;gt;  &amp;lt;/mapper&amp;gt;`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;仔细检查&lt;code&gt;namespace&lt;/code&gt;的值是否对应正确的路径。&lt;/p&gt;&#xA;&lt;h3 id=&#34;情况二mapper的函数未在mapperxml定义&#34;&gt;情况二：Mapper的函数未在Mapper.xml定义&lt;/h3&gt;&#xA;&lt;p&gt;检查你的UserMapper中的函数/方法，是否已在&lt;code&gt;Mapper.xml&lt;/code&gt;中定义或名称有误。如果未定义 或者函数名不同请订正。&lt;/p&gt;&#xA;&lt;h3 id=&#34;情况三查询返回值类型未妥善处理&#34;&gt;情况三：查询返回值类型未妥善处理&lt;/h3&gt;&#xA;&lt;p&gt;比如你在&lt;code&gt;UserMapper&lt;/code&gt;中定义了函数的返回值是&lt;code&gt;List&amp;lt;User&amp;gt;&lt;/code&gt;类型，但是你在&lt;code&gt;UserMapper.xml&lt;/code&gt;中未正确配置&lt;code&gt;ResultMap&lt;/code&gt;或&lt;code&gt;ResultType&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;h3 id=&#34;情况三mapperxml路径配置&#34;&gt;情况三：mapper.xml路径配置&lt;/h3&gt;&#xA;&lt;p&gt;在你的spring-boot配置文件中查看你的xml配置：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;` mybatis:   # 配置mapper.xml文件路径   mapper-locations: &#39;classpath*:/**/mapper/**Mapper.xml&#39;   # 配置映射类包名   type-aliases-package: com.bugcatt.domain`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;如果你使用的是&lt;code&gt;Mybatis-Plus&lt;/code&gt;，配置为：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;` mybatis-plus:   # 配置mapper.xml文件路径   mapper-locations: &#39;classpath*:/**/mapper/**Mapper.xml&#39;   # 配置映射类包名   type-aliases-package: com.bugcatt.domain`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;情况四mapperjava文件和mapperxml文件不同名&#34;&gt;情况四：Mapper.java文件和Mapper.xml文件不同名&lt;/h3&gt;&#xA;&lt;p&gt;比如你的文件分别为&lt;code&gt;UserMapper.java&lt;/code&gt;和&lt;code&gt;UserrrMapper.xml&lt;/code&gt;（不同名）将它们的名称改为一致试试看。&lt;/p&gt;&#xA;&lt;p&gt;此方法存在争议。部分同学不同名也可以运行。&lt;/p&gt;&#xA;&lt;h3 id=&#34;情况五maven未将mapperxml打进包内&#34;&gt;情况五：maven未将mapper.xml打进包内&lt;/h3&gt;&#xA;&lt;p&gt;这种情况可能出现在你未将&lt;code&gt;mapper.xml&lt;/code&gt;放进传统的资源目录中，导致maven编译打包时忽略了你的mapper.xml文件。解决此问题需要在maven配置文件&lt;code&gt;pom.xml&lt;/code&gt;中添加：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`&amp;lt;build&amp;gt;           &amp;lt;resources&amp;gt;                   &amp;lt;resource&amp;gt;                            &amp;lt;directory&amp;gt;src/main/java&amp;lt;/directory&amp;gt;                            &amp;lt;includes&amp;gt;                                    &amp;lt;include&amp;gt;**/*.xml&amp;lt;/include&amp;gt;                         &amp;lt;/includes&amp;gt;         &amp;lt;/resource&amp;gt;     &amp;lt;/resources&amp;gt; &amp;lt;/build&amp;gt;`&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>搜狗输入法（或任何输入法）转Mac OS 拼音输入法</title>
      <link>http://localhost:1313/posts/post/2020/%E6%90%9C%E7%8B%97%E8%BE%93%E5%85%A5%E6%B3%95%E6%88%96%E4%BB%BB%E4%BD%95%E8%BE%93%E5%85%A5%E6%B3%95%E8%BD%ACmac-os-%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5%E6%B3%95/</link>
      <pubDate>Tue, 28 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E6%90%9C%E7%8B%97%E8%BE%93%E5%85%A5%E6%B3%95%E6%88%96%E4%BB%BB%E4%BD%95%E8%BE%93%E5%85%A5%E6%B3%95%E8%BD%ACmac-os-%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5%E6%B3%95/</guid>
      <description>&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]本片文章不仅适用于搜狗输入法，也同样支持很多主流输入法。[/epcl_box]&lt;/p&gt;&#xA;&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;&#xA;&lt;p&gt;阿航最近购买了新的Macbook电脑。此前一直使用的是搜狗输入法，自然也在mac上安装了搜狗输入法Mac版。但是用了两天，发现&lt;strong&gt;并不好用&lt;/strong&gt;。当把Mac自带的拼音输入法删除，替换为搜狗输入法时，偶尔会出现默认输入法变为了Abc输入法。导致快捷键紊乱。本篇文章就来记录下搜狗输入法转MacOS的拼音输入法。&lt;/p&gt;&#xA;&lt;h2 id=&#34;确定目标&#34;&gt;确定目标&lt;/h2&gt;&#xA;&lt;p&gt;搜狗输入法上什么最值钱？是皮肤吗？唔。。我个人感觉花里胡哨的皮肤反而会降低效率。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;是词库、输入习惯、输入历史。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;所以我们要解决的是啥？那就是想方设法把搜狗输入法的词库以及输入历史导入到Mac拼音输入法中。&lt;/p&gt;&#xA;&lt;h2 id=&#34;开始&#34;&gt;开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;深蓝词库&#34;&gt;深蓝词库&lt;/h3&gt;&#xA;&lt;p&gt;阿航在不断的摸索中，终于找到了这一款非常牛的开源项目。名叫深蓝词库。&lt;/p&gt;&#xA;&lt;p&gt;👉 &lt;a href=&#34;https://github.com/studyzy/imewlconverter&#34; target=&#34;_blank&#34;&gt;Github仓库地址&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;我们将会使用深蓝词库，将搜狗输入法的词库导出并转化为Mac拼音输入法的词库。&lt;/p&gt;&#xA;&lt;h3 id=&#34;注意&#34;&gt;注意&lt;/h3&gt;&#xA;&lt;p&gt;因为深蓝词库的编写语言是C#。所以在Windows环境上操作将会减免许多麻烦。所以本片文章将会在Windows上进行操作。也强烈建议你使用Windows设备操作（没有Windows的话可以在Mac上运行虚拟机）。&lt;/p&gt;&#xA;&lt;h3 id=&#34;下载深蓝词库&#34;&gt;下载深蓝词库&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/studyzy/imewlconverter/releases/tag/v2.9.0&#34; target=&#34;_blank&#34;&gt;点击此处&lt;/a&gt;&#xA;跳转深蓝词库下载页，或者直接&lt;a href=&#34;https://github.com/studyzy/imewlconverter/releases/download/v2.9.0/imewlconverter_Windows.zip&#34; target=&#34;_blank&#34;&gt;点此下载2.9.0版本&lt;/a&gt;&#xA;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E8%BD%ACMac-OS-%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5%E6%B3%95-01-1500x646.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;下载完成后，解压缩或直接双击&lt;code&gt;exe&lt;/code&gt;文件：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E8%BD%ACMac-OS-%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5%E6%B3%95-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;打开后看到一个非常简约的界面：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E8%BD%ACMac-OS-%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5%E6%B3%95-03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;再放上简单使用说明：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E8%BD%ACMac-OS-%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5%E6%B3%95-04.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]相信速度快的同学已经知道自己该怎么做了！[/epcl_box]&lt;/p&gt;&#xA;&lt;h3 id=&#34;导出原输入法词库&#34;&gt;导出原输入法词库&lt;/h3&gt;&#xA;&lt;p&gt;我们进入原输入法（这里以搜狗为例），右键输入法，点击属性设置：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E8%BD%ACMac-OS-%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5%E6%B3%95-05.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;依次点击：词库 -&amp;gt; 中文用户词库下拉按钮 -&amp;gt; 导出/备份：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E8%BD%ACMac-OS-%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5%E6%B3%95-06.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;导出后应该会得到一个类似&lt;code&gt;搜狗词库备份_xx.bin&lt;/code&gt;的文件。&lt;/p&gt;&#xA;&lt;h3 id=&#34;使用深蓝词库转换&#34;&gt;使用深蓝词库转换&lt;/h3&gt;&#xA;&lt;p&gt;回到深蓝词库，将刚才导出的词库文件拖动进入深蓝词库窗口：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E8%BD%ACMac-OS-%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5%E6%B3%95-07.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;可以看到，原词库类型被自动选好。&lt;/p&gt;&#xA;&lt;p&gt;紧接着，右边选择我们的目标输入法词库&amp;ndash;Mac简体拼音：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E8%BD%ACMac-OS-%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5%E6%B3%95-08.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;然后点击转换，观察左下角进度。耐心等待转换完成：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E8%BD%ACMac-OS-%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5%E6%B3%95-09.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;转换完成后，软件会提示你是否保存：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E8%BD%ACMac-OS-%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5%E6%B3%95-10.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;词库文件转移并重命名&#34;&gt;词库文件转移并重命名&lt;/h3&gt;&#xA;&lt;p&gt;把保存的文件传输到Mac上。&lt;/p&gt;&#xA;&lt;p&gt;将导出的文件后缀名改为&lt;code&gt;.plist&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;h3 id=&#34;打开mac拼音设置&#34;&gt;打开Mac拼音设置&lt;/h3&gt;&#xA;&lt;p&gt;点击顶部拦的&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E8%BD%ACMac-OS-%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5%E6%B3%95-12.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;然后选择「打开“简体拼音“偏好设置」&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E8%BD%ACMac-OS-%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5%E6%B3%95-11.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;选择「文本」Tab：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E8%BD%ACMac-OS-%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5%E6%B3%95-13-1500x1333.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;将你的词库文件拖动至「输入码」下面。&lt;/p&gt;&#xA;&lt;p&gt;耐心等待一段时间。（如果你的词库大到十几M甚至几十M，那么请先干些别的。过程甚至可能超过一小时）&lt;/p&gt;&#xA;&lt;p&gt;完成后，你的词库将会显示在此窗口上。至此，我们成功的把搜狗词库转入Mac词库。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Github 中 Repository 和 Project的区别</title>
      <link>http://localhost:1313/posts/post/2020/github-%E4%B8%AD-repository-%E5%92%8C-project%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Sun, 26 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/github-%E4%B8%AD-repository-%E5%92%8C-project%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <description>&lt;p&gt;在使用全球最大的同性交友网站进行开源时, 也许你在打算创建一个新项目时碰到这种情况:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Github-%E4%B8%AD-Repository-%E5%92%8C-Project%E7%9A%84%E5%8C%BA%E5%88%AB-01.png&#34; alt=&#34;Github-中-Repository-和-Project的区别-01&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;点击Github右上角的加号&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;点击加号后, 出现了两个选项. 分别是&lt;code&gt;New repository&lt;/code&gt;以及&lt;code&gt;New project&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;转念一想&amp;hellip;咦, 一个是仓库, 又一个是项目. 感觉是一个东西啊!&lt;/p&gt;&#xA;&lt;h2 id=&#34;github-project&#34;&gt;Github Project&lt;/h2&gt;&#xA;&lt;p&gt;我们先来看一下&lt;a href=&#34;https://docs.github.com/cn/github/managing-your-work-on-github/about-project-boards&#34; target=&#34;_blank&#34;&gt;官方文档&lt;/a&gt;&#xA;的解释:&lt;/p&gt;&#xA;&lt;p&gt;GitHub 上的项目板帮助您组织工作和排列工作的优先级。 您可以为特定功能工作、全面的路线图甚至发布检查列表创建项目板。 通过项目板可以灵活地创建适合需求的自定义工作流程。&lt;/p&gt;&#xA;&lt;p&gt;这样一看就懂了, Project翻译过来的&amp;quot;项目&amp;quot;指的并非开发人员的&amp;quot;代码项目&amp;quot;, 而是一整个软件项目管理.&lt;/p&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]如果你经历过大项目, 应该使用过Jira、Tapd、禅道等项目管理系统! [/epcl_box]&lt;/p&gt;&#xA;&lt;h2 id=&#34;github-repository&#34;&gt;Github Repository&lt;/h2&gt;&#xA;&lt;p&gt;我们仍然来看一下&lt;a href=&#34;https://docs.github.com/cn/github/creating-cloning-and-archiving-repositories/about-repositories&#34; target=&#34;_blank&#34;&gt;官方文档&lt;/a&gt;&#xA;的解释:&lt;/p&gt;&#xA;&lt;p&gt;仓库就像项目的文件夹。 项目的仓库包含项目的所有文件，并存储每个文件的修订记录。 您也可以在仓库中讨论并管理项目的工作。&lt;/p&gt;&#xA;&lt;p&gt;我们程序员上传下载代码时频繁使用的是Repository!&lt;/p&gt;&#xA;&lt;h2 id=&#34;区别&#34;&gt;区别&lt;/h2&gt;&#xA;&lt;p&gt;一个表格非常直观的展现它们之间的区别:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Repository&lt;/th&gt;&#xA;          &lt;th&gt;Project&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;保存代码, 进行版本控制&lt;/td&gt;&#xA;          &lt;td&gt;进行项目管理, 可以添加任务、制定工作流程等.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>Mybatis-Plus 查询获取数据集最大值(Max())</title>
      <link>http://localhost:1313/posts/post/2020/mybatis-plus-%E6%9F%A5%E8%AF%A2%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E9%9B%86%E6%9C%80%E5%A4%A7%E5%80%BCmax/</link>
      <pubDate>Fri, 24 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/mybatis-plus-%E6%9F%A5%E8%AF%A2%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E9%9B%86%E6%9C%80%E5%A4%A7%E5%80%BCmax/</guid>
      <description>&lt;p&gt;在使用Mybatis-Plus框架进行查询时, 碰到了需要查询最大值的情况. 但是截止本文章撰写前, Mybatis-Plus并没有提供直接的查询数据最大值的函数. 本篇文章就来记录下如何实现.&lt;/p&gt;&#xA;&lt;h2 id=&#34;前置条件&#34;&gt;前置条件&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;掌握Spring框架&lt;/li&gt;&#xA;&lt;li&gt;掌握Mybatis&lt;/li&gt;&#xA;&lt;li&gt;掌握Mybatis-Plus的基本使用&lt;/li&gt;&#xA;&lt;li&gt;掌握SQL语句&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;p&gt;我们进行普通查询的时候, 需要用到以下语句:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`xxxMapper.selectOne(QueryWrapper(...));`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;我们只需要分别添加排序(&lt;code&gt;orderByDesc&lt;/code&gt;)和取第1个(&lt;code&gt;limit 1&lt;/code&gt;)就可拿到最大值:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`xxxMapper.selectOne(QueryWrapper(...).orderByDesc(&amp;quot;排序字段名&amp;quot;).last(&amp;quot;limit 1&amp;quot;));`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;拿到最小值只需改为正序排列:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`xxxMapper.selectOne(QueryWrapper(...).orderByAsc(&amp;quot;排序字段名&amp;quot;).last(&amp;quot;limit 1&amp;quot;));`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;搞定.&lt;/p&gt;&#xA;&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;&#xA;&lt;p&gt;本文的方法虽然实现了我们的目标. 但是&lt;strong&gt;仅为代码美观&lt;/strong&gt;. 实际上这样的查询效率可能不高. 生产环境的项目慎用.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Windows解除端口占用, 强制关闭/杀死某端口进程</title>
      <link>http://localhost:1313/posts/post/2020/windows%E8%A7%A3%E9%99%A4%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8-%E5%BC%BA%E5%88%B6%E5%85%B3%E9%97%AD-%E6%9D%80%E6%AD%BB%E6%9F%90%E7%AB%AF%E5%8F%A3%E8%BF%9B%E7%A8%8B/</link>
      <pubDate>Wed, 22 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/windows%E8%A7%A3%E9%99%A4%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8-%E5%BC%BA%E5%88%B6%E5%85%B3%E9%97%AD-%E6%9D%80%E6%AD%BB%E6%9F%90%E7%AB%AF%E5%8F%A3%E8%BF%9B%E7%A8%8B/</guid>
      <description>&lt;p&gt;阿航在使用IDEA开发Spring boot项目时, IDEA突然崩溃并闪退. 再次进入时, 提示我端口被占用. 稍微思考了一下, 问题的原因应该是IDE虽然被关闭了, 但是Java进程还在. 所以本篇文章就来记录下Windows如何解除端口占用, 强制关闭/杀死某端口进程.&lt;/p&gt;&#xA;&lt;h2 id=&#34;开始&#34;&gt;开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;打开终端&#34;&gt;打开终端&lt;/h3&gt;&#xA;&lt;p&gt;按下快捷键&lt;code&gt;Windows&lt;/code&gt;+&lt;code&gt;R&lt;/code&gt;, 打开运行窗口, 输入&lt;code&gt;CMD&lt;/code&gt;, 点击回车:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Windows%E8%A7%A3%E9%99%A4%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;找到端口对应id&#34;&gt;找到端口对应ID&lt;/h3&gt;&#xA;&lt;p&gt;打开终端, 输入以下命令(把端口号替换成你的):&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`netstat -ano | findstr :端口号`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;如图:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Windows%E8%A7%A3%E9%99%A4%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]可以看到, 如果你有占用的端口, 将会返回一个表格.[/epcl_box]&lt;/p&gt;&#xA;&lt;p&gt;我们的重点就在最后一列, 记住它. 我们即将通过这个ID来杀死该进程.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Windows%E8%A7%A3%E9%99%A4%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8-03.png&#34; alt=&#34;Windows解除端口占用-03&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;通过id杀死进程&#34;&gt;通过ID杀死进程&lt;/h3&gt;&#xA;&lt;p&gt;接下来我们就要来强制停止, 也就是杀死进程了.&lt;/p&gt;&#xA;&lt;p&gt;输入以下命令(把进程ID替换为你上面查到的):&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`taskkill /f /im 进程ID`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;如果成功, 会返回类似&lt;code&gt;成功: 已终止 PID 为 .... 的进程&lt;/code&gt;的信息&lt;/p&gt;&#xA;&lt;p&gt;如图:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Windows%E8%A7%A3%E9%99%A4%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8-04.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;搞定.&lt;/p&gt;&#xA;&lt;h2 id=&#34;感谢&#34;&gt;感谢&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/8688949/how-to-close-tcp-and-udp-ports-via-windows-command-line&#34; target=&#34;_blank&#34;&gt;How to close TCP and UDP ports via windows command line&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/wangjunjun2008/article/details/9407219&#34; target=&#34;_blank&#34;&gt;Windows中杀死占用某个端口的进程&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;排名不分先后&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Flutter/Dart List去重, 去除重复列表项</title>
      <link>http://localhost:1313/posts/post/2020/flutter-dart-list%E5%8E%BB%E9%87%8D-%E5%8E%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E5%88%97%E8%A1%A8%E9%A1%B9/</link>
      <pubDate>Mon, 20 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-dart-list%E5%8E%BB%E9%87%8D-%E5%8E%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E5%88%97%E8%A1%A8%E9%A1%B9/</guid>
      <description>&lt;p&gt;有时我们需要过滤掉重复的列表项, 本篇文章就来介绍下Flutter/Dart 如何进行 List去重, 去除重复列表项.&lt;/p&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;方法一-list与set互转&#34;&gt;方法一: List与Set互转&lt;/h3&gt;&#xA;&lt;p&gt;基于Set集合的不可重复特性, 我们利用该特性可轻松解决:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`void main() {   // 声明一个集合   var ids = [1, 1, 4, 4, 5, 6, 6];   // 进行去重, 存储去重后的集合   var distinctIds = ids.toSet().toList(); }`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;当然, 基于该思路还有更牛逼的写法:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`var distinctIds = [...{...ids}];`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;success&amp;rdquo;]这也许是最优雅的解决方案.[/epcl_box]&lt;/p&gt;&#xA;&lt;h3 id=&#34;方法二-list与set互转保留顺序&#34;&gt;方法二: List与Set互转(保留顺序)&lt;/h3&gt;&#xA;&lt;p&gt;方案一虽然优雅, 但也不是完美的. 它无法&lt;strong&gt;保留顺序&lt;/strong&gt;. 如果我们的需求对顺序有绝对的要求时, 就需要以下方法了:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`import &#39;dart:collection&#39;; void main() {   // 声明一个集合   List arr = [&amp;quot;a&amp;quot;, &amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;d&amp;quot;];   // 进行去重, 存储去重后的集合   List result = LinkedHashSet.from(arr).toList(); }`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;虽然不如方法一优雅, 但是其保留了顺序.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mybatis-Plus 更新字段数据为null</title>
      <link>http://localhost:1313/posts/post/2020/mybatis-plus-%E6%9B%B4%E6%96%B0%E5%AD%97%E6%AE%B5%E6%95%B0%E6%8D%AE%E4%B8%BAnull/</link>
      <pubDate>Mon, 20 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/mybatis-plus-%E6%9B%B4%E6%96%B0%E5%AD%97%E6%AE%B5%E6%95%B0%E6%8D%AE%E4%B8%BAnull/</guid>
      <description>&lt;p&gt;在使用Mybatis-Plus开发项目时, 需要将数据库某字段值设置为null. 但是仅将实体类的值赋值为null是不够的. 还需要为实体类的属性添加以下注解:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`@TableField(fill = FieldFill.UPDATE)`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;比如你需要设置某表的字段name为null, 则需要进入实体类, 在对应的属性上添加注解:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`@TableField(fill = FieldFill.UPDATE) private String name;`&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>极客用语: “TBH”是什么意思?</title>
      <link>http://localhost:1313/posts/post/2020/%E6%9E%81%E5%AE%A2%E7%94%A8%E8%AF%AD-tbh%E6%98%AF%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D/</link>
      <pubDate>Sat, 18 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E6%9E%81%E5%AE%A2%E7%94%A8%E8%AF%AD-tbh%E6%98%AF%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D/</guid>
      <description>&lt;p&gt;在与老外进行对话的时候, 也许你看到了这个词: &lt;strong&gt;TBH&lt;/strong&gt;, 但是却又很困惑这个词是什么意思. 你来对地方了! 本篇文章就来详解&lt;strong&gt;TBH&lt;/strong&gt;的含义, 来源以及用途.&lt;/p&gt;&#xA;&lt;h2 id=&#34;含义&#34;&gt;含义&lt;/h2&gt;&#xA;&lt;p&gt;在大多数情况下, TBH是&amp;quot;to be honest&amp;quot;的直接缩写. 这是它的初始含义. 在90年代末期或在2000年初被广泛关注, 其起源于互联网论坛, 聊天室和短信文化关系密切. 所以&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;TBH = 说实话/讲真/说真的&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;TBH通常放在句子的开头或结尾, 以传达坦率的感觉. 如果有人想直白的表达想法, 他们可以说: &amp;ldquo;TBH, I hate this game&amp;rdquo;(讲真, 我不太喜欢这个游戏.)&lt;/p&gt;&#xA;&lt;p&gt;当然, TBH也可以用于奉承或者侮辱. 您可以通过&amp;quot; TBH, you’re a strong and genuine person.&amp;quot;(说真的, 你真是一个坚强而真诚的人)之类的言语来抬高某人. 或者用&amp;quot; TBH, the song you like is really &amp;ldquo;non-mainstream&amp;rdquo;. &amp;ldquo;(说真的, 你喜欢的歌可真&amp;quot;非主流&amp;rdquo;)来贬低他人.&lt;/p&gt;&#xA;&lt;p&gt;但是, 某些年轻人将TBH理解为&amp;quot;to be heard&amp;quot;.(这种叫法逐渐淘汰)&lt;/p&gt;&#xA;&lt;h2 id=&#34;如何使用tbh&#34;&gt;如何使用TBH&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;TBH&lt;/strong&gt;的H是&amp;quot;honest&amp;quot;(诚实)的直接缩写. 在大多数情况下, 只要在句子中会用到&amp;quot;诚实&amp;quot;、&amp;ldquo;实际上&amp;rdquo;、&amp;ldquo;讲真的&amp;quot;等都可以用上&lt;strong&gt;TBH&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;大多数人会在句首或者句末使用TBH.&lt;/p&gt;&#xA;&lt;h2 id=&#34;感谢&#34;&gt;感谢&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.howtogeek.com/447760/what-does-tbh-mean-and-how-do-you-use-it/&#34; target=&#34;_blank&#34;&gt;What Does “TBH” Mean and How Do You Use It?&lt;/a&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nginx 设置密码/开启密码验证/需用户名密码才能访问</title>
      <link>http://localhost:1313/posts/post/2020/nginx-%E8%AE%BE%E7%BD%AE%E5%AF%86%E7%A0%81-%E5%BC%80%E5%90%AF%E5%AF%86%E7%A0%81%E9%AA%8C%E8%AF%81-%E9%9C%80%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%86%E7%A0%81%E6%89%8D%E8%83%BD%E8%AE%BF%E9%97%AE/</link>
      <pubDate>Thu, 16 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/nginx-%E8%AE%BE%E7%BD%AE%E5%AF%86%E7%A0%81-%E5%BC%80%E5%90%AF%E5%AF%86%E7%A0%81%E9%AA%8C%E8%AF%81-%E9%9C%80%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%86%E7%A0%81%E6%89%8D%E8%83%BD%E8%AE%BF%E9%97%AE/</guid>
      <description>&lt;p&gt;这次阿航需要为公司的某网站开启远程访问, 但是仅允许公司内部员工使用. 本篇文章就来记录下如何为Nginx 设置密码/开启密码验证/需用户名密码才能访问.&lt;/p&gt;&#xA;&lt;h2 id=&#34;效果&#34;&gt;效果&lt;/h2&gt;&#xA;&lt;p&gt;有图有真相, 我们最终要实现的效果如下:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Nginx-%E8%AE%BE%E7%BD%AE%E5%AF%86%E7%A0%81-01.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;用户名与密码输入正确&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Nginx-%E8%AE%BE%E7%BD%AE%E5%AF%86%E7%A0%81-02.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;尝试匿名访问&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h2 id=&#34;前置条件&#34;&gt;前置条件&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;掌握Nginx基础.&lt;/li&gt;&#xA;&lt;li&gt;掌握bash/shell的基本命令.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;本篇文章的环境:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;安装生成账号密码工具&#34;&gt;安装生成账号密码工具&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code&gt;`yum install httpd-tools`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;notice&amp;rdquo;]如果yum下载过慢, 请阅读&lt;a href=&#34;https://www.bugcatt.com/archives/981&#34; target=&#34;_blank&#34;&gt;这篇文章&lt;/a&gt;&#xA;开启加速.[/epcl_box]&lt;/p&gt;</description>
    </item>
    <item>
      <title>MySQL多条记录/结果合并为一行,并转换为JSON</title>
      <link>http://localhost:1313/posts/post/2020/mysql%E5%A4%9A%E6%9D%A1%E8%AE%B0%E5%BD%95-%E7%BB%93%E6%9E%9C%E5%90%88%E5%B9%B6%E4%B8%BA%E4%B8%80%E8%A1%8C%E5%B9%B6%E8%BD%AC%E6%8D%A2%E4%B8%BAjson/</link>
      <pubDate>Tue, 14 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/mysql%E5%A4%9A%E6%9D%A1%E8%AE%B0%E5%BD%95-%E7%BB%93%E6%9E%9C%E5%90%88%E5%B9%B6%E4%B8%BA%E4%B8%80%E8%A1%8C%E5%B9%B6%E8%BD%AC%E6%8D%A2%E4%B8%BAjson/</guid>
      <description>&lt;p&gt;我们在使用MySQL进行查询时, 我们希望把同类结果合并为一行(1个字段内). 本篇文章就来记录下如何使用MySQL将多条记录/结果合并为一行.&lt;/p&gt;&#xA;&lt;h2 id=&#34;效果&#34;&gt;效果&lt;/h2&gt;&#xA;&lt;p&gt;有图有真相, 先来看下查询的最终效果对比:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/MySQL%E5%A4%9A%E6%9D%A1%E8%AE%B0%E5%BD%95%E7%BB%93%E6%9E%9C%E5%90%88%E5%B9%B6-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;合并前&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/MySQL%E5%A4%9A%E6%9D%A1%E8%AE%B0%E5%BD%95%E7%BB%93%E6%9E%9C%E5%90%88%E5%B9%B6-03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/MySQL%E5%A4%9A%E6%9D%A1%E8%AE%B0%E5%BD%95%E7%BB%93%E6%9E%9C%E5%90%88%E5%B9%B6-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;合并后&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;创建表及填充数据&#34;&gt;创建表及填充数据&lt;/h3&gt;&#xA;&lt;p&gt;先来创建一个表. 在库中运行以下SQL命令:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;``DROP TABLE IF EXISTS `t_name`; CREATE TABLE `t_name`  (   `name` varchar(255) NOT NULL,   PRIMARY KEY (`name`) ) ; INSERT INTO `t_name` VALUES (&#39;阿航&#39;),(&#39;张三&#39;),(&#39;李四&#39;),(&#39;王五&#39;),(&#39;傻根&#39;);``&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;至此, 我们有了一个&lt;code&gt;t_name&lt;/code&gt;表了. 这个表用于存储名字.&lt;/p&gt;</description>
    </item>
    <item>
      <title>修改Docker 的 MySQL 容器时区</title>
      <link>http://localhost:1313/posts/post/2020/%E4%BF%AE%E6%94%B9docker-%E7%9A%84-mysql-%E5%AE%B9%E5%99%A8%E6%97%B6%E5%8C%BA/</link>
      <pubDate>Sun, 12 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E4%BF%AE%E6%94%B9docker-%E7%9A%84-mysql-%E5%AE%B9%E5%99%A8%E6%97%B6%E5%8C%BA/</guid>
      <description>&lt;p&gt;阿航在开发Springboot项目时, 前端告诉验证码一直无效. 本地测试没有问题, 一看远程服务器的数据库时间, 哇塞&amp;ndash;早了8小时. 很明显, 是MySQL的时区问题. 本篇文章就来记录下如何修改Docker 的 MySQL 容器时区.&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;p&gt;先来校验下数据库是否真的时区不对. 进入MySQL数据库, 运行语句:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`SELECT NOW();`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;会返回类似这样的数据:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`mysql&amp;gt; SELECT NOW(); +---------------------+ | NOW()               | +---------------------+ | 2020-07-04 15:46:46 | +---------------------+ 1 row in set (0.09 sec)`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;再来查询下当前时区, 输入以下命令:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`SHOW VARIABLES LIKE &#39;%time_zone%&#39;;`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;会返回类似这样的数据:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`mysql&amp;gt; SHOW VARIABLES LIKE &#39;%time_zone%&#39;; +------------------+--------+ | Variable_name    | Value  | +------------------+--------+ | system_time_zone | UTC    | | time_zone        | +00:00 | +------------------+--------+ 2 rows in set (0.12 sec)`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;如果返回的时间和你的相差多个小时, 并且时区不对(非+08:00)的话, 那么证明你需要向下看了.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker容器没有vim命令的解决方案</title>
      <link>http://localhost:1313/posts/post/2020/docker%E5%AE%B9%E5%99%A8%E6%B2%A1%E6%9C%89vim%E5%91%BD%E4%BB%A4%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Fri, 10 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/docker%E5%AE%B9%E5%99%A8%E6%B2%A1%E6%9C%89vim%E5%91%BD%E4%BB%A4%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>&lt;p&gt;今天在尝试修改Docker容器内文件时, 发现容器内并没有vim命令, 返回了:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`vim my.cnf bash: vim: command not found`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;本篇文章就来记录下如何解决此问题.&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;p&gt;仍然在docker容器内部, 首先运行以下命令, 并耐心等待一会儿:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`apt-get update`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;完成后运行:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`apt-get install vim`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;等待安装完成后, 运行以下命令, 验证是否安装成功:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`vim`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;如果返回了类似以下界面则证明vim安装成功:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Docker%E5%AE%B9%E5%99%A8%E6%B2%A1%E6%9C%89vim%E5%91%BD%E4%BB%A4%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88-01.png&#34; alt=&#34;VIM安装成功返回&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;VIM安装成功返回&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;success&amp;rdquo;]成功搞定. 继续你的文本编辑操作吧![/epcl_box]&lt;/p&gt;</description>
    </item>
    <item>
      <title>投稿合作</title>
      <link>http://localhost:1313/posts/page/2020/%E6%8A%95%E7%A8%BF%E5%90%88%E4%BD%9C/</link>
      <pubDate>Thu, 09 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2020/%E6%8A%95%E7%A8%BF%E5%90%88%E4%BD%9C/</guid>
      <description>&lt;p&gt;你有好的想法, 但是却无处表达吗?&lt;/p&gt;&#xA;&lt;p&gt;你有好的文笔, 但是却不想花费过多时间在维护服务器、博客上吗?&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;如果你觉得阿航的技术小站排版好看, 希望自己的文章也出现在上面, 欢迎投稿. 如果你的文章干货满满并被阿航收录, 你将会获得相应的报酬.&lt;/p&gt;&#xA;&lt;h2 id=&#34;如何投稿&#34;&gt;如何投稿&lt;/h2&gt;&#xA;&lt;p&gt;投稿方式非常简单. 只需将你的文章通过邮件发送至 &lt;strong&gt;&lt;a href=&#34;mailto:harrisonqi@foxmail.com&#34; target=&#34;_blank&#34;&gt;harrisonqi@foxmail.com&lt;/a&gt;&#xA;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;邮件主题格式为: &lt;strong&gt;投稿-名称-文章标题&lt;/strong&gt;&lt;br&gt;&#xA;比如: 投稿-阿航-详解MySQL索引&lt;/p&gt;&#xA;&lt;p&gt;文章底部附上你的支付宝/微信收款码. 如果你的文章很棒, 阿航将会给你打赏.&lt;/p&gt;&#xA;&lt;h2 id=&#34;投稿要求&#34;&gt;投稿要求&lt;/h2&gt;&#xA;&lt;h3 id=&#34;投稿文章领域&#34;&gt;投稿文章领域&lt;/h3&gt;&#xA;&lt;p&gt;前端、后端、运维 、测试 、部署 、建站 、软件/代码测评 、计算机领域新闻 、计算机书籍、代码踩坑答疑、文档翻译等&lt;strong&gt;一切围绕计算机、软件行业的主题&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;文章&#34;&gt;文章&lt;/h3&gt;&#xA;&lt;p&gt;必须为&lt;strong&gt;原创&lt;/strong&gt;.&lt;br&gt;&#xA;* 原封不动转载、伪原创的文章将不会获得阿航的技术小站的青睐.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;内容不能过旧&lt;/strong&gt;.&lt;br&gt;&#xA;* 比如今年是2020年, 2010年的技术新闻就会显得非常过时了.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;内容必须是完整的&lt;/strong&gt;.&lt;br&gt;&#xA;* 如果你的文章干货过多, 需要分为几篇文章发表, 那么请一次性发过来.&lt;/p&gt;&#xA;&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;&#xA;&lt;p&gt;知识付费的年代, 何不把你的才华与想法转化为实际的价值呢? 立刻着手编写文章, 给我投稿吧!&lt;/p&gt;</description>
    </item>
    <item>
      <title>极客用语: &#34;IIRC&#34;是什么意思?</title>
      <link>http://localhost:1313/posts/post/2020/%E6%9E%81%E5%AE%A2%E7%94%A8%E8%AF%AD-iirc%E6%98%AF%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D/</link>
      <pubDate>Wed, 08 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E6%9E%81%E5%AE%A2%E7%94%A8%E8%AF%AD-iirc%E6%98%AF%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D/</guid>
      <description>&lt;p&gt;在与老外进行开源的时候, 也许你看到了这个词: &lt;strong&gt;IIRC&lt;/strong&gt;, 但是却又很困惑这个词是什么意思. 你来对地方了! 本篇文章就来详解&lt;strong&gt;IIRC&lt;/strong&gt;的含义, 来源以及用途.&lt;/p&gt;&#xA;&lt;h2 id=&#34;含义&#34;&gt;含义&lt;/h2&gt;&#xA;&lt;p&gt;老外在网上使用&amp;quot;IIRC&amp;quot;这个词, 展开来就是&amp;quot;if I recall correctly&amp;quot; 或者 &amp;ldquo;if I remember correctly&amp;rdquo;. 所以:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;IIRC = 如果我没记错的话&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;就像面对面聊天一样, 如果不确定某件事, 你可以&lt;strong&gt;礼貌的使用它&lt;/strong&gt;. 或者在回答与纠正问题时&lt;strong&gt;无情的嘲讽对方&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;通常情况下, 人们会在&lt;strong&gt;确实记得&lt;/strong&gt;某件事时使用, 用这种模糊的句子表达只是为了愉快的谈话(谦虚/给对方个台阶下).&lt;br&gt;&#xA;例如: 你跟舍友说: &amp;ldquo;IIRC, you left your keys on the door again.&amp;rdquo;( 您又把钥匙放在门上忘记拔下来了) .&lt;/p&gt;&#xA;&lt;p&gt;你当然也可以给IIRC添加一些讽刺的含义. 这在Reddit和Twitter等社交媒体网站上比较常见, 人们喜欢使用这个词来时谈话更生动.&lt;/p&gt;&#xA;&lt;p&gt;但是, 在某些情况下IIRC代表的是某人&lt;strong&gt;确实不太清楚某件事情&lt;/strong&gt;. 当人们没工夫验证他说的话的精确度时, 可能发生这种情况. 比如你在群里聊天时说道: &amp;quot; You can buy a green iPhone 11, IIRC &amp;ldquo;. 这个的意思就是你大概确认IPhone 11有绿色的, 但是你没空去二次验证其准确性.&lt;/p&gt;&#xA;&lt;h2 id=&#34;来源&#34;&gt;来源&lt;/h2&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E6%9E%81%E5%AE%A2%E7%94%A8%E8%AF%ADIIRC-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.shutterstock.com/image-photo/depressed-frustrated-upset-serious-girl-concentrated-1516787324?&#34; target=&#34;_blank&#34;&gt;The Faces/Shutterstock&lt;/a&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>解决 Briefly unavailable for scheduled maintenance. Check back in a minute</title>
      <link>http://localhost:1313/posts/post/2020/%E8%A7%A3%E5%86%B3-briefly-unavailable-for-scheduled-maintenance-check-back-in-a-minute/</link>
      <pubDate>Mon, 06 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E8%A7%A3%E5%86%B3-briefly-unavailable-for-scheduled-maintenance-check-back-in-a-minute/</guid>
      <description>&lt;p&gt;阿航在更新WordPress插件时, 插件更新失败并返回了504错误. 并且再次访问网站时, 网站提示&lt;code&gt;Briefly unavailable for scheduled maintenance. Check back in a minute.&lt;/code&gt;好郁闷&amp;hellip; 折腾了一下终于搞定. 本篇文章就来记录下如何解决该问题.&lt;/p&gt;&#xA;&lt;h2 id=&#34;情景再现&#34;&gt;情景再现&lt;/h2&gt;&#xA;&lt;p&gt;先来看下阿航的报错, 是不是和你一样?&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Briefly-unavailable-for-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;h3 id=&#34;方案一-耐心等待&#34;&gt;方案一: 耐心等待&lt;/h3&gt;&#xA;&lt;p&gt;遇到此种情况, 最好的解决方案就是&lt;strong&gt;等&lt;/strong&gt;. 因为WordPress在更新插件/主题时, 会暂停网站访问, 内部自动更新. 一般来讲, 耐心等待一段时间, 此报错就会自动解除.&lt;/p&gt;&#xA;&lt;p&gt;如果等待无效, 请查看下面的方法.&lt;/p&gt;&#xA;&lt;h3 id=&#34;方案二-删除-maintenance&#34;&gt;方案二: 删除 .maintenance&lt;/h3&gt;&#xA;&lt;p&gt;在WordPress进行更新/维护时, 会在目录下创建一个 &lt;strong&gt;.maintenance&lt;/strong&gt; 文件. 当更新/维护结束时, 会自动删除它.&lt;/p&gt;&#xA;&lt;p&gt;所以我们只要手动删除即可解除更新/维护模式.&lt;/p&gt;&#xA;&lt;p&gt;进入WordPress安装目录, 找到&lt;code&gt;.maintenance&lt;/code&gt;文件, 删除即可:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Briefly-unavailable-for-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;再次刷新网站, 查看最终效果.&lt;/p&gt;&#xA;&lt;h2 id=&#34;感谢&#34;&gt;感谢&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/ytkah/p/11097523.html&#34; target=&#34;_blank&#34;&gt;wordpress更新出现Briefly unavailable for scheduled maintenance. Check back in a minute.&lt;/a&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>妥善处理Flutter的404 Not Found 未找到错误</title>
      <link>http://localhost:1313/posts/post/2020/%E5%A6%A5%E5%96%84%E5%A4%84%E7%90%86flutter%E7%9A%84404-not-found-%E6%9C%AA%E6%89%BE%E5%88%B0%E9%94%99%E8%AF%AF/</link>
      <pubDate>Sat, 04 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E5%A6%A5%E5%96%84%E5%A4%84%E7%90%86flutter%E7%9A%84404-not-found-%E6%9C%AA%E6%89%BE%E5%88%B0%E9%94%99%E8%AF%AF/</guid>
      <description>&lt;p&gt;Flutter已经支持了Web端, 我们可以使用其创建动态网站了. Flutter能够处理来自Web的错误, 比如404未找到. 但是如何为Flutter应用创建自定义的404页面呢?&lt;/p&gt;&#xA;&lt;p&gt;本文将介绍如何创建自定义页面, 用于用户在试图搜索不存在的页面时给用户友好提示.&lt;/p&gt;&#xA;&lt;h2 id=&#34;在flutter中将客户端重定向至自定义404页面&#34;&gt;在Flutter中将客户端重定向至自定义404页面&lt;/h2&gt;&#xA;&lt;p&gt;每个人在上网冲浪时都遇到过&amp;quot;404 Not Found&amp;quot;、&amp;ldquo;页面不存在&amp;quot;等等. Flutter通过自动将你重定向至初始路由来解决此问题(通常是APP首页). 观赏下一些大厂好看的404页面:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E5%A6%A5%E5%96%84%E5%A4%84%E7%90%86Flutter%E7%9A%84404-Not-Found-%E6%9C%AA%E6%89%BE%E5%88%B0%E9%94%99%E8%AF%AF-01-1500x783.gif&#34; alt=&#34;AirBnb(爱彼迎) 的404页面&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;AirBnb(爱彼迎) 的404页面&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E5%A6%A5%E5%96%84%E5%A4%84%E7%90%86Flutter%E7%9A%84404-Not-Found-%E6%9C%AA%E6%89%BE%E5%88%B0%E9%94%99%E8%AF%AF-02.png&#34; alt=&#34;Github 的 404页面&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;Github 的 404页面&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E5%A6%A5%E5%96%84%E5%A4%84%E7%90%86Flutter%E7%9A%84404-Not-Found-%E6%9C%AA%E6%89%BE%E5%88%B0%E9%94%99%E8%AF%AF-03-1500x681.png&#34; alt=&#34;Flutter 的 404页面&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter介绍</title>
      <link>http://localhost:1313/posts/page/2020/flutter%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2020/flutter%E4%BB%8B%E7%BB%8D/</guid>
      <description>&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Flutter&lt;/strong&gt;是一个由谷歌开发的开源移动应用软件开发工具包，用于为Android、iOS、 Windows、Mac、Linux、Google Fuchsia开发应用。&lt;/p&gt;&#xA;&lt;p&gt;Flutter第一个版本支持Android操作系统，开发代号称作“Sky”。 它于2015年4月的Flutter开发者会议上被公布，宣称其目标为实现120FPS的渲染性能。在上海Google Developer Days的主题演讲中，Google宣布了Flutter Release Preview 2，这是Flutter 1.0之前的最后一个重要版本。2018年12月4日，Flutter 1.0在Flutter Live活动中发布，是该框架的第一个“稳定”版本。2019年12月11日，在Flutter Interactive活动上发布了Flutter 1.12，宣布Flutter是第一个为环境计算设计的UI平台。&lt;/p&gt;&#xA;&lt;h2 id=&#34;框架组织&#34;&gt;框架组织&lt;/h2&gt;&#xA;&lt;p&gt;Flutter的主要组成部分包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Dart平台&lt;/li&gt;&#xA;&lt;li&gt;Flutter引擎&lt;/li&gt;&#xA;&lt;li&gt;基础库&lt;/li&gt;&#xA;&lt;li&gt;定制化设计语言的组件&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;dart平台&#34;&gt;Dart平台&lt;/h3&gt;&#xA;&lt;p&gt;Flutter应用是使用Dart语言编写的，并利用了该语言的许多高级功能。&lt;/p&gt;&#xA;&lt;p&gt;在Windows、macOS和Linux上，通过半官方的_Flutter Desktop Embedding_项目，Flutter在Dart虚拟机中运行，该虚拟机具有即时编译执行引擎。在编写和调试应用时，Flutter使用即时编译功能进行“热重载”，可以将对源文件的修改注入正在运行的应用中。Flutter通过支持有状态的热重载来扩展此功能，在大多数情况下，对源代码的更改可以立即在运行的应用中反映出来，而无需重新启动或丢失任何状态。Flutter实现的此功能已广受赞誉。&lt;/p&gt;&#xA;&lt;p&gt;Flutter应用的发布版本在Android和iOS上都进行了提前（AOT）编译，使Flutter在移动设备上可以高性能地运行。&lt;/p&gt;&#xA;&lt;h3 id=&#34;flutter引擎&#34;&gt;Flutter引擎&lt;/h3&gt;&#xA;&lt;p&gt;Flutter的引擎主要使用C++开发，通过Google的Skia图形库提供底层渲染支持，亦提供平台相关的SDK，例如Android和iOS。Flutter引擎是用于托管Flutter应用的可移植的运行环境。它实现了Flutter的核心库，包括动画和图形、文件和网络I/O、可访问性支持、插件架构以及Dart运行环境和编译工具链。大多数开发人员将通过Flutter框架与Flutter进行交互，该框架提供了一个现代、响应式的框架，以及一组丰富的平台、布局和基础组件。&lt;/p&gt;&#xA;&lt;h3 id=&#34;基础库&#34;&gt;基础库&lt;/h3&gt;&#xA;&lt;p&gt;基础库由Dart编写，提供了用Flutter构建应用所需的基本的类和函数，例如与引擎通讯的API。&lt;/p&gt;&#xA;&lt;h4 id=&#34;组件&#34;&gt;组件&lt;/h4&gt;&#xA;&lt;p&gt;Flutter是通过组织、创建不同的组件完成用户界面设计的。在Flutter中，一个组件代表用户界面中不可变的一部分；包括文本、多边形以及动画在内的所有图形都是用组件创建的。复杂的组件由简单的组件结合而成。&lt;/p&gt;&#xA;&lt;h3 id=&#34;定制化设计风格的组件&#34;&gt;定制化设计风格的组件&lt;/h3&gt;&#xA;&lt;p&gt;Flutter框架包含了两套符合特定设计语言的组件。 称作Material Design的组件实现的是同名的谷歌设计语言，称作_Cupertino_的组件实现苹果公司iOS的扁平化设计（Flat Design）。&lt;/p&gt;&#xA;&lt;h2 id=&#34;hello-world示例&#34;&gt;Hello World示例&lt;/h2&gt;&#xA;&lt;p&gt;一个Flutter中的Hello World程序如下所示：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`import &#39;package:flutter/material.dart&#39;;  void main() =&amp;gt; runApp(HelloWorldApp());  class HelloWorldApp extends StatelessWidget {   @override   Widget build(BuildContext context) {     return MaterialApp(       title: &#39;Hello World App&#39;,       home: Scaffold(         appBar: AppBar(           title: Text(&#39;Hello World App&#39;),         ),         body: Center(           child: Text(&#39;Hello World&#39;),         ),       ),     );   } }`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;] 本文转自维_基_百_科. 最后修订于2020年6月19日 (星期五) 09:25[/epcl_box]&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pure Sudoku 极简数独</title>
      <link>http://localhost:1313/posts/page/2020/pure-sudoku-%E6%9E%81%E7%AE%80%E6%95%B0%E7%8B%AC/</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2020/pure-sudoku-%E6%9E%81%E7%AE%80%E6%95%B0%E7%8B%AC/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;images/Pure_Sudoku_banner.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;屏幕截图&#34;&gt;屏幕截图&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Pure-Sudoku-Play-Store-ScreenShot-222x450.jpg&#34; alt=&#34;Pure Sudoku Play Store ScreenShot&#34;&gt; &lt;img src=&#34;images/Pure_Sudoku-ScreenShot_01-253x450.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;images/Pure_Sudoku-ScreenShot_2-253x450.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;&#xA;&lt;p&gt;这是一个数独APP, 一款独立游戏.&lt;/p&gt;&#xA;&lt;p&gt;游戏玩法策划、界面设计、宣传物料、APP全部代码. 以上全部均由我独立完成.&lt;/p&gt;&#xA;&lt;p&gt;目前已上架Google Play Store. &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.bugcatt.pure_sudoku&#34; target=&#34;_blank&#34;&gt;点击查看(需翻墙)&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;&lt;h2 id=&#34;优势&#34;&gt;优势&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;轻量, 仅&lt;strong&gt;8M&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;APP国际化(支持多语言)&lt;/li&gt;&#xA;&lt;li&gt;界面极简, 专注APP体验. 操作友好, 无需学习成本.&lt;/li&gt;&#xA;&lt;li&gt;提供撤销、重做功能.&lt;/li&gt;&#xA;&lt;li&gt;实时保存, 无论何时退出APP都可以保存.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;开发信息&#34;&gt;开发信息&lt;/h2&gt;&#xA;&lt;p&gt;作者: 阿航&lt;br&gt;&#xA;技术栈: Flutter&lt;br&gt;&#xA;开发周期: 4天&lt;/p&gt;&#xA;&lt;p&gt;[epcl_button label=&amp;ldquo;查看我的更多其他作品&amp;rdquo; url=&amp;quot;&amp;quot; type=&amp;ldquo;flat&amp;rdquo; color=&amp;ldquo;light-blue&amp;rdquo; size=&amp;ldquo;regular&amp;rdquo; icon=&amp;ldquo;fa-chevron-right&amp;rdquo; target=&amp;quot;_self&amp;quot;]&lt;/p&gt;</description>
    </item>
    <item>
      <title>个人作品</title>
      <link>http://localhost:1313/posts/page/2020/%E4%B8%AA%E4%BA%BA%E4%BD%9C%E5%93%81/</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2020/%E4%B8%AA%E4%BA%BA%E4%BD%9C%E5%93%81/</guid>
      <description>&lt;p&gt;以下列出部分我的个人作品. 点击图片查看详情.&lt;/p&gt;&#xA;&lt;h2 id=&#34;flutter&#34;&gt;Flutter&lt;/h2&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.bugcatt.com/pure-sudoku-%e6%9e%81%e7%ae%80%e6%95%b0%e7%8b%ac&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;images/Pure_Sudoku_app_icon_192.png&#34; alt=&#34;Pure Sudoku App Icon&#34;&gt;&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;Pure Sudoku&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    <item>
      <title>Flutter 指定TextField输入框(文本框)初始值(初始文字)</title>
      <link>http://localhost:1313/posts/post/2020/flutter-%E6%8C%87%E5%AE%9Atextfield%E8%BE%93%E5%85%A5%E6%A1%86%E6%96%87%E6%9C%AC%E6%A1%86%E5%88%9D%E5%A7%8B%E5%80%BC%E5%88%9D%E5%A7%8B%E6%96%87%E5%AD%97/</link>
      <pubDate>Thu, 02 Jul 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-%E6%8C%87%E5%AE%9Atextfield%E8%BE%93%E5%85%A5%E6%A1%86%E6%96%87%E6%9C%AC%E6%A1%86%E5%88%9D%E5%A7%8B%E5%80%BC%E5%88%9D%E5%A7%8B%E6%96%87%E5%AD%97/</guid>
      <description>&lt;p&gt;输入框也许是最常用的表单项了. 添加数据时我们直接使用空的输入框就可以了. 编辑的时候, 我们需要把旧的数据预先放在输入框内. 那么如何为其指定初始值呢? 本篇文章就来记录下Flutter如何指定TextField输入框(文本框)初始值(初始文字).&lt;/p&gt;&#xA;&lt;h2 id=&#34;效果&#34;&gt;效果&lt;/h2&gt;&#xA;&lt;p&gt;有图有真相, 先来看一下我们的最终效果:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Flutter-%E6%8C%87%E5%AE%9ATextField%E5%88%9D%E5%A7%8B%E5%80%BC-01.png&#34; alt=&#34;Flutter-指定TextField初始值-01&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]老规矩. 速度快的同学直接看下方的核心代码![/epcl_box]&lt;/p&gt;&#xA;&lt;h2 id=&#34;应用场景&#34;&gt;应用场景&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;编辑数据使用的输入框&lt;/li&gt;&#xA;&lt;li&gt;输入框提供默认数据&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;方法一-textfield&#34;&gt;方法一: TextField&lt;/h3&gt;&#xA;&lt;p&gt;创建一个dart文件, 内容为以下代码:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`import &#39;package:flutter/material.dart&#39;;  void main() =&amp;gt; runApp(MyApp());  class MyApp extends StatelessWidget {   @override   Widget build(BuildContext context) {     return MaterialApp(       title: &#39;Flutter Demo&#39;,       theme: ThemeData(         primarySwatch: Colors.blue,       ),       home: MyHomePage(title: &#39;为输入框提供初始值&#39;),     );   } }  class MyHomePage extends StatefulWidget {   MyHomePage({Key key, this.title}) : super(key: key);   final String title;    @override   _MyHomePageState createState() =&amp;gt; _MyHomePageState(); }  class _MyHomePageState extends State {    @override   Widget build(BuildContext context) {     return Scaffold(       appBar: AppBar(         title: Text(widget.title),       ),       body: Center(         child: Column(           mainAxisAlignment: MainAxisAlignment.center,           children: [             Container(               width: MediaQuery.of(context).size.width * 0.3,               child: TextField(                 controller: TextEditingController()..text=&amp;quot;你今天真好看&amp;quot;,               ),             )           ],         ),       ),     );   } }`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;重点放在&lt;code&gt;TextField&lt;/code&gt;内部. 我们为其&lt;code&gt;controller&lt;/code&gt;参数赋值为&lt;code&gt;TextEditingController()..text=&amp;quot;你今天真好看&amp;quot;&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter根据屏幕尺寸(宽度/高度)的百分比设定元素(小部件/组件/Widget)尺寸</title>
      <link>http://localhost:1313/posts/post/2020/flutter%E6%A0%B9%E6%8D%AE%E5%B1%8F%E5%B9%95%E5%B0%BA%E5%AF%B8%E5%AE%BD%E5%BA%A6-%E9%AB%98%E5%BA%A6%E7%9A%84%E7%99%BE%E5%88%86%E6%AF%94%E8%AE%BE%E5%AE%9A%E5%85%83%E7%B4%A0%E5%B0%8F%E9%83%A8%E4%BB%B6/</link>
      <pubDate>Tue, 30 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter%E6%A0%B9%E6%8D%AE%E5%B1%8F%E5%B9%95%E5%B0%BA%E5%AF%B8%E5%AE%BD%E5%BA%A6-%E9%AB%98%E5%BA%A6%E7%9A%84%E7%99%BE%E5%88%86%E6%AF%94%E8%AE%BE%E5%AE%9A%E5%85%83%E7%B4%A0%E5%B0%8F%E9%83%A8%E4%BB%B6/</guid>
      <description>&lt;p&gt;最让前端开发人员头疼的问题之一就是屏幕尺寸兼容性问题了. Web端开发人员经常会对测试人员说: &amp;ldquo;换个浏览器试一下&amp;rdquo;.😂 虽然现在的主流的屏幕大小非常相似, 但是我们也要事先处理好. 本篇文章就来记录Flutter如何根据屏幕尺寸(宽度/高度)的百分比设定元素(小部件/组件/Widget)尺寸.&lt;/p&gt;&#xA;&lt;h2 id=&#34;效果&#34;&gt;效果&lt;/h2&gt;&#xA;&lt;p&gt;有图有真相, 先来看一下效果:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Flutter-%E5%B1%8F%E5%B9%95%E5%B0%BA%E5%AF%B8%E8%AE%BE%E7%BD%AE%E5%85%83%E7%B4%A0%E5%B0%BA%E5%AF%B8-04.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;你掌握Flutter基础.&lt;/li&gt;&#xA;&lt;li&gt;你了解基础的Flutter布局.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;本篇文章的开发环境:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]老规矩, 速度快的同学直接看最下方的核心代码![/epcl_box]&lt;/p&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;准备工作&#34;&gt;准备工作&lt;/h3&gt;&#xA;&lt;p&gt;创建一个Flutter项目, 替换&lt;code&gt;main.dart&lt;/code&gt;为:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`import &#39;package:flutter/material.dart&#39;;  void main() =&amp;gt; runApp(MyApp());  class MyApp extends StatelessWidget {   @override   Widget build(BuildContext context) {     return MaterialApp(       title: &#39;Flutter Demo&#39;,       theme: ThemeData(         primarySwatch: Colors.blue,       ),       home: MyHomePage(title: &#39;屏幕百分比设定元素尺寸&#39;),     );   } }  class MyHomePage extends StatefulWidget {   MyHomePage({Key key, this.title}) : super(key: key);   final String title;    @override   _MyHomePageState createState() =&amp;gt; _MyHomePageState(); }  class _MyHomePageState extends State&amp;lt;MyHomePage&amp;gt; {    @override   Widget build(BuildContext context) {     return Scaffold(       appBar: AppBar(         title: Text(widget.title),       ),       body: Row(         children: [           Container(             color: Color(0xFFFF6666),             child: Text(&amp;quot;30%&amp;quot;, style: Theme.of(context).textTheme.headline2,),           ),           Container(             color: Color(0xFFFFFF66),             child: Text(&amp;quot;70%&amp;quot;, style: Theme.of(context).textTheme.headline2,),           )         ],       ),     );   } }`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;🟢 运行项目, 应该是这样的:&lt;/p&gt;</description>
    </item>
    <item>
      <title>三种不同的&#34;空格&#34; Unicode( , ,　)及区别</title>
      <link>http://localhost:1313/posts/post/2020/%E4%B8%89%E7%A7%8D%E4%B8%8D%E5%90%8C%E7%9A%84%E7%A9%BA%E6%A0%BC-unicodeu00a0u0020u3000%E5%8F%8A%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Sat, 27 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E4%B8%89%E7%A7%8D%E4%B8%8D%E5%90%8C%E7%9A%84%E7%A9%BA%E6%A0%BC-unicodeu00a0u0020u3000%E5%8F%8A%E5%8C%BA%E5%88%AB/</guid>
      <description>&lt;p&gt;今天阿航在使用Dart的&lt;code&gt;jsonEncoder&lt;/code&gt;做json字符串解析时, 一直报错. 但是使用bejson等网站进行解析时却不会出错. 本篇文章就来记录下问题原因. 以及三种不同的&amp;quot;空格&amp;quot; Unicode(\u00A0,\u0020,\u3000)及区别&lt;/p&gt;&#xA;&lt;h2 id=&#34;三种空格的区别&#34;&gt;三种空格的区别&lt;/h2&gt;&#xA;&lt;p&gt;一张表格来分别解释几种空格:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Unicode编码&lt;/th&gt;&#xA;          &lt;th&gt;含义&lt;/th&gt;&#xA;          &lt;th&gt;用途&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;\u00A0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;不间断空格&lt;/td&gt;&#xA;          &lt;td&gt;在Office中比较常见, 使某个单词在结尾处不会被自动换行显示(快捷键&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;空格&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;\u0020&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;半角空格(英文符号)&lt;/td&gt;&#xA;          &lt;td&gt;正常的空格, 点击键盘的空格键就会输入. 在代码中常用&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;\u3000&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;全角空格(中文符号)&lt;/td&gt;&#xA;          &lt;td&gt;用处并不多. 可以用于中文的文章.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>Flutter 隐藏/显示某widget组件、切换显示状态</title>
      <link>http://localhost:1313/posts/post/2020/flutter-%E9%9A%90%E8%97%8F-%E6%98%BE%E7%A4%BA%E6%9F%90widget%E7%BB%84%E4%BB%B6%E5%88%87%E6%8D%A2%E6%98%BE%E7%A4%BA%E7%8A%B6%E6%80%81/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-%E9%9A%90%E8%97%8F-%E6%98%BE%E7%A4%BA%E6%9F%90widget%E7%BB%84%E4%BB%B6%E5%88%87%E6%8D%A2%E6%98%BE%E7%A4%BA%E7%8A%B6%E6%80%81/</guid>
      <description>&lt;p&gt;在进行Flutter开发时, 我们需要对某个widget进行显示与隐藏状态的切换. 这个需求还是蛮常见的. 本篇文章就来记录下Flutter如何隐藏/显示某widget组件、切换显示状态.&lt;/p&gt;&#xA;&lt;h2 id=&#34;效果&#34;&gt;效果&lt;/h2&gt;&#xA;&lt;p&gt;有图有真相, 先来看下我们要实现的最终效果:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Flutter-%E9%9A%90%E8%97%8F%E6%98%BE%E7%A4%BA%E6%9F%90widget%E7%BB%84%E4%BB%B6-06.gif&#34; alt=&#34;Flutter-隐藏显示某widget组件-06&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;隐藏Widget&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Flutter-%E9%9A%90%E8%97%8F%E6%98%BE%E7%A4%BA%E6%9F%90widget%E7%BB%84%E4%BB%B6-08.gif&#34; alt=&#34;Flutter 隐藏显示某widget组件-08&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;隐藏且不影响布局&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;你已经掌握Flutter基础&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;本篇文章环境:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]老规矩, 速度快的同学直接去看核心代码![/epcl_box]&lt;/p&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;准备工作&#34;&gt;准备工作&lt;/h3&gt;&#xA;&lt;p&gt;创建一个Flutter项目, 替换文件&lt;code&gt;./lib/main.dart&lt;/code&gt;为:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`import &#39;package:flutter/material.dart&#39;;  void main() =&amp;gt; runApp(MyApp());  class MyApp extends StatelessWidget {   @override   Widget build(BuildContext context) {     return MaterialApp(       title: &#39;Show Hide widget&#39;,       theme: ThemeData(         primarySwatch: Colors.blue,       ),       home: MyHomePage(title: &#39;Show &amp;amp; Hide Widget&#39;),     );   } }  class MyHomePage extends StatefulWidget {   MyHomePage({Key key, this.title}) : super(key: key);   final String title;    @override   _MyHomePageState createState() =&amp;gt; _MyHomePageState(); }  class _MyHomePageState extends State {   // 存储&amp;quot;是否显示&amp;quot;状态   bool _isShow = true;    @override   Widget build(BuildContext context) {     return Scaffold(       appBar: AppBar(         title: Text(widget.title),       ),       body: Center(         child: Column(           mainAxisAlignment: MainAxisAlignment.center,           children: [             Text(&#39;一个文本Widget&#39;, style: Theme.of(context).textTheme.headline3),             RaisedButton(               child: Text(                 _isShow ? &amp;quot;隐藏&amp;quot; : &amp;quot;显示&amp;quot;,                 style: Theme.of(context).textTheme.headline5,               ),               onPressed: () {                 setState(() {                   _isShow = !_isShow;                 });               },             )           ],         ),       ),     );   } }`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;我们创建了布尔类型的实例变量&lt;code&gt;_isShow&lt;/code&gt;, 用于保存widget的显示状态.&lt;/p&gt;</description>
    </item>
    <item>
      <title>WordPress 短代码 shortcode 转义为普通字符串</title>
      <link>http://localhost:1313/posts/post/2020/wordpress-%E7%9F%AD%E4%BB%A3%E7%A0%81-shortcode-%E8%BD%AC%E4%B9%89%E4%B8%BA%E6%99%AE%E9%80%9A%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Tue, 23 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/wordpress-%E7%9F%AD%E4%BB%A3%E7%A0%81-shortcode-%E8%BD%AC%E4%B9%89%E4%B8%BA%E6%99%AE%E9%80%9A%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>&lt;p&gt;在使用WordPress进行创作时, 阿航碰到了需要将短代码转为普通字符展示在文章内. 本篇文章就来记录下如何将WordPress的短代码转义为普通字符串.&lt;/p&gt;&#xA;&lt;h2 id=&#34;效果&#34;&gt;效果&lt;/h2&gt;&#xA;&lt;p&gt;将短代码转为普通字符串, 展示在屏幕上的 3 个方案的 2 种效果:&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;[[epcl_box type=&amp;ldquo;information&amp;rdquo;]这是一条被短代码包住的信息![/epcl_box]]&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[epcl_box type=&amp;#34;information&amp;#34;]这是一条被短代码包住的信息![/epcl_box]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;&#xA;&lt;h2 id=&#34;场景&#34;&gt;场景&lt;/h2&gt;&#xA;&lt;p&gt;阿航的网站上有这样的提示短代码:&lt;/p&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]这是一条被短代码包住的信息![/epcl_box]&lt;/p&gt;&#xA;&lt;p&gt;在转义前, 我们是这样输入的:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[epcl_box type=&amp;#34;information&amp;#34;]这是一条被短代码包住的信息![/epcl_box]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;很明显, 这样输入会被WordPress自动转为短代码.&lt;/p&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;你掌握WordPress的基础使用&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;本篇文章的环境:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;h3 id=&#34;方案一-被包裹&#34;&gt;方案一: 被&amp;quot;&lt;!-- raw HTML omitted --&gt;&amp;ldquo;包裹&lt;/h3&gt;&#xA;&lt;p&gt;此方案非常简单, 只要我们使用&lt;code&gt;&amp;lt;code&amp;gt;&amp;lt;/code&amp;gt;&lt;/code&gt;标签将短代码括住, 代码将被自动转义, HTML写法 (区块编辑器直接找&amp;quot;代码&amp;quot;区块, 输入即可) :&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;code&amp;gt;&#xA;    [epcl_box type=&amp;#34;information&amp;#34;]这是一条被短代码包住的信息![/epcl_box]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;效果:&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[epcl_box type=&amp;#34;information&amp;#34;]这是一条被短代码包住的信息![/epcl_box]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;success&amp;rdquo;]顺利搞定![/epcl_box]&lt;/p&gt;&#xA;&lt;h3 id=&#34;方案二-被包裹&#34;&gt;方案二: 被&amp;rdquo;[]&amp;ldquo;包裹&lt;/h3&gt;&#xA;&lt;p&gt;此方案也相当简单, 我们在短代码外包裹一层&amp;rdquo;&lt;code&gt;[]&lt;/code&gt;&amp;quot;. 写法改为:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[[epcl_box type=&amp;#34;information&amp;#34;][/epcl_box]]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;效果:&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;[[epcl_box type=&amp;ldquo;information&amp;rdquo;]这是一条被短代码包住的信息![/epcl_box]]&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;success&amp;rdquo;]搞定! 本方法相当方便![/epcl_box]&lt;/p&gt;&#xA;&lt;h3 id=&#34;方案三-使用转义字符串&#34;&gt;方案三: 使用转义字符串&lt;/h3&gt;&#xA;&lt;p&gt;此方法需要我们的重点就是把&lt;code&gt;[&lt;/code&gt;和&lt;code&gt;]&lt;/code&gt;转为转义字符串. 一张表格查看对应关系:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;转义前&lt;/th&gt;&#xA;          &lt;th&gt;转义后&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;[&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;&amp;amp;#91;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;]&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;&amp;amp;#93;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;[shortcode]&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;&amp;amp;#91;shortcode&amp;amp;#93;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;那么, 我们上述例子的最终写法应为:&lt;/p&gt;</description>
    </item>
    <item>
      <title>IDEA 一键部署 SpringBoot 项目到远程服务器 Docker 内</title>
      <link>http://localhost:1313/posts/post/2020/idea-%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2-springboot-%E9%A1%B9%E7%9B%AE%E5%88%B0%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8-docker-%E5%86%85/</link>
      <pubDate>Sun, 21 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/idea-%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2-springboot-%E9%A1%B9%E7%9B%AE%E5%88%B0%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8-docker-%E5%86%85/</guid>
      <description>&lt;p&gt;Docker作为当前较为流行的微服务容器管理工具, 极大的方便了传统运维部署的工作. IDEA作为地表最强Java开发IDE, 自然提供了对Docker服务的支持. 本篇文章就来记录下如何使用IDEA 一键部署 SpringBoot 到远程服务器 Docker 内.&lt;/p&gt;&#xA;&lt;h2 id=&#34;应用场景&#34;&gt;应用场景&lt;/h2&gt;&#xA;&lt;p&gt;先来看下传统的部署流程:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/IDEA-%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2-SpringBoot-%E9%A1%B9%E7%9B%AE%E5%88%B0%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8-Docker-%E5%86%85-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;传统开发流程还好, 每个版本的间隔时间较长. 但是对于小型敏捷开发团队, 这个流程就很要命了! 阿航个人的经验, 每个项目从打包到重启Docker服务器, 预计要花费近10~20分钟! 痛不欲生.&lt;/p&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;你了解服务器的基本使用.&lt;/li&gt;&#xA;&lt;li&gt;你掌握Docker/Dockerfile的使用.&lt;/li&gt;&#xA;&lt;li&gt;你掌握基础的Bash命令.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;本篇文章的环境:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;notice&amp;rdquo;]本篇教程小步骤较多! 只要稍有疏忽就可能导致失败! 请实践时仔细阅读教程![/epcl_box]&lt;/p&gt;&#xA;&lt;h3 id=&#34;生成ca公钥私钥&#34;&gt;生成CA公钥私钥&lt;/h3&gt;&#xA;&lt;p&gt;进入&lt;strong&gt;安装了Docker的远程服务器&lt;/strong&gt;, 创建目录&lt;code&gt;ca&lt;/code&gt;, 用于存储docker ca认证文件:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mkdir -p /usr/local/ca&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;进入该目录中:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd /usr/local/ca&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行以下命令, 生成公钥及私钥. 需要输入你自己的密码. &lt;strong&gt;记住该密码, 下面会多次使用&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;openssl genrsa -aes256 -out ca-key.pem 4096&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行以下命令, 根据提示分别输入你的信息:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;openssl req -new -x509 -days 365 -key ca-key.pem -sha256 -out ca.pem&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行以下命令生成key:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;openssl genrsa -out server-key.pem 4096&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行以下命令, 把&lt;code&gt;$HOST&lt;/code&gt;替换为你的远程服务器的IP地址:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter 隐藏/移除导航栏的默认返回按钮</title>
      <link>http://localhost:1313/posts/post/2020/flutter-%E9%9A%90%E8%97%8F-%E7%A7%BB%E9%99%A4%E5%AF%BC%E8%88%AA%E6%A0%8F%E7%9A%84%E9%BB%98%E8%AE%A4%E8%BF%94%E5%9B%9E%E6%8C%89%E9%92%AE/</link>
      <pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-%E9%9A%90%E8%97%8F-%E7%A7%BB%E9%99%A4%E5%AF%BC%E8%88%AA%E6%A0%8F%E7%9A%84%E9%BB%98%E8%AE%A4%E8%BF%94%E5%9B%9E%E6%8C%89%E9%92%AE/</guid>
      <description>&lt;p&gt;在实际项目开发中, 我们在进行页面跳转时, 偶尔会跳到不可返回的页面(比如退出登录后). 本篇文章就来记录下 Flutter 如何隐藏/移除导航栏的默认返回按钮.&lt;/p&gt;&#xA;&lt;h2 id=&#34;效果&#34;&gt;效果&lt;/h2&gt;&#xA;&lt;p&gt;有图有真相, 先来看下实际效果:&lt;/p&gt;&#xA;&lt;h2 id=&#34;应用场景&#34;&gt;应用场景&lt;/h2&gt;&#xA;&lt;p&gt;移除导航栏的默认返回按钮适用于:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;退出登录后禁止返回&lt;/li&gt;&#xA;&lt;li&gt;跳转至一个全新的页面, 不可返回&lt;/li&gt;&#xA;&lt;li&gt;禁止返回的任何页面&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;掌握Flutter基础&lt;/li&gt;&#xA;&lt;li&gt;掌握Flutter页面跳转的基本操作&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;本篇文章的环境:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;环境&lt;/th&gt;&#xA;          &lt;th&gt;版本&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Flutter&lt;/td&gt;&#xA;          &lt;td&gt;1.19.0-2.0.pre&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;准备工作&#34;&gt;准备工作&lt;/h3&gt;&#xA;&lt;p&gt;创建新文件&lt;code&gt;./lib/main.dart&lt;/code&gt;(或者其他你想要的文件名):&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import &amp;#39;package:flutter/material.dart&amp;#39;;&#xA;&#xA;void main() =&amp;gt; runApp(MyApp());&#xA;&#xA;class MyApp extends StatelessWidget {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return MaterialApp(&#xA;      title: &amp;#39;Remove back button&amp;#39;,&#xA;      home: FirstPage(),&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;class FirstPage extends StatelessWidget {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      appBar: AppBar(&#xA;        title: Text(&amp;#34;First Page&amp;#34;),&#xA;      ),&#xA;      body: Center(&#xA;        child: RaisedButton(&#xA;          child: Text(&amp;#34;跳转到下一页&amp;#34;),&#xA;          onPressed: () {&#xA;            Navigator.push(context, MaterialPageRoute(builder: (context) {&#xA;              return SecondPage();&#xA;            }));&#xA;          },&#xA;        ),&#xA;      ),&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;class SecondPage extends StatelessWidget {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      appBar: AppBar(&#xA;        title: Text(&amp;#34;Second Page&amp;#34;),&#xA;      ),&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;🟢 运行, 可以看到demo提供了正常跳转:&lt;/p&gt;</description>
    </item>
    <item>
      <title>文章撰写常用组件</title>
      <link>http://localhost:1313/posts/page/2020/%E6%96%87%E7%AB%A0%E6%92%B0%E5%86%99%E5%B8%B8%E7%94%A8%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2020/%E6%96%87%E7%AB%A0%E6%92%B0%E5%86%99%E5%B8%B8%E7%94%A8%E7%BB%84%E4%BB%B6/</guid>
      <description>&lt;h2 id=&#34;常用&#34;&gt;常用&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&#xA;&amp;lt;pre&amp;gt;&#xA;    &amp;lt;code class=&amp;#34;lang-dart&amp;#34;&amp;gt;&amp;lt;/code&amp;gt;&#xA;&amp;lt;/pre&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&#xA;[epcl_box type=&amp;#34;information&amp;#34;][/epcl_box]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;💡 代码解析&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;🟢 运行项目&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;代码高亮&#34;&gt;代码高亮&lt;/h2&gt;&#xA;&lt;h3 id=&#34;line-numbers&#34;&gt;Line Numbers&lt;/h3&gt;&#xA;&lt;p&gt;展示代码行数&lt;/p&gt;&#xA;&lt;p&gt;[epcl_tabs] [epcl_tab title=&amp;ldquo;Effect&amp;rdquo;]&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`class A {     void main() =&amp;gt; runApp(MyApp()); }`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;[/epcl_tab] [epcl_tab title=&amp;ldquo;Code&amp;rdquo;]&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&#xA;&amp;lt;pre class=&amp;#34;line-numbers&amp;#34;&amp;gt;&#xA;    &amp;lt;code class=&amp;#34;lang-dart&amp;#34;&amp;gt;&#xA;    &amp;lt;/code&amp;gt;&#xA;&amp;lt;/pre&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;[/epcl_tab] [/epcl_tabs]&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;line-highlight&#34;&gt;Line Highlight&lt;/h3&gt;&#xA;&lt;p&gt;高亮指定行代码&lt;/p&gt;&#xA;&lt;p&gt;[epcl_tabs] [epcl_tab title=&amp;ldquo;Effect&amp;rdquo;]&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`class A {     void main() =&amp;gt; runApp(MyApp()); }`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;[/epcl_tab] [epcl_tab title=&amp;ldquo;Code&amp;rdquo;]&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&#xA;&amp;lt;pre data-line=&amp;#34;1&amp;#34;&amp;gt;&#xA;    &amp;lt;code class=&amp;#34;lang-dart&amp;#34;&amp;gt;&#xA;    &amp;lt;/code&amp;gt;&#xA;&amp;lt;/pre&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;[/epcl_tab] [/epcl_tabs]&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;指定&lt;code&gt;data-line&lt;/code&gt;可以为: 1-2, 5, 9-20&lt;/p&gt;&#xA;&lt;p&gt;可与Line Numbers配合使用&lt;/p&gt;</description>
    </item>
    <item>
      <title>未命名可重用区块</title>
      <link>http://localhost:1313/posts/wp_block/2020/%E6%9C%AA%E5%91%BD%E5%90%8D%E5%8F%AF%E9%87%8D%E7%94%A8%E5%8C%BA%E5%9D%97-4/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/wp_block/2020/%E6%9C%AA%E5%91%BD%E5%90%8D%E5%8F%AF%E9%87%8D%E7%94%A8%E5%8C%BA%E5%9D%97-4/</guid>
      <description>&lt;h2 id=&#34;代码高亮&#34;&gt;代码高亮&lt;/h2&gt;&#xA;&lt;h3 id=&#34;line-numbers&#34;&gt;Line Numbers&lt;/h3&gt;&#xA;&lt;p&gt;展示代码行数&lt;/p&gt;&#xA;&lt;p&gt;[epcl_tabs] [epcl_tab title=&amp;ldquo;Effect&amp;rdquo;]&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`class A {     void main() =&amp;gt; runApp(MyApp()); }`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;[/epcl_tab] [epcl_tab title=&amp;ldquo;Code&amp;rdquo;]&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&#xA;&amp;lt;pre class=&amp;#34;line-numbers&amp;#34;&amp;gt;&#xA;    &amp;lt;code class=&amp;#34;lang-dart&amp;#34;&amp;gt;&#xA;    &amp;lt;/code&amp;gt;&#xA;&amp;lt;/pre&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;[/epcl_tab] [/epcl_tabs]&lt;/p&gt;&#xA;&lt;h3 id=&#34;line-highlight&#34;&gt;Line Highlight&lt;/h3&gt;&#xA;&lt;p&gt;高亮指定行代码&lt;/p&gt;&#xA;&lt;p&gt;[epcl_tabs] [epcl_tab title=&amp;ldquo;Effect&amp;rdquo;]&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;`class A {     void main() =&amp;gt; runApp(MyApp()); }`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;[/epcl_tab] [epcl_tab title=&amp;ldquo;Code&amp;rdquo;]&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&#xA;&amp;lt;pre data-line=&amp;#34;1&amp;#34;&amp;gt;&#xA;    &amp;lt;code class=&amp;#34;lang-dart&amp;#34;&amp;gt;&#xA;    &amp;lt;/code&amp;gt;&#xA;&amp;lt;/pre&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;[/epcl_tab] [/epcl_tabs]&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;指定&lt;code&gt;data-line&lt;/code&gt;可以为: 1-2, 5, 9-20&lt;/p&gt;&#xA;&lt;p&gt;可与Line Numbers配合使用&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;h3 id=&#34;diff-highlight&#34;&gt;Diff Highlight&lt;/h3&gt;&#xA;&lt;p&gt;[epcl_tabs] [epcl_tab title=&amp;ldquo;Effect&amp;rdquo;]&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-diff-dart&#34; data-lang=&#34;diff-dart&#34;&gt;- println(&amp;#34;A&amp;#34;);&#xA;+    println(&amp;#34;B&amp;#34;);&#xA;     println(&amp;#34;C&amp;#34;)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;[/epcl_tab] [epcl_tab title=&amp;ldquo;Code&amp;rdquo;]&lt;/p&gt;</description>
    </item>
    <item>
      <title>Stack Overflow 无法访问、访问速度慢的解决方案</title>
      <link>http://localhost:1313/posts/post/2020/stack-overflow-%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6%E6%85%A2%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/stack-overflow-%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6%E6%85%A2%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>&lt;p&gt;因为大陆对Google进行了封锁, 所以大陆无法访问包含了Google域名的资源文件的页面, 即使能访问也过慢. Stack Overflow作为全球最大的技术问答平台, 无法访问是我们相当大的一个损失. 本篇文章就来记录几种解决方案.&lt;/p&gt;&#xA;&lt;h2 id=&#34;问题原因&#34;&gt;问题原因&lt;/h2&gt;&#xA;&lt;p&gt;打开调试控制台(F12), 访问 &lt;a href=&#34;https://stackoverflow.com/&#34; target=&#34;_blank&#34;&gt;https://stackoverflow.com/&lt;/a&gt;&#xA; . 我们会发现有关Google的请求非常慢, 甚至无法访问. 如:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;那么找到了原因, 我们就针对此问题进行解决即可!&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;h3 id=&#34;replace-google-cdn&#34;&gt;Replace Google CDN&lt;/h3&gt;&#xA;&lt;h4 id=&#34;firefox&#34;&gt;FireFox&lt;/h4&gt;&#xA;&lt;p&gt;直接安装插件即可 &lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/replace-google-cdn/&#34; target=&#34;_blank&#34;&gt;插件地址&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;&lt;h4 id=&#34;chromeedge等谷歌内核的浏览器&#34;&gt;Chrome/Edge等谷歌内核的浏览器:&lt;/h4&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/justjavac/ReplaceGoogleCDN/archive/master.zip&#34; target=&#34;_blank&#34;&gt;点击下载插件&lt;/a&gt;&#xA;, 并解压. 找到其中的&lt;code&gt;chrome&lt;/code&gt;目录&lt;/p&gt;&#xA;&lt;p&gt;打开浏览器, 输入&lt;code&gt;chrome://extensions/&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;开启右上角的&lt;code&gt;开发者模式&lt;/code&gt;或者&lt;code&gt;Developer Mode&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/StackOverflow-%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E3%80%81%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6%E6%85%A2%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;紧接着点击&lt;code&gt;加载已解压的扩展程序&lt;/code&gt;或&lt;code&gt;Load unpacked extension...&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/StackOverflow-%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E3%80%81%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6%E6%85%A2%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;选择刚才下载的插件目录中的&lt;code&gt;chrome&lt;/code&gt;目录.&lt;/p&gt;&#xA;&lt;p&gt;关闭开发者模式.&lt;/p&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;success&amp;rdquo;]再次访问Stack Overflow, 感受飞一样的速度吧![/epcl_box]&lt;/p&gt;&#xA;&lt;h2 id=&#34;感谢&#34;&gt;感谢&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/justjavac&#34; target=&#34;_blank&#34;&gt;justjavac&lt;/a&gt;&#xA; / &lt;strong&gt;&lt;a href=&#34;https://github.com/justjavac/ReplaceGoogleCDN&#34; target=&#34;_blank&#34;&gt;ReplaceGoogleCDN&lt;/a&gt;&#xA;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter 禁用按钮/禁止按钮点击</title>
      <link>http://localhost:1313/posts/post/2020/flutter-%E7%A6%81%E7%94%A8%E6%8C%89%E9%92%AE-%E7%A6%81%E6%AD%A2%E6%8C%89%E9%92%AE%E7%82%B9%E5%87%BB/</link>
      <pubDate>Tue, 16 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-%E7%A6%81%E7%94%A8%E6%8C%89%E9%92%AE-%E7%A6%81%E6%AD%A2%E6%8C%89%E9%92%AE%E7%82%B9%E5%87%BB/</guid>
      <description>&lt;p&gt;某些情况下我们需要禁用某个按钮的点击事件. 通过灵活的按钮禁止状态切换可以实现很多实际需求. 本篇文章就来记录下Flutter如何禁用按钮以及禁止按钮点击.&lt;/p&gt;&#xA;&lt;h2 id=&#34;效果&#34;&gt;效果&lt;/h2&gt;&#xA;&lt;p&gt;有图有真相, 先来看下我们的最终效果:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Flutter-%E7%A6%81%E7%94%A8%E6%8C%89%E9%92%AE%E7%A6%81%E6%AD%A2%E6%8C%89%E9%92%AE%E7%82%B9%E5%87%BB-04.gif&#34; alt=&#34;Flutter-禁用按钮禁止按钮点击-04&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;应用场景&#34;&gt;应用场景&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;用户权限不足, 禁止某些按钮点击.&lt;/li&gt;&#xA;&lt;li&gt;用户表单未填完, 禁止下一步.&lt;/li&gt;&#xA;&lt;li&gt;用户阅读相关条款至少X秒, 倒数结束前锁定按钮.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;你了解Flutter基础&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;本篇文章的环境:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;环境&lt;/th&gt;&#xA;          &lt;th&gt;版本&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Windows&lt;/td&gt;&#xA;          &lt;td&gt;10&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Android Studio&lt;/td&gt;&#xA;          &lt;td&gt;3.5&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Flutter&lt;/td&gt;&#xA;          &lt;td&gt;1.19.0-2.0.pre&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;准备工作&#34;&gt;准备工作&lt;/h3&gt;&#xA;&lt;p&gt;创建一个空项目.&lt;/p&gt;&#xA;&lt;p&gt;删除&lt;code&gt;./test&lt;/code&gt;目录.&lt;/p&gt;&#xA;&lt;p&gt;替换&lt;code&gt;./lib/main.dart&lt;/code&gt;为:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import &amp;#39;package:flutter/cupertino.dart&amp;#39;;&#xA;import &amp;#39;package:flutter/material.dart&amp;#39;;&#xA;&#xA;void main() =&amp;gt; runApp(MyApp());&#xA;&#xA;class MyApp extends StatelessWidget {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return MaterialApp(&#xA;      title: &amp;#39;Disable Button&amp;#39;,&#xA;      theme: ThemeData(&#xA;        primarySwatch: Colors.blue,&#xA;      ),&#xA;      home: MyHomePage(title: &amp;#39;Disable Button&amp;#39;),&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;class MyHomePage extends StatefulWidget {&#xA;  MyHomePage({Key key, this.title}) : super(key: key);&#xA;  final String title;&#xA;&#xA;  @override&#xA;  _MyHomePageState createState() =&amp;gt; _MyHomePageState();&#xA;}&#xA;&#xA;class _MyHomePageState extends State {&#xA;&#xA;  // 是否开启按钮&#xA;  bool isEnabled = true;&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      appBar: AppBar(title: Text(widget.title)),&#xA;      body: Center(&#xA;        child: Column(&#xA;          mainAxisAlignment: MainAxisAlignment.center,&#xA;          children: [&#xA;&#xA;            // 开关控件&#xA;            CupertinoSwitch(&#xA;              value: this.isEnabled,&#xA;              onChanged: (bool value) {&#xA;                setState(() {&#xA;                  this.isEnabled = value;&#xA;                });&#xA;              },&#xA;            ),&#xA;            RaisedButton(child: Text(&amp;#34;目标按钮&amp;#34;, style: TextStyle(fontSize: 25,color: Colors.white)), color: Colors.blue,onPressed: (){}),&#xA;          ],&#xA;        ),&#xA;      ),&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;🟢 运行项目, 应该会出现一个开关控件和一个&amp;quot;目标按钮&amp;quot;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter为widget添加border边框、下划线</title>
      <link>http://localhost:1313/posts/post/2020/flutter%E4%B8%BAwidget%E6%B7%BB%E5%8A%A0border%E8%BE%B9%E6%A1%86%E4%B8%8B%E5%88%92%E7%BA%BF/</link>
      <pubDate>Mon, 15 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter%E4%B8%BAwidget%E6%B7%BB%E5%8A%A0border%E8%BE%B9%E6%A1%86%E4%B8%8B%E5%88%92%E7%BA%BF/</guid>
      <description>&lt;p&gt;有时我们需要为Flutter的widget小部件添加各式各样的边框. 但是并不是所有widget都提供了边框的属性, 本篇文章就来记录下如何为Flutter 的 widget 添加border边框、下划线.&lt;/p&gt;&#xA;&lt;h2 id=&#34;效果&#34;&gt;效果&lt;/h2&gt;&#xA;&lt;p&gt;有图有真相, 先来看下我们要实现的最终效果:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Flutter%E4%B8%BAwidget%E6%B7%BB%E5%8A%A0border%E8%BE%B9%E6%A1%86-11.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;你已经掌握Flutter基础&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;本篇文章的开发环境:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;环境&lt;/th&gt;&#xA;          &lt;th&gt;版本&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;操作系统&lt;/td&gt;&#xA;          &lt;td&gt;Windows 10&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Flutter&lt;/td&gt;&#xA;          &lt;td&gt;1.19.0-2.0.pre&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;IDE&lt;/td&gt;&#xA;          &lt;td&gt;Android Studio 3.5&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]速度快的同学直接复制下方的&amp;quot;全部源码&amp;quot;自行研究! 稳一点的同学请按照教程一步一步来! [/epcl_box]&lt;/p&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;创建项目清理代码&#34;&gt;创建项目&amp;amp;清理代码&lt;/h3&gt;&#xA;&lt;p&gt;为了便于演示, 阿航在这里创建一个空项目.&lt;/p&gt;&#xA;&lt;p&gt;创建完成后, 删除&lt;code&gt;./test&lt;/code&gt;目录. 因为我们的demo无需测试类.&lt;/p&gt;&#xA;&lt;p&gt;替换&lt;code&gt;./lib/main.dart&lt;/code&gt;为:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import &amp;#39;package:flutter/material.dart&amp;#39;;&#xA;&#xA;void main() =&amp;gt; runApp(MyApp());&#xA;&#xA;class MyApp extends StatelessWidget {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return MaterialApp(&#xA;      title: &amp;#39;Awesome Border&amp;#39;,&#xA;      theme: ThemeData(primarySwatch: Colors.blue),&#xA;      home: MyHomePage(title: &amp;#39;My Awesome Border&amp;#39;),&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;class MyHomePage extends StatefulWidget {&#xA;  MyHomePage({Key key, this.title}) : super(key: key);&#xA;  final String title;&#xA;&#xA;  @override&#xA;  _MyHomePageState createState() =&amp;gt; _MyHomePageState();&#xA;}&#xA;&#xA;class _MyHomePageState extends State {&#xA;  // 即将渲染的边框组件集合&#xA;  List _borderWidgets;&#xA;&#xA;  @override&#xA;  void initState() {&#xA;    // 处理带边框的对象集合&#xA;    _borderWidgets = [];&#xA;    super.initState();&#xA;  }&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    // 为了美观, 将内容全部居中处理&#xA;    _borderWidgets.forEach((element) {&#xA;      _borderWidgets[_borderWidgets.indexOf(element)] = Center(child: element);&#xA;    });&#xA;&#xA;    return Scaffold(&#xA;      appBar: AppBar(title: Text(widget.title)),&#xA;      body: Center(&#xA;          child: Container(&#xA;        padding: EdgeInsets.all(20),&#xA;        child: GridView.count(&#xA;          padding: const EdgeInsets.all(8.0),&#xA;          crossAxisCount: 3,&#xA;          crossAxisSpacing: 5,&#xA;          mainAxisSpacing: 5,&#xA;          children: _borderWidgets,&#xA;        ),&#xA;      )),&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;我们首先在&lt;code&gt;26&lt;/code&gt;行定义了实例变量&lt;code&gt;_borderWidgets&lt;/code&gt;, 它将保存我们所有的用来展示边框的Widget.&lt;/p&gt;</description>
    </item>
    <item>
      <title>顺利阅读需具备条件</title>
      <link>http://localhost:1313/posts/wp_block/2020/%E6%9C%AA%E5%91%BD%E5%90%8D%E5%8F%AF%E9%87%8D%E7%94%A8%E5%8C%BA%E5%9D%97-3/</link>
      <pubDate>Mon, 15 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/wp_block/2020/%E6%9C%AA%E5%91%BD%E5%90%8D%E5%8F%AF%E9%87%8D%E7%94%A8%E5%8C%BA%E5%9D%97-3/</guid>
      <description>&lt;p&gt;若要顺利阅读本篇文章, 需要你具备如下条件:&lt;/p&gt;</description>
    </item>
    <item>
      <title>MySQL JOIN MIN()/MAX() 组合使用</title>
      <link>http://localhost:1313/posts/post/2020/mysql-join-min-max/</link>
      <pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/mysql-join-min-max/</guid>
      <description>&lt;p&gt;这次阿航在开发后端接口, 写复杂SQL查询时碰到了这个问题, 我需要将MySQL的&lt;code&gt;JOIN&lt;/code&gt;关键字和&lt;code&gt;MIN()&lt;/code&gt;同时使用. 本篇文章就来记录下&lt;code&gt;MySQL&lt;/code&gt; &lt;code&gt;JOIN&lt;/code&gt; &lt;code&gt;MIN()/MAX()&lt;/code&gt;的组合使用.&lt;/p&gt;&#xA;&lt;h2 id=&#34;应用场景&#34;&gt;应用场景&lt;/h2&gt;&#xA;&lt;p&gt;大家都有过淘宝网购的经历, 应该记得在搜索时, 出来的结果列表都是每个产品的最小价格. 点进去后, 选择不同的型号会有相应的价格.&lt;/p&gt;&#xA;&lt;p&gt;阿航碰到的是我有两个表, 一个是SPU(产品表), 一个是SKU(商品表), 它们是一对多的关系(因为一款产品会有多个型号). 我需要在查询SPU的同时, 再把对应的最便宜的SKU的价格进行返回.&lt;/p&gt;&#xA;&lt;p&gt;总结: &lt;strong&gt;一对多关联查询, 并且把多的表的最大/最小值返回.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]为了方便大家理解, 阿航在这里进行相应的简化[/epcl_box]&lt;/p&gt;&#xA;&lt;h3 id=&#34;数据关系&#34;&gt;数据关系&lt;/h3&gt;&#xA;&lt;p&gt;先来看下两个表的关系:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/MySQL-JOIN-MINMAX-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;其中, 一个SPU对应多个SKU ( 比如一件衣服有多个颜色 ).&lt;/p&gt;&#xA;&lt;p&gt;💡 解析&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;h3 id=&#34;初始化数据库&#34;&gt;初始化数据库&lt;/h3&gt;&#xA;&lt;p&gt;进入数据库, 运行以下SQL语句定义并初始化数据表:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE DATABASE mysql_join_demo DEFAULT CHARACTER &#xA;SET = &amp;#39;utf8mb4&amp;#39;;&#xA;&#xA;USE mysql_join_demo;&#xA;&#xA;CREATE TABLE t_spu(&#xA;    id BIGINT NOT NULL AUTO_INCREMENT COMMENT &amp;#39;主键&amp;#39;,&#xA;    name VARCHAR(32) NOT NULL COMMENT &amp;#39;产品名&amp;#39;,&#xA;    PRIMARY KEY (id)&#xA;) COMMENT = &amp;#39;产品SPU表&amp;#39;;&#xA;&#xA;CREATE TABLE t_sku(&#xA;    id BIGINT NOT NULL AUTO_INCREMENT COMMENT &amp;#39;主键&amp;#39;,&#xA;    spu_id BIGINT NOT NULL COMMENT &amp;#39;产品ID&amp;#39;,&#xA;    spec VARCHAR(32) NOT NULL COMMENT &amp;#39;型号&amp;#39;,&#xA;    price BIGINT NOT NULL COMMENT &amp;#39;价格&amp;#39;,&#xA;    PRIMARY KEY (id)&#xA;) COMMENT = &amp;#39;商品表&amp;#39;;&#xA;&#xA;INSERT INTO `mysql_join_demo`.`t_spu`(`id`, `name`) VALUES (1, &amp;#39;联想电脑&amp;#39;);&#xA;INSERT INTO `mysql_join_demo`.`t_sku`(`id`, `spu_id`, `spec`, `price`) VALUES (1, 1, &amp;#39;低配版&amp;#39;, 5000);&#xA;INSERT INTO `mysql_join_demo`.`t_sku`(`id`, `spu_id`, `spec`, `price`) VALUES (2, 1, &amp;#39;高配版&amp;#39;, 8000);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;运行完成后, 表的数据结构应该为:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter 实现毛玻璃/磨砂效果</title>
      <link>http://localhost:1313/posts/post/2020/flutter-%E5%AE%9E%E7%8E%B0%E6%AF%9B%E7%8E%BB%E7%92%83-%E7%A3%A8%E7%A0%82%E6%95%88%E6%9E%9C/</link>
      <pubDate>Mon, 08 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-%E5%AE%9E%E7%8E%B0%E6%AF%9B%E7%8E%BB%E7%92%83-%E7%A3%A8%E7%A0%82%E6%95%88%E6%9E%9C/</guid>
      <description>&lt;p&gt;还记得之前风靡一时的Windows 7的毛玻璃效果吗? 虽然过去了好多年, 但毛玻璃效果一直没有过时👨‍🎓. 本篇文章就来记录下如何使用Flutter实现毛玻璃/磨砂效果.&lt;/p&gt;&#xA;&lt;h2 id=&#34;效果&#34;&gt;效果&lt;/h2&gt;&#xA;&lt;p&gt;有图有真相, 先来看下我们要实现的最终效果:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Flutter-%E5%AE%9E%E7%8E%B0%E6%AF%9B%E7%8E%BB%E7%92%83%E7%A3%A8%E7%A0%82%E6%95%88%E6%9E%9C-05.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;环境需具备的条件&#34;&gt;环境&amp;amp;需具备的条件&lt;/h2&gt;&#xA;&lt;p&gt;本篇文章的开发环境:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;若想顺利阅读本篇教程, 你需要具备:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;计算机已安装Flutter开发环境&lt;/li&gt;&#xA;&lt;li&gt;掌握Flutter基础&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;创建项目-清理代码&#34;&gt;创建项目, 清理代码&lt;/h3&gt;&#xA;&lt;p&gt;先来创建一个空项目, 直接用IDE创建或在终端中输入:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;flutter create my_frosted&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;删除&lt;code&gt;./test&lt;/code&gt;目录. 并替换&lt;code&gt;./lib/main.dart&lt;/code&gt;为:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import &amp;#39;package:flutter/material.dart&amp;#39;;&#xA;&#xA;void main() =&amp;gt; runApp(MyApp());&#xA;&#xA;class MyApp extends StatelessWidget {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return MaterialApp(&#xA;      title: &amp;#39;My Frosted Demo&amp;#39;,&#xA;      theme: ThemeData(&#xA;        primarySwatch: Colors.blue,&#xA;      ),&#xA;      home: MyFrosted(),&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;class MyFrosted extends StatelessWidget {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      body: Stack(&#xA;        children: [],&#xA;      ),&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;🟢 运行项目, 可以看到白白的一片, 啥也没有:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git统计指定时间日期范围内代码量、代码行数</title>
      <link>http://localhost:1313/posts/post/2020/git%E7%BB%9F%E8%AE%A1%E6%8C%87%E5%AE%9A%E6%97%B6%E9%97%B4%E6%97%A5%E6%9C%9F%E8%8C%83%E5%9B%B4%E5%86%85%E4%BB%A3%E7%A0%81%E9%87%8F%E4%BB%A3%E7%A0%81%E8%A1%8C%E6%95%B0/</link>
      <pubDate>Sat, 06 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/git%E7%BB%9F%E8%AE%A1%E6%8C%87%E5%AE%9A%E6%97%B6%E9%97%B4%E6%97%A5%E6%9C%9F%E8%8C%83%E5%9B%B4%E5%86%85%E4%BB%A3%E7%A0%81%E9%87%8F%E4%BB%A3%E7%A0%81%E8%A1%8C%E6%95%B0/</guid>
      <description>&lt;p&gt;因为要写周工作报告, 自己希望将本周的工作量化出来. 所以想到: &amp;ldquo;能不能统计一下本周我的代码总行数呢?&amp;rdquo;. 本篇文章就来记录下Git统计代码量、代码行数.&lt;/p&gt;&#xA;&lt;h2 id=&#34;应用场景&#34;&gt;应用场景&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;量化工作报告(就像阿航的需求)&lt;/li&gt;&#xA;&lt;li&gt;项目统计&lt;/li&gt;&#xA;&lt;li&gt;小组工作占比统计&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;环境需具备的条件&#34;&gt;环境&amp;amp;需具备的条件&lt;/h2&gt;&#xA;&lt;p&gt;本篇博客环境:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;环境&lt;/th&gt;&#xA;          &lt;th&gt;版本&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;操作系统&lt;/td&gt;&#xA;          &lt;td&gt;Windows 10 家庭版&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Git&lt;/td&gt;&#xA;          &lt;td&gt;2.25.0.windows.1&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;本篇博客假定你具备以下条件:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;计算机已部署git环境&lt;/li&gt;&#xA;&lt;li&gt;熟悉git基本命令&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;p&gt;本篇教程相当简单. 几步搞定.&lt;/p&gt;&#xA;&lt;h3 id=&#34;打开git终端&#34;&gt;打开git终端&lt;/h3&gt;&#xA;&lt;p&gt;首先, 进入你的项目目录, 右键打开git bash:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Git%E7%BB%9F%E8%AE%A1%E4%BB%A3%E7%A0%81%E9%87%8F%E3%80%81%E4%BB%A3%E7%A0%81%E8%A1%8C%E6%95%B0-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;会出现一个比较可爱的窗口:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Git%E7%BB%9F%E8%AE%A1%E4%BB%A3%E7%A0%81%E9%87%8F%E3%80%81%E4%BB%A3%E7%A0%81%E8%A1%8C%E6%95%B0-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;输入统计命令&#34;&gt;输入统计命令&lt;/h3&gt;&#xA;&lt;p&gt;重点来了! 输入git统计时间段内命令:&lt;/p&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;notice&amp;rdquo;]这里不能使用Windows的CMD替代git bash进行操作. 会报各种奇葩的错误![/epcl_box]&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git log --since=&amp;#34;2020-06-01&amp;#34; --before=&amp;#34;2020-06-05&amp;#34; --author=&amp;#34;阿航&amp;#34; \&#xA;--pretty=tformat: --numstat | awk &amp;#39;{ add += $1; subs += $2; loc += $1 - $2 } END { printf &amp;#34;新增行数: %s, 移除行数: %s, 总行数: %s\n&amp;#34;, add, subs, loc }&amp;#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;参数&lt;/th&gt;&#xA;          &lt;th&gt;含义&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;--since=&amp;ldquo;2020-06-01&amp;rdquo;&lt;/td&gt;&#xA;          &lt;td&gt;统计起始日期&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;--before=&amp;ldquo;2020-06-05&amp;rdquo;&lt;/td&gt;&#xA;          &lt;td&gt;统计结束日期&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;--author=&amp;ldquo;阿航&amp;rdquo;&lt;/td&gt;&#xA;          &lt;td&gt;需要统计的开发者&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;&lt;strong&gt;将以上参数替换为自己的!&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>提示: 注意环境差异</title>
      <link>http://localhost:1313/posts/wp_block/2020/%E6%9C%AA%E5%91%BD%E5%90%8D%E5%8F%AF%E9%87%8D%E7%94%A8%E5%8C%BA%E5%9D%97/</link>
      <pubDate>Sat, 06 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/wp_block/2020/%E6%9C%AA%E5%91%BD%E5%90%8D%E5%8F%AF%E9%87%8D%E7%94%A8%E5%8C%BA%E5%9D%97/</guid>
      <description>&lt;p&gt;[epcl_box type=&amp;ldquo;notice&amp;rdquo;]一定要注意环境的差异, 考虑不兼容的可能性; 并且具备以上条件. 否则阅读本篇博客可能会给你带来困扰.[/epcl_box]&lt;/p&gt;</description>
    </item>
    <item>
      <title>MyBatis-Plus 读写 Mysql的Json类型字段数据</title>
      <link>http://localhost:1313/posts/post/2020/mybatis-plus-%E8%AF%BB%E5%86%99-mysql%E7%9A%84json%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Fri, 05 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/mybatis-plus-%E8%AF%BB%E5%86%99-mysql%E7%9A%84json%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5%E6%95%B0%E6%8D%AE/</guid>
      <description>&lt;p&gt;Mybatis-Plus是一款相当优秀的开源框架, 为单表操作提供了极大的便利. 这次阿航在写服务端时, 需要对MySQL的json类型字段进行操作, 忙活了一阵, 终于找到了解决方案, 并在本篇文章进行记录.&lt;/p&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;p&gt;本篇文章环境:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;环境&lt;/th&gt;&#xA;          &lt;th&gt;版本号&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Mybatis-Plus&lt;/td&gt;&#xA;          &lt;td&gt;3.3.2&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;本篇文章假定:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;你掌握Java/Kotlin基础(注解)&lt;/li&gt;&#xA;&lt;li&gt;你掌握Mybatis以及Mybatis-Plus的基本使用&lt;/li&gt;&#xA;&lt;li&gt;你了解FastJSON或Gson&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;notice&amp;rdquo;]如果还不具备以上的条件, 阅读本篇文章可能会有阻碍! 建议先满足条件后再尝试阅读![/epcl_box]&lt;/p&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]老规矩, 速度快的同学直接向下拉. 看核心代码.[/epcl_box]&lt;/p&gt;&#xA;&lt;h2 id=&#34;场景&#34;&gt;场景&lt;/h2&gt;&#xA;&lt;p&gt;我们拥有一个json类型的数据库字段, 我们在进行写操作时, 不希望将对象转为json字符串再存数据库. 读数据也是一样. 我们希望这一切自动完成.&lt;/p&gt;&#xA;&lt;h2 id=&#34;准备工作&#34;&gt;准备工作&lt;/h2&gt;&#xA;&lt;p&gt;我们先来创建一个数据库表:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE TABLE `mybatis_json_test`  (&#xA;  `id` int(10) NOT NULL AUTO_INCREMENT PRIMARY KEY,&#xA;  `extra_object` json NULL,&#xA;  `extra_list` json NULL,&#xA;  `extra_array` json NULL&#xA;);&#xA;&#xA;INSERT INTO `mybatis_json_test`&#xA;VALUES&#xA;&#x9;( 1, &amp;#39;{\&amp;#34;id\&amp;#34;: 1, \&amp;#34;name\&amp;#34;: \&amp;#34;2\&amp;#34;}&amp;#39;, &amp;#39;[{\&amp;#34;id\&amp;#34;: 1, \&amp;#34;name\&amp;#34;: \&amp;#34;2\&amp;#34;}]&amp;#39;, &amp;#39;[{\&amp;#34;id\&amp;#34;: 1, \&amp;#34;name\&amp;#34;: \&amp;#34;2\&amp;#34;}]&amp;#39; );&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;创建表对应实体类&#34;&gt;创建表对应实体类&lt;/h3&gt;&#xA;&lt;p&gt;首先创建实体类&lt;code&gt;MybatisJsonTest&lt;/code&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Github/Gitlab 等远程Git仓库fork后与原仓库同步</title>
      <link>http://localhost:1313/posts/post/2020/github-gitlab-%E7%AD%89%E8%BF%9C%E7%A8%8Bgit%E4%BB%93%E5%BA%93fork%E5%90%8E%E4%B8%8E%E5%8E%9F%E4%BB%93%E5%BA%93%E5%90%8C%E6%AD%A5/</link>
      <pubDate>Thu, 04 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/github-gitlab-%E7%AD%89%E8%BF%9C%E7%A8%8Bgit%E4%BB%93%E5%BA%93fork%E5%90%8E%E4%B8%8E%E5%8E%9F%E4%BB%93%E5%BA%93%E5%90%8C%E6%AD%A5/</guid>
      <description>&lt;p&gt;看到这篇文章, 说明你也是个勤奋的贡献者🤝🤝. 同学们在贡献代码 PR 前, 都需要将原仓库&lt;code&gt;fork&lt;/code&gt;下来. 但有时原仓库的代码比我们fork后的代码新, 并且github目前似乎并未提供自动fork的机制. 本篇文章就来记录下Github/Gitlab 等远程Git仓库fork后与原仓库同步的方法.&lt;/p&gt;&#xA;&lt;h2 id=&#34;适用场景&#34;&gt;适用场景&lt;/h2&gt;&#xA;&lt;p&gt;github等远程仓库的原仓库代码有大量变更, 需要将自己fork下来的仓库和原仓库同步.&lt;/p&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;p&gt;本篇教程假定:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;你已经掌握基础的CMD/Bash/Shell终端命令.&lt;/li&gt;&#xA;&lt;li&gt;你已经掌握了基本的Git命令以及Github操作.&lt;/li&gt;&#xA;&lt;li&gt;你已经有了待同步的、fork下来的代码仓库.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;notice&amp;rdquo;]本篇教程将会尽可能减少废话, 只放干货. 所以请你仔细阅读并严谨遵循教程步骤![/epcl_box]&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;h3 id=&#34;查看当前远程仓库配置&#34;&gt;查看当前远程仓库配置&lt;/h3&gt;&#xA;&lt;p&gt;打开终端, &lt;code&gt;cd&lt;/code&gt;至仓库目录内.&lt;/p&gt;&#xA;&lt;p&gt;输入以下命令以查看当前的远程仓库:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git remote -v&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;正常情况下, 会返回类似于:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git remote -v&#xA;origin  https://github.com/你的用户名/你的仓库名.git (fetch)&#xA;origin  https://github.com/你的用户名/你的仓库名.git (push)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;[epcl_box type=&amp;ldquo;notice&amp;rdquo;]如果你未返回数据, 请检查你的本地仓库是否关联了远程仓库. 若格式和上面不一致, 请检查你的仓库状态.[/epcl_box]&lt;/p&gt;&#xA;&lt;h3 id=&#34;绑定上游远程仓库&#34;&gt;绑定上游远程仓库&lt;/h3&gt;&#xA;&lt;p&gt;紧接着输入以下命令行, 绑定上游仓库:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git remote add upstream &amp;#34;https://github.com/上游用户名/上游仓库名.git&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;再次查看当前仓库:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git remote -v&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;正常情况下, 会返回类似于:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git remote -v&#xA;origin  https://github.com/你的用户名/你的仓库名.git (fetch)&#xA;origin  https://github.com/你的用户名/你的仓库名.git (push)&#xA;upstream        https://github.com/上游用户名/上游仓库名.git (fetch)&#xA;upstream        https://github.com/上游用户名/上游仓库名.git (push)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;拉取上游仓库代码&#34;&gt;拉取上游仓库代码&lt;/h3&gt;&#xA;&lt;p&gt;输入以下命令, 拉取上游仓库代码:&lt;/p&gt;</description>
    </item>
    <item>
      <title>开启Win10的内置Linux系统(Ubuntu)</title>
      <link>http://localhost:1313/posts/post/2020/%E5%BC%80%E5%90%AFwin10%E7%9A%84%E5%86%85%E7%BD%AElinux%E7%B3%BB%E7%BB%9Fubuntu/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E5%BC%80%E5%90%AFwin10%E7%9A%84%E5%86%85%E7%BD%AElinux%E7%B3%BB%E7%BB%9Fubuntu/</guid>
      <description>&lt;p&gt;不知道从哪个版本开始, Windows开始内置Linux系统了. 在之前的开发中, 两个系统切换超级麻烦, 不管是虚拟机、双系统还是双电脑, 极大的降低了开发速度, &lt;strong&gt;并不符合程序员思维&lt;/strong&gt;. 所以只能舍弃其中一个. 然而大多数的软件开发环境还是Linux更舒适. 本篇文章就来记录下&lt;strong&gt;如何开启Win10内置的Linux系统&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;p&gt;本篇文章的阿航的电脑系统及配置(配置略低, 莫笑😝😝):&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E5%BC%80%E5%90%AFWin10%E7%9A%84%E5%86%85%E7%BD%AELinux%E7%B3%BB%E7%BB%9FUbuntu-01.png&#34; alt=&#34;开启Win10的内置Linux系统(Ubuntu)-01&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;电脑配置&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E5%BC%80%E5%90%AFWin10%E7%9A%84%E5%86%85%E7%BD%AELinux%E7%B3%BB%E7%BB%9FUbuntu-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;Windows 10 版本&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;notice&amp;rdquo;]注意对照系统版本, 若你的版本过旧, 可能无法顺利遵循本文章进行配置内置Linux系统.[/epcl_box]&lt;/p&gt;&#xA;&lt;h2 id=&#34;开始&#34;&gt;开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;开启开发者模式&#34;&gt;开启开发者模式&lt;/h3&gt;&#xA;&lt;p&gt;点击开始, 输入&lt;code&gt;开发者设置&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E5%BC%80%E5%90%AFWin10%E7%9A%84%E5%86%85%E7%BD%AELinux%E7%B3%BB%E7%BB%9FUbuntu-03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;点击进入, 选中&lt;code&gt;开发人员模式&lt;/code&gt;, 它会自动安装一些东西, 耐心等待完成:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Default value of an optional parameter must be constant</title>
      <link>http://localhost:1313/posts/post/2020/default-value-of-an-optional-parameter-must-be-constant/</link>
      <pubDate>Tue, 02 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/default-value-of-an-optional-parameter-must-be-constant/</guid>
      <description>&lt;p&gt;今天阿航在使用Flutter进行开发时, 希望为&lt;code&gt;final&lt;/code&gt;修饰的实例变量提供默认值. 尝试过程中IDE报错:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Default values of an optional parameter must be constant.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;本篇文章就来记录下碰到这种问题该如何解决!&lt;/p&gt;&#xA;&lt;h2 id=&#34;错误示例&#34;&gt;错误示例&lt;/h2&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]因为阿航出错的源码并不便于演示, 所以这里采用Stack Overflow上的简单示范, 使大家更直观的解决问题.[/epcl_box]&lt;/p&gt;&#xA;&lt;p&gt;先来看下错误源码:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;enum MyEnum { a, b }&#xA;&#xA;class ClassA {&#xA;  final MyEnum myEnum;&#xA;  ClassA({this.myEnum = MyEnum.a});&#xA;}&#xA;&#xA;class ClassB {&#xA;  final ClassA classA;&#xA;  ClassB({this.classA = ClassA()}); // ClassA 报错&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;乍一看似乎没有什么问题, 但是实际上Dart并不允许这种写法.&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;p&gt;其实解决方案很简单, 来看下修改后的代码(注意高亮的行):&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;enum MyEnum { a, b }&#xA;&#xA;class ClassA {&#xA;  final MyEnum myEnum;&#xA;  const ClassA({this.myEnum = MyEnum.a});&#xA;}&#xA;&#xA;class ClassB {&#xA;  final ClassA classA;&#xA;  ClassB({this.classA = const ClassA()});&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;可以看出, 我们在&lt;code&gt;ClassA&lt;/code&gt;构造函数前增加了&lt;code&gt;const&lt;/code&gt;进行修饰. 并在&lt;code&gt;ClassB&lt;/code&gt;设置classA的默认值时做了同样的操作.&lt;/p&gt;</description>
    </item>
    <item>
      <title>你所在的地区不支持通过 microsoft.com 购买 的解决方案</title>
      <link>http://localhost:1313/posts/post/2020/%E4%BD%A0%E6%89%80%E5%9C%A8%E7%9A%84%E5%9C%B0%E5%8C%BA%E4%B8%8D%E6%94%AF%E6%8C%81%E9%80%9A%E8%BF%87-microsoft-com-%E8%B4%AD%E4%B9%B0-%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E4%BD%A0%E6%89%80%E5%9C%A8%E7%9A%84%E5%9C%B0%E5%8C%BA%E4%B8%8D%E6%94%AF%E6%8C%81%E9%80%9A%E8%BF%87-microsoft-com-%E8%B4%AD%E4%B9%B0-%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>&lt;p&gt;今天在安装Win10应用商店的软件时, 在点击获取时, 很蛋疼的给我提示: &lt;code&gt;你所在的地区不支持通过 microsoft.com 购买&lt;/code&gt;, 服了. 只能再次填坑. 本篇文章就来记录下如何解决这个坑爹的问题.&lt;/p&gt;&#xA;&lt;h2 id=&#34;错误展示&#34;&gt;错误展示&lt;/h2&gt;&#xA;&lt;p&gt;先来看下是在何种情况下出现这种错误的:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E4%BD%A0%E6%89%80%E5%9C%A8%E7%9A%84%E5%9C%B0%E5%8C%BA%E4%B8%8D%E6%94%AF%E6%8C%81%E9%80%9A%E8%BF%87-microsoft.com-%E8%B4%AD%E4%B9%B0-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;去他的吧, 还在Xbox One主机上购买. 用户体验极差🤬🤬🤬🤬&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;h3 id=&#34;修改系统地区&#34;&gt;修改系统地区&lt;/h3&gt;&#xA;&lt;p&gt;点击开始, 输入&lt;code&gt;区域设置&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E4%BD%A0%E6%89%80%E5%9C%A8%E7%9A%84%E5%9C%B0%E5%8C%BA%E4%B8%8D%E6%94%AF%E6%8C%81%E9%80%9A%E8%BF%87-microsoft.com-%E8%B4%AD%E4%B9%B0-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;点进去, 修改&lt;code&gt;国家或地区&lt;/code&gt;为&lt;code&gt;美国&lt;/code&gt;(要不是为了下载软件, 谁会改!):&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E4%BD%A0%E6%89%80%E5%9C%A8%E7%9A%84%E5%9C%B0%E5%8C%BA%E4%B8%8D%E6%94%AF%E6%8C%81%E9%80%9A%E8%BF%87-microsoft.com-%E8%B4%AD%E4%B9%B0-03.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;如果刚才你没有退出Microsoft应用商店, 会弹出如下窗口, 我们点击&lt;code&gt;刷新 Microsoft Store&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E4%BD%A0%E6%89%80%E5%9C%A8%E7%9A%84%E5%9C%B0%E5%8C%BA%E4%B8%8D%E6%94%AF%E6%8C%81%E9%80%9A%E8%BF%87-microsoft.com-%E8%B4%AD%E4%B9%B0-03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;如果退出了也没关系. 再次进入Microsoft应用商店即可.&lt;/p&gt;&#xA;&lt;p&gt;刷新后的Microsoft应用商店很明显推送的名称都变成了英文:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E4%BD%A0%E6%89%80%E5%9C%A8%E7%9A%84%E5%9C%B0%E5%8C%BA%E4%B8%8D%E6%94%AF%E6%8C%81%E9%80%9A%E8%BF%87-microsoft.com-%E8%B4%AD%E4%B9%B0-04_Jc.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;再次进入我们要下载的应用页面:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E4%BD%A0%E6%89%80%E5%9C%A8%E7%9A%84%E5%9C%B0%E5%8C%BA%E4%B8%8D%E6%94%AF%E6%8C%81%E9%80%9A%E8%BF%87-microsoft.com-%E8%B4%AD%E4%B9%B0-05.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;很明显, &lt;code&gt;获取&lt;/code&gt;按钮下方的naocan提示没有了!&lt;/p&gt;&#xA;&lt;h2 id=&#34;其他问题&#34;&gt;其他问题&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果点击&amp;quot;获取&amp;quot;按钮无反应, 可以看下&lt;a href=&#34;https://www.bugcatt.com/archives/1831&#34; target=&#34;_blank&#34;&gt;这篇博客&lt;/a&gt;&#xA;.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Windows 10 Microsoft应用商店点击获取按钮无法下载、没反应</title>
      <link>http://localhost:1313/posts/post/2020/windows-10-%E5%BA%94%E7%94%A8%E5%95%86%E5%BA%97%E7%82%B9%E5%87%BB%E8%8E%B7%E5%8F%96%E6%8C%89%E9%92%AE%E6%B2%A1%E5%8F%8D%E5%BA%94/</link>
      <pubDate>Sun, 31 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/windows-10-%E5%BA%94%E7%94%A8%E5%95%86%E5%BA%97%E7%82%B9%E5%87%BB%E8%8E%B7%E5%8F%96%E6%8C%89%E9%92%AE%E6%B2%A1%E5%8F%8D%E5%BA%94/</guid>
      <description>&lt;p&gt;在使用Microsoft应用商店, 准备下载某个应用时, 点击获取按钮. 手都tm按麻了也没见开始下载&amp;hellip;甚至连提示都没有!! 服了这微软. 本篇文章就来记录下如何解决此问题.&lt;/p&gt;&#xA;&lt;h2 id=&#34;问题展示&#34;&gt;问题展示&lt;/h2&gt;&#xA;&lt;h3 id=&#34;所在地区不支持&#34;&gt;所在地区不支持&lt;/h3&gt;&#xA;&lt;p&gt;如果你是如图的问题, 请先移步&lt;a href=&#34;https://www.bugcatt.com/archives/1821&#34; target=&#34;_blank&#34;&gt;《你所在的地区不支持通过 microsoft.com 购买的解决方案》&lt;/a&gt;&#xA;:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E4%BD%A0%E6%89%80%E5%9C%A8%E7%9A%84%E5%9C%B0%E5%8C%BA%E4%B8%8D%E6%94%AF%E6%8C%81%E9%80%9A%E8%BF%87-microsoft.com-%E8%B4%AD%E4%B9%B0-01.png&#34; alt=&#34;你所在的地区不支持通过-microsoft.com-购买&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;点击获取按钮无反应&#34;&gt;点击获取按钮无反应:&lt;/h3&gt;&#xA;&lt;p&gt;当你点击如下图的获取按钮后, 界面一动不动, 没有任何回应、提示:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E4%BD%A0%E6%89%80%E5%9C%A8%E7%9A%84%E5%9C%B0%E5%8C%BA%E4%B8%8D%E6%94%AF%E6%8C%81%E9%80%9A%E8%BF%87-microsoft.com-%E8%B4%AD%E4%B9%B0-05.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;本篇文章就是来解决这个问题的.&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;h3 id=&#34;方案一-清理microsoft应用商店缓存&#34;&gt;方案一: 清理Microsoft应用商店缓存&lt;/h3&gt;&#xA;&lt;p&gt;先&lt;strong&gt;关闭&lt;/strong&gt;所有打开的应用商店窗口.&lt;/p&gt;&#xA;&lt;p&gt;右键开始, 点击&lt;code&gt;Windows Powershell(管理员)&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Windows-10-Microsoft%E5%BA%94%E7%94%A8%E5%95%86%E5%BA%97%E7%82%B9%E5%87%BB%E8%8E%B7%E5%8F%96%E6%8C%89%E9%92%AE%E6%97%A0%E6%B3%95%E4%B8%8B%E8%BD%BD%E3%80%81%E6%B2%A1%E5%8F%8D%E5%BA%94-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;在命令行中输入&lt;code&gt;wsreset&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Windows-10-Microsoft%E5%BA%94%E7%94%A8%E5%95%86%E5%BA%97%E7%82%B9%E5%87%BB%E8%8E%B7%E5%8F%96%E6%8C%89%E9%92%AE%E6%97%A0%E6%B3%95%E4%B8%8B%E8%BD%BD%E3%80%81%E6%B2%A1%E5%8F%8D%E5%BA%94-03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;输入回车, &lt;strong&gt;耐心等一下&lt;/strong&gt;(因为不会有反馈, 甚至进度条也没有), 阿航大概等了3分钟左右. 清理完成后会弹出商店:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Windows-10-Microsoft%E5%BA%94%E7%94%A8%E5%95%86%E5%BA%97%E7%82%B9%E5%87%BB%E8%8E%B7%E5%8F%96%E6%8C%89%E9%92%AE%E6%97%A0%E6%B3%95%E4%B8%8B%E8%BD%BD%E3%80%81%E6%B2%A1%E5%8F%8D%E5%BA%94-04.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Windows-10-Microsoft%E5%BA%94%E7%94%A8%E5%95%86%E5%BA%97%E7%82%B9%E5%87%BB%E8%8E%B7%E5%8F%96%E6%8C%89%E9%92%AE%E6%97%A0%E6%B3%95%E4%B8%8B%E8%BD%BD%E3%80%81%E6%B2%A1%E5%8F%8D%E5%BA%94-05.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;再次进入应用下载页, 点击获取:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Windows-10-Microsoft%E5%BA%94%E7%94%A8%E5%95%86%E5%BA%97%E7%82%B9%E5%87%BB%E8%8E%B7%E5%8F%96%E6%8C%89%E9%92%AE%E6%97%A0%E6%B3%95%E4%B8%8B%E8%BD%BD%E3%80%81%E6%B2%A1%E5%8F%8D%E5%BA%94-06.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;当然, 这种方式可能无法解决问题, 若如此, 请继续看下面的解决方案.&lt;/p&gt;&#xA;&lt;h3 id=&#34;方案二-重置microsoft应用商店&#34;&gt;方案二: 重置Microsoft应用商店&lt;/h3&gt;&#xA;&lt;p&gt;点击开始, 输入&lt;code&gt;应用和功能&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Windows-10-Microsoft%E5%BA%94%E7%94%A8%E5%95%86%E5%BA%97%E7%82%B9%E5%87%BB%E8%8E%B7%E5%8F%96%E6%8C%89%E9%92%AE%E6%97%A0%E6%B3%95%E4%B8%8B%E8%BD%BD%E3%80%81%E6%B2%A1%E5%8F%8D%E5%BA%94-07.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;点击进入, 向下拉, 找到&lt;code&gt;Microsoft Store&lt;/code&gt;, 单击它, 点击&lt;code&gt;高级选项&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Windows-10-Microsoft%E5%BA%94%E7%94%A8%E5%95%86%E5%BA%97%E7%82%B9%E5%87%BB%E8%8E%B7%E5%8F%96%E6%8C%89%E9%92%AE%E6%97%A0%E6%B3%95%E4%B8%8B%E8%BD%BD%E3%80%81%E6%B2%A1%E5%8F%8D%E5%BA%94-08.png&#34; alt=&#34;Windows 10 Microsoft应用商店点击获取按钮无法下载、没反应-08&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;进入到&lt;code&gt;高级选项&lt;/code&gt;窗口, 向下拉, 找到&lt;code&gt;重置&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Windows-10-Microsoft%E5%BA%94%E7%94%A8%E5%95%86%E5%BA%97%E7%82%B9%E5%87%BB%E8%8E%B7%E5%8F%96%E6%8C%89%E9%92%AE%E6%97%A0%E6%B3%95%E4%B8%8B%E8%BD%BD%E3%80%81%E6%B2%A1%E5%8F%8D%E5%BA%94-09.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;点击&lt;code&gt;重置&lt;/code&gt;, 并确认重置:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Windows-10-Microsoft%E5%BA%94%E7%94%A8%E5%95%86%E5%BA%97%E7%82%B9%E5%87%BB%E8%8E%B7%E5%8F%96%E6%8C%89%E9%92%AE%E6%97%A0%E6%B3%95%E4%B8%8B%E8%BD%BD%E3%80%81%E6%B2%A1%E5%8F%8D%E5%BA%94-10.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;等待, 转圈:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Windows-10-Microsoft%E5%BA%94%E7%94%A8%E5%95%86%E5%BA%97%E7%82%B9%E5%87%BB%E8%8E%B7%E5%8F%96%E6%8C%89%E9%92%AE%E6%97%A0%E6%B3%95%E4%B8%8B%E8%BD%BD%E3%80%81%E6%B2%A1%E5%8F%8D%E5%BA%94-11.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;重置完成后, 重置按钮右边会出现&amp;quot;√&amp;quot;:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Windows-10-Microsoft%E5%BA%94%E7%94%A8%E5%95%86%E5%BA%97%E7%82%B9%E5%87%BB%E8%8E%B7%E5%8F%96%E6%8C%89%E9%92%AE%E6%97%A0%E6%B3%95%E4%B8%8B%E8%BD%BD%E3%80%81%E6%B2%A1%E5%8F%8D%E5%BA%94-12.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter Clipboard 剪贴板操作: 复制到剪贴板 / 从剪贴板中获取</title>
      <link>http://localhost:1313/posts/post/2020/flutter-clipboard-%E5%89%AA%E8%B4%B4%E6%9D%BF%E6%93%8D%E4%BD%9C-%E5%A4%8D%E5%88%B6%E5%88%B0%E5%89%AA%E8%B4%B4%E6%9D%BF-%E4%BB%8E%E5%89%AA%E8%B4%B4%E6%9D%BF%E4%B8%AD%E8%8E%B7%E5%8F%96/</link>
      <pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-clipboard-%E5%89%AA%E8%B4%B4%E6%9D%BF%E6%93%8D%E4%BD%9C-%E5%A4%8D%E5%88%B6%E5%88%B0%E5%89%AA%E8%B4%B4%E6%9D%BF-%E4%BB%8E%E5%89%AA%E8%B4%B4%E6%9D%BF%E4%B8%AD%E8%8E%B7%E5%8F%96/</guid>
      <description>&lt;p&gt;我们在使用Flutter进行开发时, 有时会使用类似&amp;quot;复制本段文字&amp;quot;的功能. 为了提升用户体验, 我们不希望用户长按文字, 再自行复制, 我们希望提供一个按钮直接点击复制, 甚至自动复制! 反之从剪贴板获取也一样.&lt;/p&gt;&#xA;&lt;h2 id=&#34;效果&#34;&gt;效果&lt;/h2&gt;&#xA;&lt;p&gt;有图有真相, 不说废话, 直接展示最终效果:&lt;/p&gt;&#xA;&lt;h4 id=&#34;复制到剪贴板&#34;&gt;复制到剪贴板&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Flutter%E5%89%AA%E8%B4%B4%E6%9D%BF%E6%93%8D%E4%BD%9C-03.gif&#34; alt=&#34;Flutter剪贴板操作-03&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;从剪贴板获取粘贴&#34;&gt;从剪贴板获取(粘贴)&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Flutter%E5%89%AA%E8%B4%B4%E6%9D%BF%E6%93%8D%E4%BD%9C-04.gif&#34; alt=&#34;Flutter剪贴板操作-04&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]如果你了解阿航的技术小站, 应该会知悉每篇文章都会提供相当详细且完整的源码. [/epcl_box]&lt;/p&gt;&#xA;&lt;h2 id=&#34;应用场景&#34;&gt;应用场景&lt;/h2&gt;&#xA;&lt;h3 id=&#34;复制到剪贴板-1&#34;&gt;复制到剪贴板&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;生成了运单号, 需要用户进行保存;&lt;/li&gt;&#xA;&lt;li&gt;某些微商APP需要复制文案, 发布朋友圈;&lt;/li&gt;&#xA;&lt;li&gt;文学类APP中, 发现一段非常好的句子, 想发给好友.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;从剪贴板中获取&#34;&gt;从剪贴板中获取&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;直接填入用户复制的短信验证码.&lt;/li&gt;&#xA;&lt;li&gt;淘宝分享的东西, 复制后打开淘宝APP.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]当然, 以上只是举了几种例子, 还有更多可以提升用户操作体验的实例在此不过多举例了, 直接开始.[/epcl_box]&lt;/p&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;初始化flutter项目&#34;&gt;初始化Flutter项目&lt;/h3&gt;&#xA;&lt;p&gt;创建Flutter项目, 清理一下&lt;code&gt;./lib/main.dart&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import &amp;#39;package:flutter/material.dart&amp;#39;;&#xA;&#xA;void main() =&amp;gt; runApp(MyApp());&#xA;&#xA;class MyApp extends StatelessWidget {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return MaterialApp(&#xA;      title: &amp;#39;Flutter剪贴板操作&amp;#39;,&#xA;      theme: ThemeData(&#xA;        primarySwatch: Colors.blue,&#xA;      ),&#xA;      home: MyHomePage(title: &amp;#39;Flutter剪贴板操作&amp;#39;),&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;class MyHomePage extends StatefulWidget {&#xA;  MyHomePage({Key key, this.title}) : super(key: key);&#xA;  final String title;&#xA;&#xA;  @override&#xA;  _MyHomePageState createState() =&amp;gt; _MyHomePageState();&#xA;}&#xA;&#xA;class _MyHomePageState extends State {&#xA;  int _counter = 0;&#xA;&#xA;  void _incrementCounter() {&#xA;    setState(() {&#xA;      _counter++;&#xA;    });&#xA;  }&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      appBar: AppBar(&#xA;        title: Text(widget.title),&#xA;      ),&#xA;      body: Center(&#xA;        child: Column(&#xA;          mainAxisAlignment: MainAxisAlignment.center,&#xA;          children: [&#xA;            Text(&#xA;              &amp;#39;You have pushed the button this many times:&amp;#39;,&#xA;            ),&#xA;            Text(&#xA;              &amp;#39;$_counter&amp;#39;,&#xA;              style: Theme.of(context).textTheme.headline4,&#xA;            ),&#xA;          ],&#xA;        ),&#xA;      ),&#xA;      floatingActionButton: FloatingActionButton(&#xA;        onPressed: _incrementCounter,&#xA;        tooltip: &amp;#39;Increment&amp;#39;,&#xA;        child: Icon(Icons.add),&#xA;      ),&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;运行下项目, 应该空空如也:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Scaffold.of() called with a context that does not contain a Scaffold</title>
      <link>http://localhost:1313/posts/post/2020/scaffold-of-called-with-a-context-that-does-not-contain-a-scaffold/</link>
      <pubDate>Fri, 29 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/scaffold-of-called-with-a-context-that-does-not-contain-a-scaffold/</guid>
      <description>&lt;p&gt;今天阿航在研究底部弹出提示&lt;code&gt;showSnackBar()&lt;/code&gt;组件时碰到了这个报错:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Scaffold.of() called with a context that does not contain a Scaffold.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;本篇文章就来记录下这种报错该如何解决!&lt;/p&gt;&#xA;&lt;h2 id=&#34;问题原因&#34;&gt;问题原因&lt;/h2&gt;&#xA;&lt;p&gt;完整报错日志:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;════════ Exception caught by gesture ═══════════════════════════════════════════════════════════════&#xA;The following assertion was thrown while handling a gesture:&#xA;Scaffold.of() called with a context that does not contain a Scaffold.&#xA;&#xA;No Scaffold ancestor could be found starting from the context that was passed to Scaffold.of(). This usually happens when the context provided is from the same StatefulWidget as that whose build function actually creates the Scaffold widget being sought.&#xA;&#xA;There are several ways to avoid this problem. The simplest is to use a Builder to get a context that is &amp;#34;under&amp;#34; the Scaffold. For an example of this, please see the documentation for Scaffold.of():&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;先来看下阿航出错的源码:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter 判断当前环境是否为Web/安卓/IOS/MacOS/Windows/Linux/Fuchsia</title>
      <link>http://localhost:1313/posts/post/2020/flutter-%E5%88%A4%E6%96%AD%E5%BD%93%E5%89%8D%E7%8E%AF%E5%A2%83%E6%98%AF%E5%90%A6%E4%B8%BAweb-%E5%AE%89%E5%8D%93-ios-macos-windows-linux-fuchsia/</link>
      <pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-%E5%88%A4%E6%96%AD%E5%BD%93%E5%89%8D%E7%8E%AF%E5%A2%83%E6%98%AF%E5%90%A6%E4%B8%BAweb-%E5%AE%89%E5%8D%93-ios-macos-windows-linux-fuchsia/</guid>
      <description>&lt;p&gt;如果你最近在使用Flutter, 应该了解到目前Flutter已经可以导出为Web/安卓/IOS/MacOS/Windows/Linux/Fuchsia项目了. 但是目前兼容Web的Flutter第三方库不是很多, 并且布局上可能需要进行相应的调整, 所以本篇文章就来记录下Flutter判断当前环境是否为Web!&lt;/p&gt;&#xA;&lt;h2 id=&#34;适用场景&#34;&gt;适用场景&lt;/h2&gt;&#xA;&lt;p&gt;我们通常会在原生应用和web端等有环境差异时使用, 根据不同环境做不同处理.&lt;/p&gt;&#xA;&lt;h3 id=&#34;方法一-使用原生platform判断&#34;&gt;方法一: 使用原生Platform判断&lt;/h3&gt;&#xA;&lt;p&gt;flutter已经为我们提供了获取当前运行环境的&lt;code&gt;Platform&lt;/code&gt;类.&lt;/p&gt;&#xA;&lt;p&gt;先导入:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import &amp;#39;dart:io&amp;#39;;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;进行调用:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if(Platform.isAndroid){&#xA;  // Android&#xA;}else if(Platform.isIOS){&#xA;  // IOS&#xA;}else if(Platform.isFuchsia){&#xA;  // Fuchsia&#xA;}else if(Platform.isWindows){&#xA;  // Windows&#xA;}else if(Platform.isMacOS){&#xA;  // MacOS&#xA;}else if(Platform.isLinux){&#xA;  // Linux&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当然, 这个方法是有缺陷的. 因为我们无法从中判断当前环境是否为Web! 所以, 方法二就出现了.&lt;/p&gt;&#xA;&lt;h3 id=&#34;方法二-自定义工具类所有环境&#34;&gt;方法二: 自定义工具类(所有环境)&lt;/h3&gt;&#xA;&lt;h4 id=&#34;查看-constantsdart-源码&#34;&gt;查看 constants.dart 源码&lt;/h4&gt;&#xA;&lt;p&gt;进入&lt;code&gt;flutter/packages/flutter/lib/src/foundation/constants.dart&lt;/code&gt;, 我们来看看源码:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Flutter-%E5%88%A4%E6%96%AD%E5%BD%93%E5%89%8D%E7%8E%AF%E5%A2%83-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;我们可以看到一行&lt;code&gt;kIsWeb&lt;/code&gt;的注释:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/// A constant that is true if the application was compiled to run on the web.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;💡 含义: 当应用编译运行在web上时, 该常量为&lt;code&gt;true&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>在Flutter中设置背景图片 / background image</title>
      <link>http://localhost:1313/posts/post/2020/%E5%9C%A8flutter%E4%B8%AD%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87-background-image/</link>
      <pubDate>Wed, 27 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E5%9C%A8flutter%E4%B8%AD%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87-background-image/</guid>
      <description>&lt;p&gt;有时我们需要给APP的某个页面或某个widget添加背景图. 本篇文章就来记录下如何在Flutter中设置背景图片.&lt;/p&gt;&#xA;&lt;h2 id=&#34;效果&#34;&gt;效果&lt;/h2&gt;&#xA;&lt;p&gt;有图有真相, 先来看下我们本篇博客将实现的最终效果:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Flutter-%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87-background-image-04.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;速度快的同学直接看下面的核心代码!&lt;/p&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;创建flutter项目&#34;&gt;创建Flutter项目&lt;/h3&gt;&#xA;&lt;p&gt;创建一个新的Flutter项目, 运行查看一下:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Flutter-%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87-background-image-02.png&#34; alt=&#34;Flutter 设置背景图片 background image-02&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;空白的, 啥也木有.&lt;/p&gt;&#xA;&lt;h3 id=&#34;添加图片资源&#34;&gt;添加图片资源&lt;/h3&gt;&#xA;&lt;p&gt;这里为大家提供一个好看的背景图:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Flutter-%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87-background-image-01-1001x1500.jpg&#34; alt=&#34;Flutter 设置背景图片 background image-01&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.pexels.com/zh-cn/photo/2110951/?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&#34; target=&#34;_blank&#34;&gt;Pexels&lt;/a&gt;&#xA;&lt;/strong&gt; 上的 &lt;strong&gt;&lt;a href=&#34;https://www.pexels.com/zh-cn/@emrecan?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&#34; target=&#34;_blank&#34;&gt;Emre Can&lt;/a&gt;&#xA;&lt;/strong&gt; 拍摄的照片&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;下载此图片, 重命名为&lt;code&gt;background.jpg&lt;/code&gt;. 我们来将其添加至Flutter项目中.&lt;/p&gt;&#xA;&lt;h4 id=&#34;创建资源目录&#34;&gt;创建资源目录&lt;/h4&gt;&#xA;&lt;p&gt;创建目录&lt;code&gt;./assets/images&lt;/code&gt;, 将上面的图片放到该目录下:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Flutter-%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87-background-image-03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;引入pubspecyaml&#34;&gt;引入pubspec.yaml&lt;/h4&gt;&#xA;&lt;p&gt;进入&lt;code&gt;pubspec.yaml&lt;/code&gt;, 将背景图片资源文件路径&lt;code&gt;assets/images/background.jpg&lt;/code&gt;进行导入:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;flutter:&#xA;  uses-material-design: true&#xA;  assets:&#xA;   - assets/images/background.jpg&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;[epcl_box type=&amp;ldquo;notice&amp;rdquo;]这里一定要注意缩进, 若格式有误将会出错![/epcl_box]&lt;/p&gt;&#xA;&lt;p&gt;进行&lt;code&gt;package get&lt;/code&gt;或在终端中输入:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;flutter packages get&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;展示背景图&#34;&gt;展示背景图&lt;/h3&gt;&#xA;&lt;p&gt;回到&lt;code&gt;./lib/main.dart&lt;/code&gt;, 进行代码替换:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Waiting for another flutter command to release the startup lock...</title>
      <link>http://localhost:1313/posts/post/2020/waiting-for-another-flutter-command-to-release-the-startup-lock/</link>
      <pubDate>Tue, 26 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/waiting-for-another-flutter-command-to-release-the-startup-lock/</guid>
      <description>&lt;p&gt;又是开发APP的一天, 但是在执行Flutter命令时, 终端中返回:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Waiting for another flutter command to release the startup lock…&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;字面意思是: 正在等待另一个正在执行的Flutter命令完成&amp;hellip; 本篇文章就来记录一下如何如何解决这种问题.&lt;/p&gt;&#xA;&lt;h2 id=&#34;出现原因&#34;&gt;出现原因&lt;/h2&gt;&#xA;&lt;p&gt;非常明显, 它告诉了我们已经有另一个Flutter命令正在执行! 一方面因为国内网络的原因, 有些命令执行相当慢. 导致可能很久之前执行的命令到现在也没完成. 亦或者是Flutter自己在后台执行了一些命令.&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;p&gt;所以, 要解决这个问题, 我们的目标就确定了. 那就是关闭掉当前执行的Flutter命令进程!&lt;/p&gt;&#xA;&lt;p&gt;这里阿航给大家提供了若干方法, 大家可以按需选择.&lt;/p&gt;&#xA;&lt;h3 id=&#34;方法一-安全地等待执行结束&#34;&gt;方法一: 安全地等待执行结束&lt;/h3&gt;&#xA;&lt;p&gt;这个是最省心, 也是最安全的方式. 因为强行停止某个进程可能会出现各种异常, 甚至会导致需要重新安装Flutter&amp;hellip; 如果真变成这样就糟透了😭😭😭&lt;/p&gt;&#xA;&lt;p&gt;当然, 有时我们不想等, 那么就需要下面的方法了.&lt;/p&gt;&#xA;&lt;h3 id=&#34;方法二-taskkill&#34;&gt;方法二: taskkill&lt;/h3&gt;&#xA;&lt;p&gt;打开Flutter安装目录, 复制&lt;code&gt;dart.exe&lt;/code&gt;的路径(一般会在&lt;code&gt;flutter安装目录\bin\cache\dart-sdk\bin&lt;/code&gt;).&lt;/p&gt;&#xA;&lt;p&gt;打开Powershell或CMD.&lt;/p&gt;&#xA;&lt;p&gt;若盘符不一致, 需要先切换盘符, 比如当前在C盘, 切换至D盘:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;D:&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CD进入刚才复制的路径:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd flutter安装目录\bin\cache\dart-sdk\bin&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用taskkill关闭进程:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;taskkill /F /IM dart.exe&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果返回类似这样的信息即是成功:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;taskkill /F /IM dart.exe&#xA;成功: 已终止进程 &amp;#34;dart.exe&amp;#34;，其 PID 为 9804。&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;[epcl_box type=&amp;ldquo;success&amp;rdquo;]这是目前最便捷的强行关闭方式![/epcl_box]&lt;/p&gt;&#xA;&lt;h3 id=&#34;方法三-任务管理器关闭dart进程&#34;&gt;方法三: 任务管理器关闭dart进程&lt;/h3&gt;&#xA;&lt;p&gt;打开任务管理器, 点击详细信息:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter获取包名、APP名称、版本号、build构建版本号</title>
      <link>http://localhost:1313/posts/post/2020/flutter%E8%8E%B7%E5%8F%96%E5%8C%85%E5%90%8Dapp%E5%90%8D%E7%A7%B0%E7%89%88%E6%9C%AC%E5%8F%B7build%E6%9E%84%E5%BB%BA%E7%89%88%E6%9C%AC%E5%8F%B7/</link>
      <pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter%E8%8E%B7%E5%8F%96%E5%8C%85%E5%90%8Dapp%E5%90%8D%E7%A7%B0%E7%89%88%E6%9C%AC%E5%8F%B7build%E6%9E%84%E5%BB%BA%E7%89%88%E6%9C%AC%E5%8F%B7/</guid>
      <description>&lt;p&gt;在进行APP版本迭代的过程中, 有时我们需要通过获取当前APP的版本号, 与后端服务器获取的当前最新版本进行比对, 如果出现了最新版本, 我们提醒用户进行应用更新. 本篇文章就来记录一下Flutter获取包名、应用APP名称、版本号、build构建版本号.&lt;/p&gt;&#xA;&lt;h2 id=&#34;最终效果&#34;&gt;最终效果&lt;/h2&gt;&#xA;&lt;p&gt;有图有真相, 先来看下最终效果吧!&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Flutter%E8%8E%B7%E5%8F%96%E5%8C%85%E5%90%8D%E3%80%81%E5%BA%94%E7%94%A8APP%E5%90%8D%E7%A7%B0%E3%80%81%E7%89%88%E6%9C%AC%E5%8F%B7%E3%80%81build%E6%9E%84%E5%BB%BA%E7%89%88%E6%9C%AC%E5%8F%B7-04.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;应用场景&#34;&gt;应用场景&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;通过检查当前APP版本号来判断是否需要更新.&lt;/li&gt;&#xA;&lt;li&gt;APP出现错误日志需要传回服务器时, 获取APP基本信息(也就是看看bug出现在哪个版本!).&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;引入packageinfo&#34;&gt;引入PackageInfo&lt;/h3&gt;&#xA;&lt;p&gt;老样子, 上官方的存储库中寻找我们今天需要的&lt;code&gt;PackageInfo&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Flutter%E8%8E%B7%E5%8F%96%E5%8C%85%E5%90%8D%E3%80%81%E5%BA%94%E7%94%A8APP%E5%90%8D%E7%A7%B0%E3%80%81%E7%89%88%E6%9C%AC%E5%8F%B7%E3%80%81build%E6%9E%84%E5%BB%BA%E7%89%88%E6%9C%AC%E5%8F%B7-01.png&#34; alt=&#34;Flutter获取包名、应用APP名称、版本号、build构建版本号-01&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]一般我们选用第三方库会看三个指标: 评分、兼容性以及活跃度.[/epcl_box]&lt;/p&gt;&#xA;&lt;p&gt;这个库将会成为我们获取APP信息的主力.&lt;/p&gt;&#xA;&lt;p&gt;进入&lt;code&gt;./pubspec.yaml&lt;/code&gt;, 导入:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dependencies:&#xA;  package_info: ^0.4.0+18&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;images/Flutter%E8%8E%B7%E5%8F%96%E5%8C%85%E5%90%8D%E3%80%81%E5%BA%94%E7%94%A8APP%E5%90%8D%E7%A7%B0%E3%80%81%E7%89%88%E6%9C%AC%E5%8F%B7%E3%80%81build%E6%9E%84%E5%BB%BA%E7%89%88%E6%9C%AC%E5%8F%B7-02.png&#34; alt=&#34;Flutter获取包名、应用APP名称、版本号、build构建版本号-02&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;一定要注意缩进哦!&lt;/p&gt;&#xA;&lt;h3 id=&#34;初始化项目&#34;&gt;初始化项目&lt;/h3&gt;&#xA;&lt;p&gt;为了让大家更直观的看到, 这里提供&lt;code&gt;./lib/main.dart&lt;/code&gt;的代码, 你可以直接进行复制并运行:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import &amp;#39;package:flutter/material.dart&amp;#39;;&#xA;&#xA;void main() =&amp;gt; runApp(MyApp());&#xA;&#xA;class MyApp extends StatelessWidget {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return MaterialApp(&#xA;      title: &amp;#39;获取设备信息Demo&amp;#39;,&#xA;      theme: ThemeData(&#xA;        primarySwatch: Colors.blue,&#xA;      ),&#xA;      home: MyHomePage(title: &amp;#39;获取设备信息&amp;#39;),&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;class MyHomePage extends StatefulWidget {&#xA;  MyHomePage({Key key, this.title}) : super(key: key);&#xA;&#xA;  final String title;&#xA;&#xA;  @override&#xA;  _MyHomePageState createState() =&amp;gt; _MyHomePageState();&#xA;}&#xA;&#xA;class _MyHomePageState extends State {&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      appBar: AppBar(&#xA;        title: Text(widget.title),&#xA;      ),&#xA;      body: Center(&#xA;        child: Column(&#xA;          mainAxisAlignment: MainAxisAlignment.center,&#xA;          children: [&#xA;            Text(&#xA;              &amp;#39;App信息&amp;#39;,&#xA;              style: TextStyle(fontSize: 30),&#xA;            ),&#xA;          ],&#xA;        ),&#xA;      ),&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;💡 代码解析: 只是一个空的项目. 我们将基于这个空项目继续我们的实例.&lt;/p&gt;</description>
    </item>
    <item>
      <title>阿航的技术小站 - 感受开源之美, 品味幸福代码人生</title>
      <link>http://localhost:1313/posts/page/2020/%E9%98%BF%E8%88%AA%E7%9A%84%E6%8A%80%E6%9C%AF%E5%B0%8F%E7%AB%99-%E6%84%9F%E5%8F%97%E5%BC%80%E6%BA%90%E4%B9%8B%E7%BE%8E-%E5%93%81%E5%91%B3%E5%B9%B8%E7%A6%8F%E4%BB%A3%E7%A0%81%E4%BA%BA%E7%94%9F/</link>
      <pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2020/%E9%98%BF%E8%88%AA%E7%9A%84%E6%8A%80%E6%9C%AF%E5%B0%8F%E7%AB%99-%E6%84%9F%E5%8F%97%E5%BC%80%E6%BA%90%E4%B9%8B%E7%BE%8E-%E5%93%81%E5%91%B3%E5%B9%B8%E7%A6%8F%E4%BB%A3%E7%A0%81%E4%BA%BA%E7%94%9F/</guid>
      <description></description>
    </item>
    <item>
      <title>代码提交的乐趣 - 为你的Git提交日志添加emoji表情</title>
      <link>http://localhost:1313/posts/post/2020/%E4%BB%A3%E7%A0%81%E6%8F%90%E4%BA%A4%E7%9A%84%E4%B9%90%E8%B6%A3-%E4%B8%BA%E4%BD%A0%E7%9A%84git%E6%8F%90%E4%BA%A4%E6%97%A5%E5%BF%97%E6%B7%BB%E5%8A%A0emoji%E8%A1%A8%E6%83%85/</link>
      <pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E4%BB%A3%E7%A0%81%E6%8F%90%E4%BA%A4%E7%9A%84%E4%B9%90%E8%B6%A3-%E4%B8%BA%E4%BD%A0%E7%9A%84git%E6%8F%90%E4%BA%A4%E6%97%A5%E5%BF%97%E6%B7%BB%E5%8A%A0emoji%E8%A1%A8%E6%83%85/</guid>
      <description>&lt;p&gt;漫漫的代码生涯, 不知何时才是尽头😩😩. 苦中作乐, 才是良药. 我们不能改变作为程序员的命运, 但是我们可以为其添上几朵小花, 点缀一下. 本篇文章非技术干货, 而是跳出技术之外, 为我们的开发生活添加一点乐趣 &amp;ndash; 为你的Git提交日志添加emoji表情!&lt;/p&gt;&#xA;&lt;h2 id=&#34;举个栗子&#34;&gt;举个栗子&lt;/h2&gt;&#xA;&lt;p&gt;在Github上找寻所需的轮子时, 是否看到过这样的情形:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Git%E6%8F%90%E4%BA%A4%E8%A1%A8%E6%83%85-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;什么? 你没发现亮点? 那我给你圈出来!&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Git%E6%8F%90%E4%BA%A4%E8%A1%A8%E6%83%85-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;看到提交日志左边那些&amp;quot;bu ling bu ling&amp;quot;✨✨的小图标了吗?&lt;/p&gt;&#xA;&lt;p&gt;在代码仓库看到这个, 不知你的心情是否多少放松了一些?😏&lt;/p&gt;&#xA;&lt;p&gt;当然, 无规矩不成方圆. 如果不设定一些规范, 可想而知, 日志将会一团糟🤯🤯. (还不如没有呢!)&lt;/p&gt;&#xA;&lt;h2 id=&#34;如何使用&#34;&gt;如何使用&lt;/h2&gt;&#xA;&lt;p&gt;使用的方法很简单, 只需要找到emoji对应的代码, 放在提交日志中即可!&lt;/p&gt;&#xA;&lt;p&gt;比如🎉代表的是&amp;quot;首次提交&amp;quot;, 其代码为&lt;code&gt;:tada:&lt;/code&gt;. 我们假设进行git提交:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git commit -m &amp;#34;:tada: 首次提交哦!&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;之后去到远程仓库, 你会发现提交信息变得没那么单调啦!&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Git%E6%8F%90%E4%BA%A4%E8%A1%A8%E6%83%85-03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;常用提交图标及含义&#34;&gt;常用提交图标及含义&lt;/h2&gt;&#xA;&lt;p&gt;在这里我们放出部分常用的提交图标吧:&lt;/p&gt;&#xA;&lt;p&gt;[epcl_col width=&amp;ldquo;20&amp;rdquo;]&lt;/p&gt;&#xA;&lt;p&gt;🎉&lt;/p&gt;&#xA;&lt;p&gt;**:tada:&lt;br&gt;&#xA;**首次提交&lt;/p&gt;&#xA;&lt;p&gt;[/epcl_col]&lt;/p&gt;&#xA;&lt;p&gt;[epcl_col width=&amp;ldquo;20&amp;rdquo;]&lt;/p&gt;&#xA;&lt;p&gt;✨&lt;/p&gt;&#xA;&lt;p&gt;**:sparkles:&lt;br&gt;&#xA;**添加新功能&lt;/p&gt;&#xA;&lt;p&gt;[/epcl_col]&lt;/p&gt;&#xA;&lt;p&gt;[epcl_col width=&amp;ldquo;20&amp;rdquo;]&lt;/p&gt;&#xA;&lt;p&gt;🔥&lt;/p&gt;&#xA;&lt;p&gt;**:fire:&lt;br&gt;&#xA;**删除文件/删除代码&lt;/p&gt;&#xA;&lt;p&gt;[/epcl_col]&lt;/p&gt;&#xA;&lt;p&gt;[epcl_col width=&amp;ldquo;20&amp;rdquo;]&lt;/p&gt;&#xA;&lt;p&gt;🐛&lt;/p&gt;&#xA;&lt;p&gt;**:bug:&lt;br&gt;&#xA;**bug修复&lt;/p&gt;&#xA;&lt;p&gt;[/epcl_col]&lt;/p&gt;&#xA;&lt;p&gt;[epcl_col width=&amp;ldquo;20&amp;rdquo;]&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git push 推送异常 : &#34;Authentication failed for&#34;</title>
      <link>http://localhost:1313/posts/post/2020/git-push-%E6%8E%A8%E9%80%81%E5%BC%82%E5%B8%B8-authentication-failed-for/</link>
      <pubDate>Sat, 23 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/git-push-%E6%8E%A8%E9%80%81%E5%BC%82%E5%B8%B8-authentication-failed-for/</guid>
      <description>&lt;p&gt;今天依旧是贡献代码的一天. 但是在使用IDEA进行Git 推送时, 右下角提示推送失败(&lt;code&gt;Push failed&lt;/code&gt;). 就很纳闷, 平时好好的, 今天突然就不好使了? 一番折腾, 终于解决.&lt;/p&gt;&#xA;&lt;h2 id=&#34;问题分析&#34;&gt;问题分析&lt;/h2&gt;&#xA;&lt;p&gt;先来看一下完整报错:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Invocation failed Server returned invalid Response. java.lang.RuntimeException: &#xA;Invocation failed Server returned invalid Response. &#xA;  at org.jetbrains.git4idea.http.GitAskPassXmlRpcClient.askUsername(GitAskPassXmlRpcClient.java:50) &#xA;  at org.jetbrains.git4idea.http.GitAskPassApp.main(GitAskPassApp.java:64) Caused by: java.io.IOException: Server returned invalid Response. &#xA;  at org.apache.xmlrpc.LiteXmlRpcTransport.sendRequest(LiteXmlRpcTransport.java:242) &#xA;  at org.apache.xmlrpc.LiteXmlRpcTransport.sendXmlRpc(LiteXmlRpcTransport.java:90) &#xA;  at org.apache.xmlrpc.XmlRpcClientWorker.execute(XmlRpcClientWorker.java:72) &#xA;  at org.apache.xmlrpc.XmlRpcClient.execute(XmlRpcClient.java:194) &#xA;  at org.apache.xmlrpc.XmlRpcClient.execute(XmlRpcClient.java:185) &#xA;  at org.apache.xmlrpc.XmlRpcClient.execute(XmlRpcClient.java:178) &#xA;  at org.jetbrains.git4idea.http.GitAskPassXmlRpcClient.askUsername(GitAskPassXmlRpcClient.java:47) &#xA;... 1 more remote: No anonymous write access. &#xA;Authentication failed for &amp;#39;https://github.com/XXX&amp;#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以看到关键字:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;No anonymous write access.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;👆这句话的字面意思是&amp;quot;没有匿名写入权限&amp;quot;. 但是他也没提示我登录啊? 不清不楚&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Authentication failed for &amp;#39;https://github.com/XXX&amp;#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;👆这句就很简单了, 鉴权失败. 也许是之前的匿名的原因.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PR? LGTM? WIP? 盘点Github的那些缩写!</title>
      <link>http://localhost:1313/posts/post/2020/pr-lgtm-wip-%E7%9B%98%E7%82%B9github%E7%9A%84%E9%82%A3%E4%BA%9B%E7%BC%A9%E5%86%99/</link>
      <pubDate>Sat, 23 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/pr-lgtm-wip-%E7%9B%98%E7%82%B9github%E7%9A%84%E9%82%A3%E4%BA%9B%E7%BC%A9%E5%86%99/</guid>
      <description>&lt;p&gt;今天阿航在请求合并代码时, 仓库原作者突然回复了一个&amp;quot;LGTM&amp;quot;. 一下子给我搞蒙了!😲😲 拼音缩写? 不是! 查词典? 查不到! 后面Google了一下, 看到了最终解释, 茅塞顿开! PR? LGTM? SGTM? 这篇文章来给大家罗列一下Github中老司机的常用缩写!&lt;/p&gt;&#xA;&lt;h2 id=&#34;例子&#34;&gt;例子&lt;/h2&gt;&#xA;&lt;p&gt;直接举阿航碰到的:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/PR-LGTM-WIP-%E7%9B%98%E7%82%B9Github%E7%9A%84%E9%82%A3%E4%BA%9B%E7%BC%A9%E5%86%99-01.png&#34; alt=&#34;PR LGTM WIP 盘点Github的那些缩写-01&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;如果你不知道这些缩写, 估计你也会一脸懵逼!&lt;/p&gt;&#xA;&lt;h2 id=&#34;缩写含义&#34;&gt;缩写&amp;amp;含义&lt;/h2&gt;&#xA;&lt;p&gt;就像&amp;quot;LBWNB&amp;quot;代表&amp;quot;卢本伟牛逼&amp;quot;, &amp;ldquo;现充&amp;quot;代表&amp;quot;现实生活很充实的人生赢家&amp;quot;一样.&lt;/p&gt;&#xA;&lt;p&gt;如果你不去刻意了解, 是无法从缩写中猜出这些词的真正含义一样. Github的老司机会通过缩写来节省时间或者提高逼格.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;缩写&lt;/th&gt;&#xA;          &lt;th&gt;完整写法&lt;/th&gt;&#xA;          &lt;th&gt;含义&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;PR&lt;/td&gt;&#xA;          &lt;td&gt;Pull Request&lt;/td&gt;&#xA;          &lt;td&gt;拉取请求, 贡献其他项目.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;LGTM&lt;/td&gt;&#xA;          &lt;td&gt;Looks Good To Me&lt;/td&gt;&#xA;          &lt;td&gt;已阅, 代码经过review(审查), 可以合并.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;SGTM&lt;/td&gt;&#xA;          &lt;td&gt;Sounds Good To Me&lt;/td&gt;&#xA;          &lt;td&gt;和LGTM类似, 也是经过review的意思.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;WIP&lt;/td&gt;&#xA;          &lt;td&gt;Work In Progress&lt;/td&gt;&#xA;          &lt;td&gt;已经提上日程了, 属于&amp;quot;部分&amp;quot;PR, 告诉项目维护者功能还未完成, 方便其提前进行部分review&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;PTAL&lt;/td&gt;&#xA;          &lt;td&gt;Please Take A Look&lt;/td&gt;&#xA;          &lt;td&gt;你来看一下? 提示别人再审查下代码.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;TBR&lt;/td&gt;&#xA;          &lt;td&gt;To Be Reviewed&lt;/td&gt;&#xA;          &lt;td&gt;待评审, 用于提示项目维护者进行review.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;TL;DR&lt;/td&gt;&#xA;          &lt;td&gt;Too Long; Didn&amp;rsquo;t Read&lt;/td&gt;&#xA;          &lt;td&gt;文字过多, 懒得看. 代码过长, 不便于进行Code review.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;TBD&lt;/td&gt;&#xA;          &lt;td&gt;To Be Done(or Defined/Discussed/Decided/Determined)&lt;/td&gt;&#xA;          &lt;td&gt;通常是&amp;quot;没搞定&amp;quot;的意思, 也需要根据语境进行判断.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;感谢&#34;&gt;感谢&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;这篇&lt;a href=&#34;https://github.com/flame-engine/flame/pull/350&#34; target=&#34;_blank&#34;&gt;PR&lt;/a&gt;&#xA;的&lt;a href=&#34;https://github.com/impulse&#34; target=&#34;_blank&#34;&gt;impulse&lt;/a&gt;&#xA;发布的评论, 让我了解到这个东西&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://farer.org/2017/03/01/code-review-acronyms/&#34; target=&#34;_blank&#34;&gt;《LGTM? 那些迷之缩写》&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Flutter 修改包名 package name</title>
      <link>http://localhost:1313/posts/post/2020/flutter-%E4%BF%AE%E6%94%B9%E5%8C%85%E5%90%8D-package-name/</link>
      <pubDate>Fri, 22 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-%E4%BF%AE%E6%94%B9%E5%8C%85%E5%90%8D-package-name/</guid>
      <description>&lt;p&gt;通常使用&lt;code&gt;flutter create&lt;/code&gt;命令创建新的flutter项目时, 包名是默认的&lt;code&gt;com.example&lt;/code&gt;(或类似的包名). 很明显在开发一个属于自己的项目时, 这样是不对的. 需要将包名改为自己的或者所在公司的域名反写. 本篇文章就来写下如何修改Flutter的package name (包名).&lt;/p&gt;&#xA;&lt;h2 id=&#34;方法一-创建项目时指定包名&#34;&gt;方法一: 创建项目时指定包名&lt;/h2&gt;&#xA;&lt;p&gt;如果你还未创建项目, 或者已有项目代码量较少, 可以通过此命令来创建项目:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;flutter create --org 你的域名反写 项目名称&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;比如:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;flutter create --org com.bugcatt langaw&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当然, 如果你的项目已经成型, 不便于迁移, 那么请考虑下面的方法.&lt;/p&gt;&#xA;&lt;h2 id=&#34;方法二-代码内修改&#34;&gt;方法二: 代码内修改&lt;/h2&gt;&#xA;&lt;h3 id=&#34;修改buildgradleandroid&#34;&gt;修改build.gradle(android)&lt;/h3&gt;&#xA;&lt;p&gt;打开&lt;code&gt;./android/app/build.gradle&lt;/code&gt;, 找到类似这样的:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    defaultConfig {&#xA;        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).&#xA;        applicationId &amp;#34;com.bugcatt.flutter_app_desktop&amp;#34;&#xA;        minSdkVersion 16&#xA;        targetSdkVersion 28&#xA;        versionCode flutterVersionCode.toInteger()&#xA;        versionName flutterVersionName&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;修改其中的&lt;code&gt;applicationId&lt;/code&gt;为你自己的.&lt;/p&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]有些同学可能已经注意到了, defaultConfig中已经给出了一个&amp;quot;TODO&amp;quot;让我们处理![/epcl_box]&lt;/p&gt;&#xA;&lt;h3 id=&#34;修改infoplistios&#34;&gt;修改Info.plist(IOS)&lt;/h3&gt;&#xA;&lt;p&gt;打开&lt;code&gt;./ios/Runner.xcodeproj&lt;/code&gt;, 搜索关键字&lt;code&gt;PRODUCT_BUNDLE_IDENTIFIER&lt;/code&gt;. 修改所有的:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;PRODUCT_BUNDLE_IDENTIFIER = 包名;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;[epcl_box type=&amp;ldquo;notice&amp;rdquo;]分号什么的别忘记哦![/epcl_box]&lt;/p&gt;&#xA;&lt;h3 id=&#34;修改appinfoxcconfigmacos&#34;&gt;修改AppInfo.xcconfig(MacOS)&lt;/h3&gt;&#xA;&lt;p&gt;如果你同样开启了MacOS的桌面应用开发, 则需要本步骤!&lt;/p&gt;&#xA;&lt;p&gt;打开&lt;code&gt;./macos/Runner/Configs/AppInfo.xcconfig&lt;/code&gt;, 可以看到有三个属性:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git提交表情大全</title>
      <link>http://localhost:1313/posts/page/2020/git%E6%8F%90%E4%BA%A4%E8%A1%A8%E6%83%85/</link>
      <pubDate>Fri, 22 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2020/git%E6%8F%90%E4%BA%A4%E8%A1%A8%E6%83%85/</guid>
      <description>&lt;p&gt;有了代码情趣, 就会顺便提高工作效率😏😏😏. 这里记录阿航从&lt;a href=&#34;https://gitmoji.carloscuesta.me/&#34; target=&#34;_blank&#34;&gt;gitmoji&lt;/a&gt;&#xA;上整理并翻译的所有git提交可用表情, 大家可以直接按&lt;code&gt;CTRL+F&lt;/code&gt;在页面上进行搜索, 复制代码并提交!&lt;/p&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]如果你对Git提交表情还不太熟悉, 可以先看看阿航写的这篇教程: &lt;a href=&#34;https://www.bugcatt.com/archives/1491&#34; target=&#34;_blank&#34;&gt;《为你的Git提交日志添加emoji表情》&lt;/a&gt;&#xA;[/epcl_box]&lt;/p&gt;&#xA;&lt;p&gt;[epcl_col width=&amp;ldquo;100&amp;rdquo;]&lt;/p&gt;&#xA;&lt;h2 id=&#34;常用&#34;&gt;常用&lt;/h2&gt;&#xA;&lt;p&gt;[/epcl_col]&lt;/p&gt;&#xA;&lt;p&gt;[epcl_col width=&amp;ldquo;20&amp;rdquo;]&lt;/p&gt;&#xA;&lt;h1 id=&#34;heading&#34;&gt;🎉&lt;/h1&gt;&#xA;&lt;p&gt;**:tada:&lt;br&gt;&#xA;**首次提交&lt;/p&gt;&#xA;&lt;p&gt;[/epcl_col]&lt;/p&gt;&#xA;&lt;p&gt;[epcl_col width=&amp;ldquo;20&amp;rdquo;]&lt;/p&gt;&#xA;&lt;h1 id=&#34;heading-1&#34;&gt;✨&lt;/h1&gt;&#xA;&lt;p&gt;**:sparkles:&lt;br&gt;&#xA;**添加新功能&lt;/p&gt;&#xA;&lt;p&gt;[/epcl_col]&lt;/p&gt;&#xA;&lt;p&gt;[epcl_col width=&amp;ldquo;20&amp;rdquo;]&lt;/p&gt;&#xA;&lt;h1 id=&#34;heading-2&#34;&gt;🔥&lt;/h1&gt;&#xA;&lt;p&gt;**:fire:&lt;br&gt;&#xA;**删除文件/删除代码&lt;/p&gt;&#xA;&lt;p&gt;[/epcl_col]&lt;/p&gt;&#xA;&lt;p&gt;[epcl_col width=&amp;ldquo;20&amp;rdquo;]&lt;/p&gt;&#xA;&lt;h1 id=&#34;heading-3&#34;&gt;🐛&lt;/h1&gt;&#xA;&lt;p&gt;**:bug:&lt;br&gt;&#xA;**bug修复&lt;/p&gt;&#xA;&lt;p&gt;[/epcl_col]&lt;/p&gt;&#xA;&lt;p&gt;[epcl_col width=&amp;ldquo;20&amp;rdquo;]&lt;/p&gt;&#xA;&lt;h1 id=&#34;heading-4&#34;&gt;🔧&lt;/h1&gt;&#xA;&lt;p&gt;**:wrench:&lt;br&gt;&#xA;**修改配置文件&lt;/p&gt;&#xA;&lt;p&gt;[/epcl_col]&lt;/p&gt;&#xA;&lt;p&gt;[epcl_col width=&amp;ldquo;100&amp;rdquo;]&lt;/p&gt;&#xA;&lt;h2 id=&#34;代码优化升级&#34;&gt;代码优化/升级&lt;/h2&gt;&#xA;&lt;p&gt;[/epcl_col]&lt;/p&gt;&#xA;&lt;p&gt;[epcl_col width=&amp;ldquo;20&amp;rdquo;]&lt;/p&gt;&#xA;&lt;h1 id=&#34;heading-5&#34;&gt;🎨&lt;/h1&gt;&#xA;&lt;p&gt;**:art:&lt;br&gt;&#xA;**改进代码结构/格式&lt;/p&gt;&#xA;&lt;p&gt;[/epcl_col]&lt;/p&gt;&#xA;&lt;p&gt;[epcl_col width=&amp;ldquo;20&amp;rdquo;]&lt;/p&gt;&#xA;&lt;h1 id=&#34;heading-6&#34;&gt;⚡️&lt;/h1&gt;&#xA;&lt;p&gt;**:zap:&lt;br&gt;&#xA;**提高性能&lt;/p&gt;&#xA;&lt;p&gt;[/epcl_col]&lt;/p&gt;&#xA;&lt;p&gt;[epcl_col width=&amp;ldquo;20&amp;rdquo;]&lt;/p&gt;&#xA;&lt;h1 id=&#34;heading-7&#34;&gt;🥅&lt;/h1&gt;&#xA;&lt;p&gt;**:goal_net:&lt;br&gt;&#xA;**捕获异常/捕获错误&lt;/p&gt;&#xA;&lt;p&gt;[/epcl_col]&lt;/p&gt;&#xA;&lt;p&gt;[epcl_col width=&amp;ldquo;20&amp;rdquo;]&lt;/p&gt;&#xA;&lt;h1 id=&#34;heading-8&#34;&gt;🗑&lt;/h1&gt;&#xA;&lt;p&gt;**:wastebasket:&lt;br&gt;&#xA;**需要清理的废弃代码&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter Toast、弹出提示、轻提示</title>
      <link>http://localhost:1313/posts/post/2020/flutter-toast%E5%BC%B9%E5%87%BA%E6%8F%90%E7%A4%BA%E8%BD%BB%E6%8F%90%E7%A4%BA/</link>
      <pubDate>Thu, 21 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-toast%E5%BC%B9%E5%87%BA%E6%8F%90%E7%A4%BA%E8%BD%BB%E6%8F%90%E7%A4%BA/</guid>
      <description>&lt;p&gt;主流的三种APP反馈形式: &lt;code&gt;toast&lt;/code&gt;、&lt;code&gt;snackbar&lt;/code&gt;以及&lt;code&gt;dialog&lt;/code&gt;. &lt;code&gt;toast&lt;/code&gt;又称为弹出提示、轻提示.通常用于提示用户一些不那么重要的信息, 会弹出并显示文字一段时间. 时间一到就会消失. 相较于&lt;code&gt;snackbar&lt;/code&gt;和&lt;code&gt;dialog&lt;/code&gt;, 对屏幕的入侵较少. 身为开发人员怎能不掌握toast的基本使用? 这篇文章阿航就带着大家一起探讨一下Flutter中的&lt;code&gt;toast&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;效果&#34;&gt;效果&lt;/h2&gt;&#xA;&lt;p&gt;有图有真相, 我们来看下我们本次要实现的最终效果:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Flutter-Toast%E3%80%81%E5%BC%B9%E5%87%BA%E6%8F%90%E7%A4%BA%E3%80%81%E8%BD%BB%E6%8F%90%E7%A4%BA-06.gif&#34; alt=&#34;Flutter-Toast、弹出提示、轻提示-06&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;源码地址&#34;&gt;源码地址&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;👉在&lt;a href=&#34;https://github.com/HarrisonQi/flutter-actual-combat-demo/tree/master/&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;&#xA;或&lt;a href=&#34;https://gitee.com/HarrisonQI/flutter-actual-combat-demo/tree/master/flutter_toast_tutorial&#34; target=&#34;_blank&#34;&gt;码云&lt;/a&gt;&#xA;上查看本篇文章全部代码.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;搜索fluttertoast&#34;&gt;搜索fluttertoast&lt;/h2&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]有同学会问, 为什么要选择插件, 不选择原生呢… 因为Flutter没有我们所需的这种效果! 只有自带的snackBar![/epcl_box]&lt;/p&gt;&#xA;&lt;p&gt;老样子, 上&lt;a href=&#34;https://pub.flutter-io.cn/packages&#34; target=&#34;_blank&#34;&gt;pub.dev&lt;/a&gt;&#xA;寻找我们所需的插件, 在搜索框输入&lt;code&gt;fluttertoast&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;p&gt;看到第一条:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Flutter-Toast%E3%80%81%E5%BC%B9%E5%87%BA%E6%8F%90%E7%A4%BA%E3%80%81%E8%BD%BB%E6%8F%90%E7%A4%BA-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;99&lt;/code&gt;分, 相当高的评分.&lt;/p&gt;&#xA;&lt;p&gt;点进去, 查看最新版本发布日期和兼容性:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Flutter-Toast%E3%80%81%E5%BC%B9%E5%87%BA%E6%8F%90%E7%A4%BA%E3%80%81%E8%BD%BB%E6%8F%90%E7%A4%BA-02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]一般我们在选择一款Flutter插件时, 会先看它的评分(Flutter官方评分还是比较严格的). 之后再去看看它的最新日期(如果很久未更新, 可能项目已经停止维护了). 最后再来看看它的兼容性, 是否合乎我们的规则.[/epcl_box]&lt;/p&gt;&#xA;&lt;p&gt;同时支持&lt;code&gt;Android&lt;/code&gt;、&lt;code&gt;IOS&lt;/code&gt;以及&lt;code&gt;Web&lt;/code&gt;. 兼容性很好.&lt;/p&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;创建项目&#34;&gt;创建项目&lt;/h3&gt;&#xA;&lt;p&gt;创建一个Flutter项目, 先来清理项目.&lt;/p&gt;&#xA;&lt;p&gt;删除&lt;code&gt;./test&lt;/code&gt;目录, 因为我们的这个项目只是一个简单的demo. 不需要测试驱动开发.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Flutter-Toast%E3%80%81%E5%BC%B9%E5%87%BA%E6%8F%90%E7%A4%BA%E3%80%81%E8%BD%BB%E6%8F%90%E7%A4%BA-03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;通过flutter创建的项目的&lt;code&gt;./lib/main.dart&lt;/code&gt;会有很多自带的注释, 我们替换整个文件为:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import &amp;#39;package:flutter/material.dart&amp;#39;;&#xA;&#xA;void main() =&amp;gt; runApp(MyApp());&#xA;&#xA;class MyApp extends StatelessWidget {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return MaterialApp(&#xA;      title: &amp;#39;阿航的技术小站 Flutter toast&amp;#39;,&#xA;      theme: ThemeData(&#xA;        primarySwatch: Colors.blue,&#xA;      ),&#xA;      home: MyHomePage(title: &amp;#39;Flutter toast实战&amp;#39;),&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;class MyHomePage extends StatefulWidget {&#xA;  MyHomePage({Key key, this.title}) : super(key: key);&#xA;&#xA;  final String title;&#xA;&#xA;  @override&#xA;  _MyHomePageState createState() =&amp;gt; _MyHomePageState();&#xA;}&#xA;&#xA;class _MyHomePageState extends State {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      appBar: AppBar(&#xA;        title: Text(widget.title),&#xA;      ),&#xA;      body: Center(&#xA;        child: Column(&#xA;          mainAxisAlignment: MainAxisAlignment.center,&#xA;          children: [],&#xA;        ),&#xA;      ),&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;💡 代码解析: 删除了多余的注释, 和部分初始化的按钮. 添加一些名称.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flame 屏幕手柄/摇杆</title>
      <link>http://localhost:1313/posts/post/2020/flame-%E5%B1%8F%E5%B9%95%E6%89%8B%E6%9F%84-%E6%91%87%E6%9D%86/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flame-%E5%B1%8F%E5%B9%95%E6%89%8B%E6%9F%84-%E6%91%87%E6%9D%86/</guid>
      <description>&lt;p&gt;可以看到, 目前最主流的手机游戏都使用屏上手柄/摇杆进行控制, 比如:&lt;/p&gt;&#xA;&lt;p&gt;[caption id=&amp;ldquo;attachment_1286&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;700&amp;rdquo;]&lt;img src=&#34;images/Flutter-Flame-%E6%91%87%E6%9D%86-02-700x390.jpg&#34; alt=&#34;Flutter Flame 摇杆-02&#34;&gt; League of Legends Mobile (英雄联盟手游)[/caption]&lt;/p&gt;&#xA;&lt;p&gt;[caption id=&amp;ldquo;attachment_1284&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;700&amp;rdquo;]&lt;img src=&#34;images/Flutter-Flame-%E6%91%87%E6%9D%86-01-700x341.jpg&#34; alt=&#34;Flutter Flame 摇杆-01&#34;&gt; PUBG Mobile (和平精英)[/caption]&lt;/p&gt;&#xA;&lt;p&gt;[caption id=&amp;ldquo;attachment_1288&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;700&amp;rdquo;]&lt;img src=&#34;images/Flutter-Flame-%E6%91%87%E6%9D%86-03-700x376.jpg&#34; alt=&#34;Flutter Flame 摇杆-03&#34;&gt; Minecraft PE(我的世界手机版)[/caption]&lt;/p&gt;&#xA;&lt;p&gt;以上游戏都在当前手游榜(2020.04)排名前五.&lt;/p&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]看得出来, 目前的核心玩法、操作交互都离不开手柄/摇杆![/epcl_box]&lt;/p&gt;&#xA;&lt;p&gt;所以, 本篇文章就来教大家在使用Flame框架时, 在屏幕上展示摇杆, 并控制某些component!&lt;/p&gt;&#xA;&lt;p&gt;我们要做的项目名称为&lt;strong&gt;Lame Tank 360&lt;/strong&gt;(Lame坦克360).&lt;/p&gt;&#xA;&lt;p&gt;本项目将完整支持360°的旋转. 并将坦克的&amp;quot;炮塔&amp;quot;与&amp;quot;坦克身体&amp;quot;分开. 因此, 我们必须建立两个摇杆.&lt;/p&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;p&gt;若想顺利学习本篇教程, 你需要具备:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;掌握Flutter的基础用法.&lt;/li&gt;&#xA;&lt;li&gt;已完整学习Flame系列教程.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;notice&amp;rdquo;]如果你没有满足上述条件, 你将无法顺利完成这篇教程. 建议先阅读&lt;a href=&#34;https://www.bugcatt.com/archives/279&#34; target=&#34;_blank&#34;&gt;《Flutter游戏开发-Flame教程》&lt;/a&gt;&#xA;![/epcl_box]&lt;/p&gt;&#xA;&lt;h2 id=&#34;开始&#34;&gt;开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;创建flutter项目&#34;&gt;创建Flutter项目&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flutter create lame_tank_360&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]阿航的教程, 只要涉及到创建项目、命名的相关操作, 身为读者的你可以用阿航教程提供的, 你也可以自己起名! 别忘了替换代码中牵扯的名称为你自己的![/epcl_box]&lt;/p&gt;&#xA;&lt;h3 id=&#34;初始化项目设置&#34;&gt;初始化项目设置&lt;/h3&gt;&#xA;&lt;p&gt;现在项目是可以运行的, 但是只是Flutter默认生成的&lt;/p&gt;</description>
    </item>
    <item>
      <title>flame讨论, 加群</title>
      <link>http://localhost:1313/posts/wp_block/2020/%E6%9C%AA%E5%91%BD%E5%90%8D%E5%8F%AF%E9%87%8D%E7%94%A8%E5%8C%BA%E5%9D%97-2/</link>
      <pubDate>Tue, 19 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/wp_block/2020/%E6%9C%AA%E5%91%BD%E5%90%8D%E5%8F%AF%E9%87%8D%E7%94%A8%E5%8C%BA%E5%9D%97-2/</guid>
      <description>&lt;p&gt;[epcl_box type=&amp;ldquo;information&amp;rdquo;]如果你对这里有任何疑问, 欢迎在下方评论区讨论! 或者加入&lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=5ETLFm3&#34; target=&#34;_blank&#34;&gt;我的Flame交流群(QQ)&lt;/a&gt;&#xA;.[/epcl_box]&lt;/p&gt;</description>
    </item>
    <item>
      <title>项目速度显著提高! Flutter官方宣布增加Adobe XD的支持!</title>
      <link>http://localhost:1313/posts/post/2020/%E9%A1%B9%E7%9B%AE%E9%80%9F%E5%BA%A6%E6%98%BE%E8%91%97%E6%8F%90%E9%AB%98-flutter%E5%AE%98%E6%96%B9%E5%AE%A3%E5%B8%83%E5%A2%9E%E5%8A%A0adobe-xd%E7%9A%84%E6%94%AF%E6%8C%81/</link>
      <pubDate>Tue, 19 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E9%A1%B9%E7%9B%AE%E9%80%9F%E5%BA%A6%E6%98%BE%E8%91%97%E6%8F%90%E9%AB%98-flutter%E5%AE%98%E6%96%B9%E5%AE%A3%E5%B8%83%E5%A2%9E%E5%8A%A0adobe-xd%E7%9A%84%E6%94%AF%E6%8C%81/</guid>
      <description>&lt;p&gt;&lt;code&gt;Flutter&lt;/code&gt;作为近两年年来的新型APP开发语言, 其受欢迎程度甚至和&lt;code&gt;React Native&lt;/code&gt;不相上下. 最近, Flutter发表了一篇振奋人心的文章, 那就是新增了对&lt;code&gt;Adobe XD&lt;/code&gt;的支持.&lt;/p&gt;&#xA;&lt;h2 id=&#34;sketch和adobe-xd&#34;&gt;Sketch和Adobe XD&lt;/h2&gt;&#xA;&lt;p&gt;如果你涉足过设计领域, 那么一定知道两个设计工具, 分别是&lt;code&gt;Sketch&lt;/code&gt;以及&lt;code&gt;Adobe XD&lt;/code&gt;. 大多数互联网公司的设计稿输出, 都是靠它们来进行. 当然, &lt;code&gt;Sketch&lt;/code&gt;有着一个比较致命的限制, 那就是目前并不支持Windows系统.&lt;/p&gt;&#xA;&lt;p&gt;作为设计师, 你应该碰到过将设计稿交给开发人员后, 做出的效果差强人意. 即使开发人员保证了所有的位置、距离、长度均准确无误, 但是你却怎么看怎么别扭😥😥.&lt;/p&gt;&#xA;&lt;h2 id=&#34;令人头大的positionpx&#34;&gt;令人头大的position、px&lt;/h2&gt;&#xA;&lt;p&gt;作为前端开发人员, 你一定为这个问题头疼了无数次——布局! 没错, 你明明完全按照设计师给出的设计稿上标注的尺寸去做了, 但是效果就是不咋地! 要做出类似的效果, 你还要慢慢的调整! 累!&lt;/p&gt;&#xA;&lt;h2 id=&#34;是时候解决双方的苦恼了&#34;&gt;是时候解决双方的苦恼了&lt;/h2&gt;&#xA;&lt;p&gt;终于, 在2020年5月13日, Flutter官方宣布了&lt;code&gt;Adobe XD&lt;/code&gt;对其的支持, 那么, 到底有何变化呢?&lt;/p&gt;&#xA;&lt;h3 id=&#34;从adobe-xd导出flutter代码&#34;&gt;从Adobe XD导出Flutter代码&lt;/h3&gt;&#xA;&lt;p&gt;使用XD可以在几分钟内导出Flutter代码. 你可以导出单个图形, 也可以导出整张画板!&lt;/p&gt;&#xA;&lt;p&gt;你不需要将设计稿转化为一个又一个的区块了! 直接微调就可以了!&lt;/p&gt;&#xA;&lt;h3 id=&#34;减少浪费时间的布局调整&#34;&gt;减少浪费时间的布局调整&lt;/h3&gt;&#xA;&lt;p&gt;最让人头疼的就是数字了, 上面的生成代码, 同样会生成布局所需的各种数值!&lt;/p&gt;&#xA;&lt;h2 id=&#34;原文译文&#34;&gt;原文译文&lt;/h2&gt;&#xA;&lt;p&gt;上面只列出了重点功能, 阿航给大家翻译了原文:&lt;/p&gt;&#xA;&lt;p&gt;Flutter的目标是为创意表达提供丰富的画布。借助iOS和Android上的硬件性能，对屏幕上渲染的每个像素的完全控制以及通过有状态的热重载进行快速迭代的能力，我们希望释放设计师和开发人员的潜力，建立不受人为技术边界限制的舒适体验.&lt;/p&gt;&#xA;&lt;p&gt;去年在&lt;a href=&#34;https://www.youtube.com/watch?v=HjZxyTJzvYg&amp;amp;feature=emb_logo&#34; target=&#34;_blank&#34;&gt;Flutter Interact活动上&lt;/a&gt;&#xA;，我们将焦点放在使用Flutter进行探索和实验的创作者身上。我们听到了像&lt;a href=&#34;https://www.youtube.com/watch?v=DEppSs_ko48&#34; target=&#34;_blank&#34;&gt;Robert Felker&lt;/a&gt;&#xA;这样的数字艺术家的声音，他们使用Flutter通过生成算法构建空灵形式。我们介绍&lt;a href=&#34;https://flutter.gskinner.com/&#34; target=&#34;_blank&#34;&gt;了gskinner之类的创意机构的工作&lt;/a&gt;&#xA;，他们创建了一系列创新的短片来展示Flutter的潜力。我们还看到了Adobe的演示，该演示&lt;a href=&#34;https://www.youtube.com/watch?v=ukLBCRBlIkk&amp;amp;feature=youtu.be&amp;amp;t=3652&#34; target=&#34;_blank&#34;&gt;是Adobe XD插件&lt;/a&gt;&#xA;的&lt;a href=&#34;https://www.youtube.com/watch?v=ukLBCRBlIkk&amp;amp;feature=youtu.be&amp;amp;t=3652&#34; target=&#34;_blank&#34;&gt;早期原型，该插件&lt;/a&gt;&#xA;直接从其工具中导出Flutter代码。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E9%A1%B9%E7%9B%AE%E9%80%9F%E5%BA%A6%E6%98%BE%E8%91%97%E6%8F%90%E9%AB%98-Flutter%E5%AE%98%E6%96%B9%E5%AE%A3%E5%B8%83%E5%A2%9E%E5%8A%A0Adobe-XD%E7%9A%84%E6%94%AF%E6%8C%81-01.png&#34; alt=&#34;项目速度显著提高! Flutter官方宣布增加Adobe XD的支持!-01&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;(Flutter是用于创意表达的丰富画布：这是一种不受传统技术界限限制的美丽原生体验的工具包。（由Flutter制作的生成艺术品，由Robert Felker提供。))&lt;/p&gt;&#xA;&lt;p&gt;今天，&lt;strong&gt;我们很高兴与Adobe一起宣布他们的XD to Flutter插件&lt;/strong&gt;&lt;a href=&#34;https://adobe.com/go/xd_plugins_discover_plugin?pluginId=6eaf77ea&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;现在可以作为&lt;/strong&gt;&lt;/a&gt;&#xA;更广泛的公共测试的&lt;a href=&#34;https://adobe.com/go/xd_plugins_discover_plugin?pluginId=6eaf77ea&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;初步试用&lt;/strong&gt;&lt;/a&gt;&#xA;。&lt;a href=&#34;https://www.adobe.com/products/xd.html&#34; target=&#34;_blank&#34;&gt;Adobe XD&lt;/a&gt;&#xA;是一个UI / UX设计和协作工具，可帮助团队为网站，应用程序，语音界面，游戏等创建和共享设计。XD 是Adobe同类领先的&lt;a href=&#34;https://www.adobe.com/creativecloud.html&#34; target=&#34;_blank&#34;&gt;Creative Cloud的一部分&lt;/a&gt;&#xA;，它使设计师可以将矢量艺术，文本，图像，微交互和动画转换为行为类似的工作软件产品的交互式原型。将设计导出到Flutter的能力进一步减少了创意与产品开发之间的等待时间，因为XD原型现在可以在数分钟内成为Flutter代码。Adobe XD支持Windows或macOS上的设计，并包括&lt;a href=&#34;https://www.adobe.com/products/xd/compare-plans.html&#34; target=&#34;_blank&#34;&gt;免费的入门计划&lt;/a&gt;&#xA;，可助您启动并运行。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git同时推送多个远程仓库</title>
      <link>http://localhost:1313/posts/post/2020/git%E5%90%8C%E6%97%B6%E6%8E%A8%E9%80%81%E5%A4%9A%E4%B8%AA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/</link>
      <pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/git%E5%90%8C%E6%97%B6%E6%8E%A8%E9%80%81%E5%A4%9A%E4%B8%AA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/</guid>
      <description>&lt;p&gt;有时我们在进行开源的过程中, 少不了需要把代码推送到&lt;code&gt;Github&lt;/code&gt;/&lt;code&gt;码云&lt;/code&gt;上. 最传统的方式就是分别进行提交、推送. 但是重复劳动并不符合程序员思维😤! 是否有一种方法可以同时使用Git推送至不同的远程仓库呢? 答案是肯定的. 这篇文章就来记录一下如何&amp;quot;使用Git推送至多个远程仓库&amp;quot;, 提高开发人员的工作效率.&lt;/p&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;p&gt;若要顺利阅读本文, 你需要具备如下条件:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;掌握&lt;code&gt;Git&lt;/code&gt;的基本操作&lt;/li&gt;&#xA;&lt;li&gt;电脑已安装&lt;code&gt;Git&lt;/code&gt;的操作环境&lt;/li&gt;&#xA;&lt;li&gt;拥有&lt;code&gt;Github&lt;/code&gt;账号&lt;/li&gt;&#xA;&lt;li&gt;拥有&lt;code&gt;码云&lt;/code&gt;账号&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;开始&#34;&gt;开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;创建远程仓库&#34;&gt;创建远程仓库&lt;/h3&gt;&#xA;&lt;h4 id=&#34;github&#34;&gt;Github&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;进入&lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34;&gt;Github官网&lt;/a&gt;&#xA;, 点击&lt;a href=&#34;https://github.com/new&#34; target=&#34;_blank&#34;&gt;创建仓库&lt;/a&gt;&#xA;:&lt;img src=&#34;images/Git%E5%90%8C%E6%97%B6%E6%8E%A8%E9%80%81%E5%A4%9A%E4%B8%AA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93-01.png&#34; alt=&#34; Git同时推送多个远程仓库-01&#34;&gt;&lt;/li&gt;&#xA;&lt;li&gt;输入仓库基本信息, 点击&lt;code&gt;Create repository&lt;/code&gt;:&lt;img src=&#34;images/Git%E5%90%8C%E6%97%B6%E6%8E%A8%E9%80%81%E5%A4%9A%E4%B8%AA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93-02.png&#34; alt=&#34;Git同时推送多个远程仓库-02&#34;&gt;&lt;/li&gt;&#xA;&lt;li&gt;稍等片刻, 仓库创建完成:&lt;img src=&#34;images/Git%E5%90%8C%E6%97%B6%E6%8E%A8%E9%80%81%E5%A4%9A%E4%B8%AA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93-03.png&#34; alt=&#34;Git同时推送多个远程仓库-03&#34;&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;至此, Github的准备工作完成.&lt;/p&gt;&#xA;&lt;h4 id=&#34;码云&#34;&gt;码云&lt;/h4&gt;&#xA;&lt;p&gt;码云就简单多了, 因为码云可以直接导入来自Github的项目!&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;进入码云, 鼠标移至右上角的加号, 点击&lt;strong&gt;新建仓库&lt;/strong&gt;按钮: &lt;img src=&#34;images/Git%E5%90%8C%E6%97%B6%E6%8E%A8%E9%80%81%E5%A4%9A%E4%B8%AA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93-04.png&#34; alt=&#34;Git同时推送多个远程仓库-04&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;进入到仓库基本信息页面, 别急着填, 直接拉到最下面, 找到这个: &lt;img src=&#34;images/Git%E5%90%8C%E6%97%B6%E6%8E%A8%E9%80%81%E5%A4%9A%E4%B8%AA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93-05.png&#34; alt=&#34;Git同时推送多个远程仓库-05&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;点击后, 输入上面Github的仓库地址, 点击创建:&lt;img src=&#34;images/Git%E5%90%8C%E6%97%B6%E6%8E%A8%E9%80%81%E5%A4%9A%E4%B8%AA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93-06.png&#34; alt=&#34;Git同时推送多个远程仓库-06&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;等待片刻:&lt;img src=&#34;images/Git%E5%90%8C%E6%97%B6%E6%8E%A8%E9%80%81%E5%A4%9A%E4%B8%AA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93-07.png&#34; alt=&#34;Git同时推送多个远程仓库-07&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;创建完成&lt;img src=&#34;images/Git%E5%90%8C%E6%97%B6%E6%8E%A8%E9%80%81%E5%A4%9A%E4%B8%AA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93-08.png&#34; alt=&#34;Git同时推送多个远程仓库-08&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;创建初始化本地仓库&#34;&gt;创建、初始化本地仓库&lt;/h3&gt;&#xA;&lt;h4 id=&#34;创建本地仓库&#34;&gt;创建本地仓库&lt;/h4&gt;&#xA;&lt;p&gt;在电脑中创建一个新目录:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Git%E5%90%8C%E6%97%B6%E6%8E%A8%E9%80%81%E5%A4%9A%E4%B8%AA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93-09.png&#34; alt=&#34;Git同时推送多个远程仓库-09&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;右键, 点击&lt;code&gt;Git Bash Here&lt;/code&gt;(如果没有, 直接用&lt;code&gt;CMD&lt;/code&gt;进入目录即可)&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Git%E5%90%8C%E6%97%B6%E6%8E%A8%E9%80%81%E5%A4%9A%E4%B8%AA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93-10.png&#34; alt=&#34;Git同时推送多个远程仓库-10&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;初始化本地仓库&#34;&gt;初始化本地仓库&lt;/h4&gt;&#xA;&lt;p&gt;输入命令:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git init&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;images/Git%E5%90%8C%E6%97%B6%E6%8E%A8%E9%80%81%E5%A4%9A%E4%B8%AA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93-11.png&#34; alt=&#34;Git同时推送多个远程仓库-11&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;在项目目录中创建文件&lt;code&gt;README.md&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Git%E5%90%8C%E6%97%B6%E6%8E%A8%E9%80%81%E5%A4%9A%E4%B8%AA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93-12.png&#34; alt=&#34;Git同时推送多个远程仓库-12&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;git提交&#34;&gt;git提交&lt;/h4&gt;&#xA;&lt;p&gt;回到Git终端, 分别输入:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add README.md&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;first commit&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git remote add origin 你的Github仓库地址&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;images/Git%E5%90%8C%E6%97%B6%E6%8E%A8%E9%80%81%E5%A4%9A%E4%B8%AA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93-13.png&#34; alt=&#34;Git同时推送多个远程仓库-13&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ditto 无法 开机自启 的终极解决方案(Win10)</title>
      <link>http://localhost:1313/posts/post/2020/ditto-%E6%97%A0%E6%B3%95-%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF-%E7%9A%84%E7%BB%88%E6%9E%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88win10/</link>
      <pubDate>Sat, 16 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/ditto-%E6%97%A0%E6%B3%95-%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF-%E7%9A%84%E7%BB%88%E6%9E%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88win10/</guid>
      <description>&lt;p&gt;近些年一直在使用&lt;code&gt;Ditto&lt;/code&gt;作为剪贴板增强工具, 但是突然有一天&lt;code&gt;Ditto&lt;/code&gt;无法开机自启了! 自己设置了N次, 还是不行! 但是开动脑筋想了一阵子, 一次又一次的尝试, 终于成功了!&lt;/p&gt;&#xA;&lt;h2 id=&#34;尝试过的方法&#34;&gt;尝试过的方法&lt;/h2&gt;&#xA;&lt;h3 id=&#34;在ditto软件中设置系统自启动&#34;&gt;在Ditto软件中设置系统自启动&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;以管理员身份运行Ditto&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;勾选&amp;quot;系统启动时运行&amp;quot;&lt;/p&gt;&#xA;&lt;p&gt;[caption id=&amp;ldquo;attachment_1213&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;701&amp;rdquo;]&lt;img src=&#34;images/01-5.png&#34; alt=&#34;勾选&amp;quot;系统启动时运行&amp;quot;&#34;&gt; 勾选&amp;quot;系统启动时运行&amp;quot;[/caption]&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;如果你通过这样设置可以成功, 那么恭喜你🎉🎉.&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;但是我这样没成功, 开机并没有自启动, 点击快捷键也没有反应.&lt;/p&gt;&#xA;&lt;h3 id=&#34;添加ditto至windows的启动目录&#34;&gt;添加Ditto至Windows的&amp;quot;启动&amp;quot;目录&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;复制&lt;code&gt;Ditto&lt;/code&gt;的快捷方式&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Win&lt;/code&gt;+&lt;code&gt;R&lt;/code&gt;打开&amp;quot;运行&amp;quot;&lt;/li&gt;&#xA;&lt;li&gt;输入&lt;code&gt;shell:Common Startup&lt;/code&gt;: &lt;img src=&#34;images/02-6.png&#34; alt=&#34;输入shell:Common Startup&#34;&gt;&lt;/li&gt;&#xA;&lt;li&gt;点击确定, 打开&amp;quot;启动&amp;quot;目录, 粘贴&lt;code&gt;Ditto&lt;/code&gt;的快捷方式. &lt;img src=&#34;images/03-6.png&#34; alt=&#34;粘贴快捷方式&#34;&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;如果你通过这样设置可以成功, 那么恭喜你🎉🎉.&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;我同样死在了这一步. 重启后依然失败.&lt;/p&gt;&#xA;&lt;h2 id=&#34;个人猜想&#34;&gt;个人猜想&lt;/h2&gt;&#xA;&lt;h3 id=&#34;查询的过程&#34;&gt;查询的过程&lt;/h3&gt;&#xA;&lt;p&gt;在网上冲浪的过程中, 并没有发现别人反馈类似的问题(可能是因为这个软件比较冷门)😑.&lt;/p&gt;&#xA;&lt;p&gt;越过大墙, 发现真的有人&lt;a href=&#34;https://sourceforge.net/p/ditto-cp/discussion/287511/thread/75911afb1b/?limit=25&#34; target=&#34;_blank&#34;&gt;反馈&lt;/a&gt;&#xA;:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/04-4.png&#34; alt=&#34;反馈界面&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;win10-自带的剪贴板增强软件&#34;&gt;Win10 自带的剪贴板增强软件&lt;/h3&gt;&#xA;&lt;p&gt;无意中发现可以按快捷键&lt;code&gt;Win&lt;/code&gt;+&lt;code&gt;V&lt;/code&gt;唤起剪贴板:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/05-3-229x300.png&#34; alt=&#34;Win10 自带的剪贴板增强软件&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这个自带的软件蛮简洁的, 喜欢的同学可以直接使用. (功能较少, 只有粘贴, 没有搜索)&lt;/p&gt;&#xA;&lt;h3 id=&#34;win10故意屏蔽ditto&#34;&gt;Win10故意屏蔽Ditto?&lt;/h3&gt;&#xA;&lt;p&gt;也许是微软看到&lt;code&gt;Ditto&lt;/code&gt;的功能相当不错, 所以自己加了上面说的剪贴板工具. 为了将Ditto的用户引流过来, 故意屏蔽了&lt;code&gt;Ditto&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;以上纯属个人阴谋论、瞎猜, 请勿当真😏😏&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;h2 id=&#34;终极解决方案&#34;&gt;终极解决方案&lt;/h2&gt;&#xA;&lt;p&gt;人之所以被称为万物之灵, 是因为人的智慧是无穷无尽的. 这一点在程序员身上提现的淋漓尽致. 那么, 现在就开始吧!&lt;/p&gt;&#xA;&lt;h3 id=&#34;创建命令行文件&#34;&gt;创建命令行文件&lt;/h3&gt;&#xA;&lt;p&gt;创建文件&lt;code&gt;start_ditto.bat&lt;/code&gt;(名称随意, 后缀不能变)&lt;/p&gt;&#xA;&lt;p&gt;使用记事本打开, 编辑. 输入以下内容:&lt;/p&gt;</description>
    </item>
    <item>
      <title>MyBatis Plus 分页查询返回的 数据总数total为0 的解决方案</title>
      <link>http://localhost:1313/posts/post/2020/mybatis-plus-%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2%E8%BF%94%E5%9B%9E%E7%9A%84-%E6%95%B0%E6%8D%AE%E6%80%BB%E6%95%B0total%E4%B8%BA0-%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/mybatis-plus-%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2%E8%BF%94%E5%9B%9E%E7%9A%84-%E6%95%B0%E6%8D%AE%E6%80%BB%E6%95%B0total%E4%B8%BA0-%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>&lt;p&gt;今天在使用MyBatis-Plus在进行分页查询时, 返回的&lt;code&gt;IPage&lt;/code&gt;对象数据的&lt;code&gt;total&lt;/code&gt;属性一直是&lt;code&gt;0&lt;/code&gt;. 没有数据总数, 前端的分页部分将会比较难搞, 在此记录一下排坑过程.&lt;/p&gt;&#xA;&lt;h2 id=&#34;开发环境&#34;&gt;开发环境&lt;/h2&gt;&#xA;&lt;p&gt;本教程的开发环境如下:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;名称&lt;/th&gt;&#xA;          &lt;th&gt;版本&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;JDK&lt;/td&gt;&#xA;          &lt;td&gt;1.8&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Spring Boot&lt;/td&gt;&#xA;          &lt;td&gt;2.1.14.RELEASE&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Mybatis-Plus&lt;/td&gt;&#xA;          &lt;td&gt;3.2.0&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;h3 id=&#34;方案一-添加配置类-注入paginationinterceptor推荐&#34;&gt;方案一: 添加配置类, 注入&lt;code&gt;PaginationInterceptor&lt;/code&gt;(推荐)&lt;/h3&gt;&#xA;&lt;p&gt;创建类文件&lt;code&gt;MybatisPlusConfig&lt;/code&gt;文件, 输入以下代码:&lt;/p&gt;&#xA;&lt;p&gt;[epcl_tabs] [epcl_tab title=&amp;ldquo;Kotlin&amp;rdquo;]&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&#xA;import com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor&#xA;import org.springframework.context.annotation.Bean&#xA;import org.springframework.context.annotation.Configuration&#xA;&#xA;@Configuration&#xA;class MybatisPlusConfig {&#xA;    /**&#xA;     * 分页插件&#xA;     */&#xA;    @Bean&#xA;    fun paginationInterceptor(): PaginationInterceptor {&#xA;        return PaginationInterceptor()&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;[/epcl_tab] [epcl_tab title=&amp;ldquo;Java&amp;rdquo;]&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&#xA;import com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor;&#xA;import org.springframework.context.annotation.Bean;&#xA;import org.springframework.context.annotation.Configuration;&#xA;&#xA;@Configuration&#xA;public class MybatisPlusConfig {&#xA;    /**&#xA;     * 分页插件&#xA;     */&#xA;    @Bean&#xA;    public PaginationInterceptor paginationInterceptor() {&#xA;        return new PaginationInterceptor();&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;[/epcl_tab] [/epcl_tabs]&lt;/p&gt;</description>
    </item>
    <item>
      <title>修改Flutter的APP图标、启动器图标</title>
      <link>http://localhost:1313/posts/post/2020/%E4%BF%AE%E6%94%B9flutter%E7%9A%84app%E5%9B%BE%E6%A0%87%E5%90%AF%E5%8A%A8%E5%99%A8%E5%9B%BE%E6%A0%87/</link>
      <pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E4%BF%AE%E6%94%B9flutter%E7%9A%84app%E5%9B%BE%E6%A0%87%E5%90%AF%E5%8A%A8%E5%99%A8%E5%9B%BE%E6%A0%87/</guid>
      <description>&lt;p&gt;在APP上线前, 我们肯定需要修改APP的启动图标. APP图标代表了它的品牌, 增加了辨识度. 让用户可以在手机的APP列表内快速找到你的APP. 所以本篇博客将记录修改Flutter 的APP图标/启动器图标的全过程.&lt;/p&gt;&#xA;&lt;h2 id=&#34;android图标&#34;&gt;Android图标&lt;/h2&gt;&#xA;&lt;h3 id=&#34;查看初始图标&#34;&gt;查看初始图标&lt;/h3&gt;&#xA;&lt;p&gt;打开目录&lt;code&gt;./android/app/src/main/res&lt;/code&gt;, 你会发现有如下几个目录:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mipmap-hdpi&#xA;mipmap-mdpi&#xA;mipmap-xhdpi&#xA;mipmap-xxhdpi&#xA;mipmap-xxxhdpi&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如图:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/01-4.png&#34; alt=&#34;修改Flutter的APP图标 启动器图标&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;当你打开每个文件, 会发现每个图标都是这张初始图片:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/02-5.png&#34; alt=&#34;修改Flutter的APP图标 启动器图标&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;图标尺寸规范&#34;&gt;图标尺寸规范&lt;/h3&gt;&#xA;&lt;p&gt;我们需要准备以下图片:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;对应目录&lt;/th&gt;&#xA;          &lt;th&gt;尺寸&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mipmap-mdpi&lt;/td&gt;&#xA;          &lt;td&gt;48×48&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mipmap-hdpi&lt;/td&gt;&#xA;          &lt;td&gt;72×72&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mipmap-xhdpi&lt;/td&gt;&#xA;          &lt;td&gt;96×96&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mipmap-xxhdpi&lt;/td&gt;&#xA;          &lt;td&gt;144×144&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mipmap-xxxhdpi&lt;/td&gt;&#xA;          &lt;td&gt;192×192&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;图标命名规范&#34;&gt;图标命名规范&lt;/h3&gt;&#xA;&lt;p&gt;它们的文件名通通是&lt;code&gt;ic_launcher.png&lt;/code&gt;!&lt;/p&gt;&#xA;&lt;h3 id=&#34;图标目录结构&#34;&gt;图标目录结构&lt;/h3&gt;&#xA;&lt;p&gt;目录结构:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;./android/app/src/main/res/mipmap-mdpi/ic_launcher.png&#xA;./android/app/src/main/res/mipmap-hdpi/ic_launcher.png&#xA;./android/app/src/main/res/mipmap-xhdpi/ic_launcher.png&#xA;./android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png&#xA;./android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;替换完成后, 重新运行你的Flutter项目. 看看你的调试设备的APP启动图标, 你应该就可以看到修改的结果了!&lt;/p&gt;&#xA;&lt;h2 id=&#34;感谢&#34;&gt;感谢&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.pexels.com/zh-cn/photo/267389/?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&#34; target=&#34;_blank&#34;&gt;Pexels&lt;/a&gt;&#xA; 上的 &lt;a href=&#34;https://www.pexels.com/zh-cn/@pixabay?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&#34; target=&#34;_blank&#34;&gt;Pixabay&lt;/a&gt;&#xA; 拍摄的照片&lt;/p&gt;&#xA;&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;&#xA;&lt;p&gt;如果你对本篇文章有任何问题, 欢迎在下方评论区, 进行讨论, 或加入&lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=egT9rjgu&#34; target=&#34;_blank&#34;&gt;阿航的技术小站交流群&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;欢迎访问&lt;a href=&#34;https://www.bugcatt.com&#34; target=&#34;_blank&#34;&gt;阿航的技术小站&lt;/a&gt;&#xA;官网, 获取更多技术干货!&lt;/p&gt;</description>
    </item>
    <item>
      <title>在Flutter中使用16进制颜色</title>
      <link>http://localhost:1313/posts/post/2020/%E5%9C%A8flutter%E4%B8%AD%E4%BD%BF%E7%94%A816%E8%BF%9B%E5%88%B6%E9%A2%9C%E8%89%B2/</link>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E5%9C%A8flutter%E4%B8%AD%E4%BD%BF%E7%94%A816%E8%BF%9B%E5%88%B6%E9%A2%9C%E8%89%B2/</guid>
      <description>&lt;p&gt;使用16进制表示颜色是较为主流的方式, 那么在本篇文章中将简单讲讲如何在Flutter中使用16进制颜色.&lt;/p&gt;&#xA;&lt;h2 id=&#34;方法一-使用原生方法&#34;&gt;方法一: 使用原生方法&lt;/h2&gt;&#xA;&lt;p&gt;Flutter中, &lt;code&gt;Color&lt;/code&gt;类仅接收整数作为参数. 你也可以使用&lt;code&gt;fromARGB&lt;/code&gt;或者&lt;code&gt;fromRGBO&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;比如拿到了一个16进制颜色&lt;code&gt;#b74093&lt;/code&gt;. 因为&lt;code&gt;Color&lt;/code&gt;还需要传入透明度, &lt;code&gt;255&lt;/code&gt;就是最大值(也就是不透明), 转为16进制就是&lt;code&gt;0xFF&lt;/code&gt;, 所以我们只需这样表示:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const color = Color(0xffb74093);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;正规一点的写法(可选, 因为大小写不敏感):&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const color = Color(0xFFB74093);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;方法二-接收字符串格式-转为color&#34;&gt;方法二: 接收字符串格式, 转为Color&lt;/h2&gt;&#xA;&lt;p&gt;创建一个&lt;code&gt;HexColor&lt;/code&gt;类:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;class HexColor extends Color {&#xA;  static int _getColorFromHex(String hexColor) {&#xA;    hexColor = hexColor.toUpperCase().replaceAll(&amp;#34;#&amp;#34;, &amp;#34;&amp;#34;);&#xA;    if (hexColor.length == 6) {&#xA;      hexColor = &amp;#34;FF&amp;#34; + hexColor;&#xA;    }&#xA;    return int.parse(hexColor, radix: 16);&#xA;  }&#xA;&#xA;  HexColor(final String hexColor) : super(_getColorFromHex(hexColor));&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后进行调用:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Color color1 = HexColor(&amp;#34;b74093&amp;#34;);&#xA;Color color2 = HexColor(&amp;#34;#b74093&amp;#34;);&#xA;Color color3 = HexColor(&amp;#34;#88b74093&amp;#34;);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;感谢&#34;&gt;感谢&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/50081213/how-do-i-use-hexadecimal-color-strings-in-flutter&#34; target=&#34;_blank&#34;&gt;How do I use hexadecimal color strings in Flutter? - Stack Overflow&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;&#xA;&lt;p&gt;如果你对本篇文章有任何问题, 欢迎在下方评论区, 进行讨论, 或加入&lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=egT9rjgu&#34; target=&#34;_blank&#34;&gt;阿航的技术小站QQ交流群&lt;/a&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>移除Flutter右上角的DEBUG标识</title>
      <link>http://localhost:1313/posts/post/2020/%E7%A7%BB%E9%99%A4flutter%E5%8F%B3%E4%B8%8A%E8%A7%92%E7%9A%84debug%E6%A0%87%E8%AF%86/</link>
      <pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E7%A7%BB%E9%99%A4flutter%E5%8F%B3%E4%B8%8A%E8%A7%92%E7%9A%84debug%E6%A0%87%E8%AF%86/</guid>
      <description>&lt;p&gt;在使用Flutter进行开发时, 右上角会出现一个DEBUG的标识. 测试的时候倒是无所谓, 但是APP上线前肯定要将其去掉. 证明其是一个开发完成的、完整的APP. 这篇非常简短的博客将会记录如何去掉Flutter右上角的DEBUG标识. 一共有两种方式, 你可以按需来选择!&lt;/p&gt;&#xA;&lt;h2 id=&#34;自动移除&#34;&gt;自动移除&lt;/h2&gt;&#xA;&lt;p&gt;别担心, 你在为Flutter打正式包的时候, 这个标志将会自动消失. 但有的时候我们想在开发过程中直接去掉, 那么你会需要下面的手动移除.&lt;/p&gt;&#xA;&lt;h2 id=&#34;方法一-代码修改&#34;&gt;方法一: 代码修改&lt;/h2&gt;&#xA;&lt;p&gt;找到你的&lt;code&gt;MaterialApp&lt;/code&gt;(建议直接使用关键字进行全局搜索), 为其添加一个属性即可去掉:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;MaterialApp(&#xA; debugShowCheckedModeBanner: false&#xA; ...&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如图:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/01-3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;方法二-android-studio修改&#34;&gt;方法二: Android Studio修改&lt;/h2&gt;&#xA;&lt;p&gt;如果你用的是Android Studio, 那么你可以不修改代码, 通过鼠标来移除:&lt;/p&gt;&#xA;&lt;p&gt;第一步: 点击界面右侧侧边栏的&lt;code&gt;Flutter Inspector&lt;/code&gt;, 如图:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/02-4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;第二步: 点击弹出界面的&amp;quot;More Actions&amp;quot;的下拉选(这个按钮字比较小, 比较隐蔽):&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/03-3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;第三步: 点击下拉选项的&amp;quot;Hide Debug Mode Banner&amp;quot;:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/04-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;搞定!&lt;/p&gt;&#xA;&lt;h2 id=&#34;感谢&#34;&gt;感谢&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.pexels.com/zh-cn/photo/5412/?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&#34; target=&#34;_blank&#34;&gt;Pexels&lt;/a&gt;&#xA; 上的 &lt;a href=&#34;https://www.pexels.com/zh-cn/@jaymantri?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&#34; target=&#34;_blank&#34;&gt;Jaymantri&lt;/a&gt;&#xA; 拍摄的照片&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/48893935/how-to-remove-debug-banner-in-flutter-on-android-emulator&#34; target=&#34;_blank&#34;&gt;How to remove debug banner in flutter on android emulator? - Stack Overflow&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;(排名不分先后)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;&#xA;&lt;p&gt;两种方式都可以进行修改, 唯一的区别就是方法一影响代码, 方法二不会变动代码. 你可以按实际情况选择你需要的方式!&lt;/p&gt;</description>
    </item>
    <item>
      <title>MySQL 创建用户 &amp; 授权</title>
      <link>http://localhost:1313/posts/post/2020/mysql-%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7-%E6%8E%88%E6%9D%83/</link>
      <pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/mysql-%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7-%E6%8E%88%E6%9D%83/</guid>
      <description>&lt;p&gt;MySQL 等主流 数据库 的最高权限一般是root用户. 有时我们需要提供数据库的账号和密码以使用某些服务. 但实际上每个服务只会使用1个左右的数据库. 直接将root账号和密码随意分配是一件很危险的事情. 所以我们需要单独的 创建用户, 并 授权 需要的数据库给它.&lt;/p&gt;&#xA;&lt;h2 id=&#34;用户管理&#34;&gt;用户管理&lt;/h2&gt;&#xA;&lt;h3 id=&#34;创建用户&#34;&gt;创建用户&lt;/h3&gt;&#xA;&lt;p&gt;创建用户harrison, 并指定IP为192.118.1.1; 设置密码为123&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE USER &amp;#39;harrison&amp;#39; @&amp;#39;192.118.1.1&amp;#39; IDENTIFIED BY &amp;#39;123&amp;#39;;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;创建用户harrison, 任意IP即可登录; 设置密码为123&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE USER &amp;#39;harrison&amp;#39; @&amp;#39;%&amp;#39; IDENTIFIED BY &amp;#39;123&amp;#39;;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;删除用户&#34;&gt;删除用户&lt;/h3&gt;&#xA;&lt;p&gt;删除用户名为harrison, 且IP为192.118.1.1的用户&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DROP USER &amp;#39;harrison&amp;#39; @&amp;#39;192.118.1.1&amp;#39;;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;修改用户名及ip&#34;&gt;修改用户名及IP&lt;/h3&gt;&#xA;&lt;p&gt;修改用户名为harrison, 不限制登录IP的用户 -&amp;gt; 用户名harry, 限制登录IP为192.168.1.1&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;RENAME USER &amp;#39;harrison&amp;#39; @&amp;#39;%&amp;#39; TO &amp;#39;harry&amp;#39; @&amp;#39;192.168.1.1&amp;#39;;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;修改用户密码&#34;&gt;修改用户密码&lt;/h3&gt;&#xA;&lt;p&gt;修改用户名为harrison, 不限制登录IP的用户的密码为456&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SET PASSWORD FOR &amp;#39;harrison&amp;#39; @&amp;#39;%&amp;#39; = PASSWORD ( &amp;#39;456&amp;#39; );&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;用户授权&#34;&gt;用户授权&lt;/h2&gt;&#xA;&lt;h3 id=&#34;查看用户拥有权限&#34;&gt;查看用户拥有权限&lt;/h3&gt;&#xA;&lt;p&gt;查看用户harrison拥有的权限:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SHOW GRANTS FOR &amp;#39;harrison&amp;#39; @&amp;#39;%&amp;#39;;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;赋予权限&#34;&gt;赋予权限&lt;/h3&gt;&#xA;&lt;p&gt;为harrison提供db1数据库的table1表SELECT(查询)、INSERT(新增)、UPDATE(修改)权限&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dart 中的 Null-aware (null感知运算符)</title>
      <link>http://localhost:1313/posts/post/2020/dart-%E4%B8%AD%E7%9A%84-null-aware-null%E6%84%9F%E7%9F%A5%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/dart-%E4%B8%AD%E7%9A%84-null-aware-null%E6%84%9F%E7%9F%A5%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>&lt;p&gt;来到这篇文章, 说明你一定想在 Dart 的语法上更进一步(不出意外的话, 你在学 Flutter 🤭🤭). 工欲善其事, 必先利其器. 一个优秀的程序员应该掌握可以节省代码量的高级语法, 不论是节约时间还是提升水平. 本篇文章就来讲讲Dart语言中的 Null-aware ( null感知运算符 )吧!&lt;/p&gt;&#xA;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;&#xA;&lt;p&gt;Dart的Null-aware来自于&lt;code&gt;Dart 1.12&lt;/code&gt;正式版本:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/01-2-1500x675.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;你也可以看看&lt;a href=&#34;https://news.dartlang.org/2015/08/dart-112-released-with-null-aware.html&#34; target=&#34;_blank&#34;&gt;官网版本介绍&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;h2 id=&#34;用途&#34;&gt;用途&lt;/h2&gt;&#xA;&lt;p&gt;存在即是合理. 既然有这样的新运算符, 说明它在一定程度上&lt;strong&gt;节省了我们的代码&lt;/strong&gt;, 使&lt;strong&gt;代码更加简洁&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;既然它被称为&lt;code&gt;Null-aware&lt;/code&gt;, 说明这个运算符是专门&lt;strong&gt;用于处理&lt;code&gt;null&lt;/code&gt;值&lt;/strong&gt;的. 将会提供空指针的相关操作.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/02-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;创建示例对象&#34;&gt;创建示例对象&lt;/h2&gt;&#xA;&lt;p&gt;我们来创建一个&lt;code&gt;Person&lt;/code&gt;对象, 方便后续使用:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;class Person{&#xA;  // 性别&#xA;  String gender;&#xA;&#xA;  // 变更性别为女性&#xA;  void changeToFemale(){&#xA;    gender = &amp;#34;女性&amp;#34;;&#xA;  }&#xA;}&#xA;&#xA;Person person = Person();&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;heading&#34;&gt;??&lt;/h2&gt;&#xA;&lt;p&gt;当前者为null时, 返回后者.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;exp ?? anotherExp&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;实例-获取用户性别&#34;&gt;实例: 获取用户性别&lt;/h3&gt;&#xA;&lt;p&gt;当某个Person对象的gender(性别)属性为null时, 返回&amp;rsquo;未知&#39;:&lt;/p&gt;&#xA;&lt;h4 id=&#34;方法一-基础if语句&#34;&gt;方法一: 基础IF语句&lt;/h4&gt;&#xA;&lt;p&gt;我们可以用最基础的语句来写:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;String gender;&#xA;if(person.gender!=null){&#xA;    gender = person.gender;&#xA;}else{&#xA;    gender = &amp;#39;未知&amp;#39;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;方法二-三目运算&#34;&gt;方法二: 三目运算&lt;/h4&gt;&#xA;&lt;p&gt;三目运算符相当好用:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Windows 安装 &amp; 部署 CURL</title>
      <link>http://localhost:1313/posts/post/2020/windows-%E4%B8%8B%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2-curl/</link>
      <pubDate>Fri, 08 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/windows-%E4%B8%8B%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2-curl/</guid>
      <description>&lt;p&gt;很多时候对接API, 接口提供方都会给出CURL格式的数据让我们进行访问、运行. 今天阿航看到百度站长平台(百度搜索资源平台)的主动推送有CURL方式. 但是发现自己的Windows上没有CURL的运行环境, 在此记录一下安装、部署CURL的过程.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/01-1.png&#34; alt=&#34;Windows 安装&amp;amp;部署 CURL&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;本篇教程针对于Windows系统用户, 阿航用的是Win10&lt;/li&gt;&#xA;&lt;li&gt;你的电脑可以联网&lt;/li&gt;&#xA;&lt;li&gt;电脑有了自己的压缩软件(比如WinRAR、 360压缩等)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;下载-curl&#34;&gt;下载 CURL&lt;/h2&gt;&#xA;&lt;p&gt;访问&lt;a href=&#34;https://curl.haxx.se/download.html&#34; target=&#34;_blank&#34;&gt;CURL官网&lt;/a&gt;&#xA;, 向下拉, 找到Windows的版本(汗, 在最下面. 这是多讨厌Windows…).&lt;br&gt;&#xA;如图:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/02-1-1500x633.png&#34; alt=&#34;Windows 安装&amp;amp;部署 CURL&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;解压, 应该可以看到如下目录:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/03-1.png&#34; alt=&#34;Windows 安装&amp;amp;部署 CURL&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;把压缩文件中的目录解压到某个地方(阿航放在了&lt;code&gt;D:\Program Files\curl-7.70.0-win64-mingw&lt;/code&gt;下):&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/04-1.png&#34; alt=&#34;Windows 安装&amp;amp;部署 CURL&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;配置-windows-环境变量&#34;&gt;配置 Windows 环境变量&lt;/h2&gt;&#xA;&lt;p&gt;打开环境变量设置(点击开始, 直接输入关键字&amp;quot;环境变量&amp;quot;):&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/05-1.png&#34; alt=&#34;Windows 安装&amp;amp;部署 CURL&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;点击&amp;quot;环境变量&amp;quot;按钮:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/06.png&#34; alt=&#34;Windows 安装&amp;amp;部署 CURL&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;选中&amp;quot;系统变量&amp;quot;的&lt;code&gt;Path&lt;/code&gt;, 点击编辑:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/07.png&#34; alt=&#34;Windows 安装&amp;amp;部署 CURL&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;新建一个环境变量, 值为&lt;code&gt;解压目录\bin&lt;/code&gt;. 阿航这里为&lt;code&gt;D:\Program Files\curl-7.70.0-win64-mingw\bin&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/08.png&#34; alt=&#34;Windows 安装&amp;amp;部署 CURL&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;一路确定保存.&lt;/p&gt;&#xA;&lt;h2 id=&#34;校验-curl-是否安装成功&#34;&gt;校验 CURL 是否安装成功&lt;/h2&gt;&#xA;&lt;p&gt;打开CMD, 输入:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;curl --version&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果出现了版本信息, 证明安装成功:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/09.png&#34; alt=&#34;Windows 安装&amp;amp;部署 CURL&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker 搭建 Minecraft (我的世界)服务器</title>
      <link>http://localhost:1313/posts/post/2020/docker-%E6%90%AD%E5%BB%BA-minecraft-%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/docker-%E6%90%AD%E5%BB%BA-minecraft-%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>&lt;p&gt;国内的某易代理简直是太好(la)用(ji)了. 这不最近想重拾一下青春.. 下载, 并打开国服 我的世界 Minecraft , 好家伙, 占了1g多的手机存储, 材质光影资源短缺, 界面卡到爆😓&lt;br&gt;&#xA;回头一看官方版, 包大小只有98m.. 作为一个7年的MC老玩家简直不能忍! 回想起很久之前自己开服, 现在又掌握了Docker容器技术, 尝试一下自己开服.&lt;/p&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;p&gt;本篇教程针对于以下人群:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;愿意为Minecraft而折腾的人.&lt;/li&gt;&#xA;&lt;li&gt;了解Docker基本用法, 如果你对Docker还不太熟悉, 可以阅读&lt;a href=&#34;https://www.docker.com/&#34; target=&#34;_blank&#34;&gt;Docker官方文档&lt;/a&gt;&#xA;、&lt;a href=&#34;https://www.runoob.com/docker/docker-tutorial.html&#34; target=&#34;_blank&#34;&gt;Docker菜鸟教程&lt;/a&gt;&#xA;等.&lt;/li&gt;&#xA;&lt;li&gt;拥有自己的云服务器(阿里云等).&lt;/li&gt;&#xA;&lt;li&gt;了解常见终端语法.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;使用pocketmine&#34;&gt;使用PocketMine&lt;/h2&gt;&#xA;&lt;p&gt;在&lt;a href=&#34;https://hub.docker.com/&#34; target=&#34;_blank&#34;&gt;Docker Hub&lt;/a&gt;&#xA;中搜索关键字: &lt;code&gt;pocketmine&lt;/code&gt;, 可以看到有好多相关镜像.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;在选型中, 我们一般会选用活跃度高一些的镜像. 也就是&amp;quot;没凉&amp;quot;的镜像. 长时间不维护的镜像可能出现无法快速解决的Bug等!&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;途中最新的镜像距文章编写时间只有18个小时, 已经非常活跃了, 所以选用这个!&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/01-1500x812.png&#34; alt=&#34;Docker 搭建 Minecraft (我的世界)服务器&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;点击, 进入&lt;a href=&#34;https://hub.docker.com/r/circleeh/pocketmine&#34; target=&#34;_blank&#34;&gt;circleeh/pocketmine详情页&lt;/a&gt;&#xA;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;拉取镜像&#34;&gt;拉取镜像&lt;/h2&gt;&#xA;&lt;h3 id=&#34;选取版本&#34;&gt;选取版本&lt;/h3&gt;&#xA;&lt;p&gt;这里一定要注意选择合适的版本, 若版本不兼容则会无法加入至服务器, 先来看一下自己的Minecraft版本号, 再去&lt;a href=&#34;https://github.com/pmmp/PocketMine-MP/releases&#34; target=&#34;_blank&#34;&gt;这个Github网址&lt;/a&gt;&#xA;对照自己的版本!&lt;/p&gt;&#xA;&lt;p&gt;打开&lt;a href=&#34;https://github.com/pmmp/PocketMine-MP/releases&#34; target=&#34;_blank&#34;&gt;官方Github Release网址&lt;/a&gt;&#xA;, 可以看到:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/02-1500x745.png&#34; alt=&#34;Docker 搭建 Minecraft (我的世界)服务器&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;如你所见, 大标题后面的是PocketMine版本号, 下面的副标题是对应的Minecraft版本号.&lt;/p&gt;&#xA;&lt;p&gt;回到&lt;a href=&#34;https://hub.docker.com/r/circleeh/pocketmine&#34; target=&#34;_blank&#34;&gt;circleeh/pocketmine详情页&lt;/a&gt;&#xA;, 点击Tags:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/03-1500x673.png&#34; alt=&#34;Docker 搭建 Minecraft (我的世界)服务器&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>CentOS 7 安装 PHP 7.2</title>
      <link>http://localhost:1313/posts/post/2020/centos-7-%E5%AE%89%E8%A3%85-php-7-2/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/centos-7-%E5%AE%89%E8%A3%85-php-7-2/</guid>
      <description>&lt;p&gt;CentOS 7 自带的PHP版本比较低, 所以本篇来为大家记录CentOS 7 安装 PHP 7.2 的过程&lt;/p&gt;&#xA;&lt;h2 id=&#34;查看当前安装的php版本&#34;&gt;查看当前安装的PHP版本&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;php -v&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果不是你想要的版本, 请继续向下看.&lt;/p&gt;&#xA;&lt;h2 id=&#34;完全清除旧php&#34;&gt;完全清除旧PHP&lt;/h2&gt;&#xA;&lt;p&gt;输入下面的命令, 来查看已安装的PHP相关包:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;rpm -qa|grep php&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;正常情况下, 会看到若干行.&lt;/p&gt;&#xA;&lt;p&gt;使用传统的&lt;code&gt;yum remove php&lt;/code&gt;无法清理干净, 所以为了节省时间我们有两种方式:&lt;/p&gt;&#xA;&lt;h3 id=&#34;方法一-优雅删除&#34;&gt;方法一: 优雅删除&lt;/h3&gt;&#xA;&lt;p&gt;因为PHP直接有着相互依赖的关系, 在使用&lt;code&gt;rpm -e XXXX&lt;/code&gt;时会提醒你依赖的包, 这时我们先要删除依赖.&lt;/p&gt;&#xA;&lt;p&gt;当然, 这么做比较浪费时间, 但也是最安全的做法.&lt;/p&gt;&#xA;&lt;h3 id=&#34;方法二-强制批量删除&#34;&gt;方法二: 强制批量删除&lt;/h3&gt;&#xA;&lt;p&gt;使用&lt;code&gt;rpm -e XXXX --nodeps&lt;/code&gt;进行强制删除, 比如:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;rpm -e php-symfony-http-foundation-2.8.12-2.el7.noarch  --nodeps; \&#xA;rpm -e php-symfony-http-foundation-2.8.12-2.el7.noarch  --nodeps; \&#xA;rpm -e php-composer-spdx-licenses-1.5.3-1.el7.noarch  --nodeps; &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;这个例子就会强制删除这三个包, 方便快捷.&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;h2 id=&#34;检测是否清理干净&#34;&gt;检测是否清理干净&lt;/h2&gt;&#xA;&lt;p&gt;先来看看有没有相关的包:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;rpm -qa|grep php&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果没有返回, 那么视为成功;&lt;/p&gt;&#xA;&lt;p&gt;再来看看PHP是否消失:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;php -v&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;同样的, 如果没有返回, 那么视为成功.&lt;/p&gt;&#xA;&lt;h2 id=&#34;安装php72&#34;&gt;安装PHP7.2&lt;/h2&gt;&#xA;&lt;p&gt;输入以下命令进行安装:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kotlin 使用 TypeReference</title>
      <link>http://localhost:1313/posts/post/2020/kotlin-%E4%BD%BF%E7%94%A8-typereference/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/kotlin-%E4%BD%BF%E7%94%A8-typereference/</guid>
      <description>&lt;p&gt;后端的语言使用的是Kotlin, 在写支付宝小程序获取手机号并解密时参照官方Java文档, Java自动转Kotlin出现异常. 在此进行记录.&lt;/p&gt;&#xA;&lt;p&gt;这一段的&lt;code&gt;Java&lt;/code&gt;代码块:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Map openapiResult = JSON.parseObject(response,&#xA;            new TypeReference&amp;gt;() {&#xA;            }, Feature.OrderedField);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;p&gt;转为&lt;code&gt;kotlin&lt;/code&gt;的正确写法:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;val typeRef = object : TypeReference&amp;gt;() {}&#xA;val openApiResult = JSON.parseObject(response, typeRef, Feature.OrderedField)        &#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>yum下载太慢? 使用国内源加速!</title>
      <link>http://localhost:1313/posts/post/2020/yum%E4%B8%8B%E8%BD%BD%E5%A4%AA%E6%85%A2-%E4%BD%BF%E7%94%A8%E5%9B%BD%E5%86%85%E6%BA%90%E5%8A%A0%E9%80%9F/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/yum%E4%B8%8B%E8%BD%BD%E5%A4%AA%E6%85%A2-%E4%BD%BF%E7%94%A8%E5%9B%BD%E5%86%85%E6%BA%90%E5%8A%A0%E9%80%9F/</guid>
      <description>&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;&#xA;&lt;p&gt;使用 yum 下载, 看到 Linux 控制台的2Kb/s是不是心态都崩了? 国内大墙在保护我们的同时, 也把我们程序员给害惨了&amp;hellip;来看看如何加速吧&lt;/p&gt;&#xA;&lt;h2 id=&#34;备份源&#34;&gt;备份源&lt;/h2&gt;&#xA;&lt;p&gt;万一源失效了呢, 有备无患:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;选择镜像&#34;&gt;选择镜像&lt;/h2&gt;&#xA;&lt;h3 id=&#34;使用阿里云镜像&#34;&gt;使用阿里云镜像&lt;/h3&gt;&#xA;&lt;h4 id=&#34;centos-5&#34;&gt;CentOS 5&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-5.repo&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;centos-6&#34;&gt;CentOS 6&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;centos-7&#34;&gt;CentOS 7&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;使用网易镜像&#34;&gt;使用网易镜像&lt;/h3&gt;&#xA;&lt;h4 id=&#34;centos-5-1&#34;&gt;CentOS 5&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS5-Base-163.repo&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;centos-6-1&#34;&gt;CentOS 6&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS6-Base-163.repo&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;centos-7-1&#34;&gt;CentOS 7&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS7-Base-163.repo&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;清理并构建缓存&#34;&gt;清理并构建缓存&lt;/h2&gt;&#xA;&lt;p&gt;首先运行:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;yum clean all&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;完成后运行:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;yum makecache&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;大功告成&#34;&gt;大功告成!&lt;/h2&gt;&#xA;&lt;p&gt;享受飞快的速度吧!&lt;/p&gt;&#xA;&lt;h2 id=&#34;感谢&#34;&gt;感谢&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/imweihao/p/7357484.html&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://www.cnblogs.com/imweihao/p/7357484.html&#34; target=&#34;_blank&#34;&gt;《国内yum源的安装(163，阿里云，epel)&lt;/a&gt;&#xA;》- &lt;a href=&#34;https://home.cnblogs.com/u/imweihao/&#34; target=&#34;_blank&#34;&gt;imweihao&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://wallhaven.cc/&#34; target=&#34;_blank&#34;&gt;Wallhaven&lt;/a&gt;&#xA;上&lt;a href=&#34;https://wallhaven.cc/w/95xy88&#34; target=&#34;_blank&#34;&gt;Yahren的图片&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Linux 踩坑: nohup: redirecting stderr to stdout</title>
      <link>http://localhost:1313/posts/post/2020/nohup-redirecting-stderr-to-stdout/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/nohup-redirecting-stderr-to-stdout/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;&#xA;&lt;p&gt;为公司部署某CRM系统. 前几步还是比较顺畅的. 但是当我打完包, 把其上传至服务器后, 出现了这样的坑. 阿航在此记录一下, 希望能帮到你&lt;/p&gt;&#xA;&lt;p&gt;运行其提供的&lt;code&gt;.sh&lt;/code&gt;文件时, 报错:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;nohup: redirecting stderr to stdout&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;找到&lt;code&gt;.sh&lt;/code&gt;文件, 看到这一行:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/01-4.png&#34; alt=&#34;Linux 踩坑: nohup: redirecting stderr to stdout&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;p&gt;我将其末尾的 &lt;code&gt;%&lt;/code&gt; 改为了 &lt;code&gt;2&amp;gt;&amp;amp;1 &amp;amp;&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/02-5.png&#34; alt=&#34;Linux 踩坑: nohup: redirecting stderr to stdout&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;再次运行, 成功😏😏.&lt;/p&gt;&#xA;&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;&#xA;&lt;p&gt;本篇文章只记录了阿航踩坑的过程, 不保证适用于全部情况. 很多时候的坑的原因是各种各样的. 希望这篇文章能帮到你.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.runoob.com/linux/linux-tutorial.html&#34; target=&#34;_blank&#34;&gt;Linux菜鸟教程&lt;/a&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>IDEA / Android Studio / WebStorm 取消默认打开最近项目</title>
      <link>http://localhost:1313/posts/post/2020/idea-android-studio-webstorm-%E5%8F%96%E6%B6%88%E9%BB%98%E8%AE%A4%E6%89%93%E5%BC%80%E6%9C%80%E8%BF%91%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/idea-android-studio-webstorm-%E5%8F%96%E6%B6%88%E9%BB%98%E8%AE%A4%E6%89%93%E5%BC%80%E6%9C%80%E8%BF%91%E9%A1%B9%E7%9B%AE/</guid>
      <description>&lt;p&gt;当我们同时维护多个项目时, idea默认的打开最近项目的功能就显得不是那么方便. 我们在这里进行设置, 使我们每次打开idea都可以选择需要打开的项目.&lt;/p&gt;&#xA;&lt;h2 id=&#34;打开设置&#34;&gt;打开设置&lt;/h2&gt;&#xA;&lt;p&gt;两种方式:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;你可以使用快捷键:&lt;br&gt;&#xA;Windows: &lt;code&gt;CTRL&lt;/code&gt; + &lt;code&gt;ALT&lt;/code&gt; + &lt;code&gt;S&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;点击左上角&lt;code&gt;File&lt;/code&gt;-&amp;gt;&lt;code&gt;Settings&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/01-3.png&#34; alt=&#34;IDEA / Android Studio / WebStorm 取消默认打开最近项目&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;进行修改&#34;&gt;进行修改&lt;/h2&gt;&#xA;&lt;p&gt;在设置弹窗中, 找到&lt;code&gt;Appearance % Behavior&lt;/code&gt;-&amp;gt;&lt;code&gt;System Settings&lt;/code&gt;-&amp;gt;&lt;code&gt;Reopen last project on startup&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;勾选则是每次打开后默认打开上次项目&lt;br&gt;&#xA;取消勾选则是每次打开后选择项目&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/02-4.png&#34; alt=&#34;IDEA / Android Studio / WebStorm 取消默认打开最近项目&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;搞定&#34;&gt;搞定!&lt;/h2&gt;</description>
    </item>
    <item>
      <title>新安装的 Centos 7.6 mini 网络无法使用</title>
      <link>http://localhost:1313/posts/post/2020/%E6%96%B0%E5%AE%89%E8%A3%85%E7%9A%84-centos-7-6-mini-%E7%BD%91%E7%BB%9C%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E6%96%B0%E5%AE%89%E8%A3%85%E7%9A%84-centos-7-6-mini-%E7%BD%91%E7%BB%9C%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;p&gt;阿航在给公司部署本地服务器的时候碰到了这个问题, 新安装的 Centos 7.6 mini 网络无法使用. 所以在此记录踩坑历程.&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;h3 id=&#34;方法一-选择完整安装推荐&#34;&gt;方法一: 选择完整安装(推荐)&lt;/h3&gt;&#xA;&lt;p&gt;这个年代, 硬件设备的价格并不高. 所以服务器的配置不会太低. 所以尽量安装完整版. 选择最小安装会遇到源源不断的坑, 浪费生命😑😑&lt;/p&gt;&#xA;&lt;p&gt;如果条件不允许, 请看方法二↓.&lt;/p&gt;&#xA;&lt;h3 id=&#34;方法二-配置网络&#34;&gt;方法二: 配置网络&lt;/h3&gt;&#xA;&lt;p&gt;1. 找到 /etc/sysconfig/network-scripts&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd /etc/sysconfig/network-scripts&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;2. 编辑ifcfg-enXXX&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vi ifcfg-enp1s0&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;3. 按 i 进入编辑模式, 修改:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ONBOOT=yes&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;4. 按ESC键, 输入&lt;code&gt;:wq&lt;/code&gt;保存&lt;/p&gt;&#xA;&lt;p&gt;5. 重启网络服务&lt;/p&gt;&#xA;&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.centos.org/&#34; target=&#34;_blank&#34;&gt;CentOS官网&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>历经1232天! 阿里正式发布《Java开发手册 泰山版》仍然免费！(附正版下载)</title>
      <link>http://localhost:1313/posts/post/2020/%E5%8E%86%E7%BB%8F1232%E5%A4%A9-%E9%98%BF%E9%87%8C%E6%AD%A3%E5%BC%8F%E5%8F%91%E5%B8%83java%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C-%E6%B3%B0%E5%B1%B1%E7%89%88/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E5%8E%86%E7%BB%8F1232%E5%A4%A9-%E9%98%BF%E9%87%8C%E6%AD%A3%E5%BC%8F%E5%8F%91%E5%B8%83java%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C-%E6%B3%B0%E5%B1%B1%E7%89%88/</guid>
      <description>&lt;p&gt;阿里巴巴的Java开发规范系列一直被大多数Java程序员认可并遵循. 这不, 在今天早上8:00, 阿里巴巴再次发布了新版本《Java开发手册泰山版》.&lt;/p&gt;&#xA;&lt;p&gt;先来看一下封面:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E6%B3%B0%E5%B1%B1%E7%89%88%E5%B0%81%E9%9D%A2.png&#34; alt=&#34;历经1232天! 阿里正式发布《Java开发手册 泰山版》仍然免费！(附正版下载)&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;有种武林的感觉~&lt;/p&gt;&#xA;&lt;p&gt;我们先来看看阿里巴巴开发规范的大版本历史(数据来自github/p3c):&lt;/p&gt;&#xA;&lt;p&gt;我们先来看看阿里巴巴开发规范的大版本历史:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;版本号&lt;/th&gt;&#xA;          &lt;th&gt;版本名&lt;/th&gt;&#xA;          &lt;th&gt;更新日期&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;--&lt;/td&gt;&#xA;          &lt;td&gt;试读版&lt;/td&gt;&#xA;          &lt;td&gt;2016.12.07&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1.0.0&lt;/td&gt;&#xA;          &lt;td&gt;正式版&lt;/td&gt;&#xA;          &lt;td&gt;2017.02.09&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1.2.0&lt;/td&gt;&#xA;          &lt;td&gt;完美版&lt;/td&gt;&#xA;          &lt;td&gt;2017.05.20&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1.3.0&lt;/td&gt;&#xA;          &lt;td&gt;终极版&lt;/td&gt;&#xA;          &lt;td&gt;2017.09.25&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1.3.1&lt;/td&gt;&#xA;          &lt;td&gt;纪念版&lt;/td&gt;&#xA;          &lt;td&gt;2017.11.30&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1.4.0&lt;/td&gt;&#xA;          &lt;td&gt;详尽版&lt;/td&gt;&#xA;          &lt;td&gt;2018.05.20&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1.5.0&lt;/td&gt;&#xA;          &lt;td&gt;华山版&lt;/td&gt;&#xA;          &lt;td&gt;2019.06.19&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1.6.0&lt;/td&gt;&#xA;          &lt;td&gt;泰山版&lt;/td&gt;&#xA;          &lt;td&gt;2020.04.22&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;个人认为, 还是华山版的封面更酷一点😏😏:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E5%8D%8E%E5%B1%B1%E7%89%88%E5%B0%81%E9%9D%A2.png&#34; alt=&#34;历经1232天! 阿里正式发布《Java开发手册 泰山版》仍然免费！(附正版下载)&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;老规矩, 再次把文章目录放上来, 让各位瞧一下:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E6%B3%B0%E5%B1%B1%E7%89%88%E7%9B%AE%E5%BD%95.png&#34; alt=&#34;历经1232天! 阿里正式发布《Java开发手册 泰山版》仍然免费！(附正版下载)&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;依然是熟悉的代码规范、异常处理、单元测试、安全规约、Mysql、工程结构以及设计规范.&lt;/p&gt;&#xA;&lt;p&gt;那么, 请大家自行拿走资源, 看看最新的泰山版能带给我们怎样的体验吧!&lt;/p&gt;&#xA;&lt;p&gt;关注&amp;quot;&lt;strong&gt;阿航的技术小站&lt;/strong&gt;&amp;quot;, 回复&amp;quot;&lt;strong&gt;Java开发手册&lt;/strong&gt;&amp;ldquo;立即下载!&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E5%85%AC%E4%BC%97%E5%8F%B7-%E4%BA%8C%E7%BB%B4%E7%A0%812.png&#34; alt=&#34;历经1232天! 阿里正式发布《Java开发手册 泰山版》仍然免费！(附正版下载)&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>我的帐户</title>
      <link>http://localhost:1313/posts/page/2020/%E6%88%91%E7%9A%84%E5%B8%90%E6%88%B7/</link>
      <pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2020/%E6%88%91%E7%9A%84%E5%B8%90%E6%88%B7/</guid>
      <description>&lt;p&gt;[user_registration_my_account]&lt;/p&gt;</description>
    </item>
    <item>
      <title>注册</title>
      <link>http://localhost:1313/posts/page/2020/%E6%B3%A8%E5%86%8C/</link>
      <pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2020/%E6%B3%A8%E5%86%8C/</guid>
      <description>&lt;p&gt;[user_registration_form id=&amp;ldquo;893&amp;rdquo;]&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter 清理编译缓存</title>
      <link>http://localhost:1313/posts/post/2020/flutter-%E6%B8%85%E7%90%86%E7%BC%96%E8%AF%91%E7%BC%93%E5%AD%98/</link>
      <pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-%E6%B8%85%E7%90%86%E7%BC%96%E8%AF%91%E7%BC%93%E5%AD%98/</guid>
      <description>&lt;p&gt;在使用Flutter进行开发时, 经常会产生很多的编译缓存文件, 比如:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/01-2.png&#34; alt=&#34;Flutter 清理编译缓存&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这样可以加快下次的编译速度. 但有时会出现一些我们神奇的报错, 很有可能是缓存不兼容所造成的! 有时出现的无解bug, 重启一下IDE或模拟器, 清理一下缓存就会被解决&amp;hellip; 别问, 问就是阿航踩过好几次坑😢😢😢😢&lt;/p&gt;&#xA;&lt;p&gt;这一篇就会讲如何清理flutter的编译缓存. (不是APP的数据缓存, 别弄混!)&lt;/p&gt;&#xA;&lt;h2 id=&#34;方法一-ide自带清理按钮&#34;&gt;方法一: IDE自带清理按钮&lt;/h2&gt;&#xA;&lt;p&gt;这里拿官方推荐的&lt;code&gt;Android Studio&lt;/code&gt;举例:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/02-2.png&#34; alt=&#34;Flutter 清理编译缓存&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;方法二-使用命令行清理&#34;&gt;方法二: 使用命令行清理&lt;/h2&gt;&#xA;&lt;p&gt;使用终端(cmd)进入项目目录.&lt;/p&gt;&#xA;&lt;p&gt;输入清理命令:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;flutter clean&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;清理完成&#34;&gt;清理完成&lt;/h2&gt;&#xA;&lt;p&gt;清理完成后, 可以看到之前的&lt;code&gt;.dart_tool&lt;/code&gt;以及&lt;code&gt;build&lt;/code&gt;目录被清理干净, 下次编译会从0开始. 也可能顺便解决你的一些未知bug😜&lt;/p&gt;&#xA;&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;&#xA;&lt;p&gt;本篇文章来自&lt;a href=&#34;https://blog.bugcatt.com&#34; target=&#34;_blank&#34;&gt;阿航的技术小站&lt;/a&gt;&#xA;.&lt;/p&gt;&#xA;&lt;p&gt;对文章有任何问题, 欢迎在下方评论区进行讨论. 阿航会尽力回复.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Links</title>
      <link>http://localhost:1313/posts/page/2020/links/</link>
      <pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2020/links/</guid>
      <description>&lt;h2 id=&#34;友情链接&#34;&gt;友情链接&lt;/h2&gt;&#xA;&lt;p&gt;等你交换!&lt;/p&gt;&#xA;&lt;h2 id=&#34;推荐网站&#34;&gt;推荐网站&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;素材资源&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.pexels.com/zh-cn/&#34; target=&#34;_blank&#34;&gt;Pexels&lt;/a&gt;&#xA; - 完全免费使用、无版权的图片素材网站&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.canva.cn&#34; target=&#34;_blank&#34;&gt;Canva&lt;/a&gt;&#xA; - 免费在线设计logo&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;行业资讯&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.tiobe.com/tiobe-index/&#34; target=&#34;_blank&#34;&gt;TIOBE&lt;/a&gt;&#xA; - 编程语言排行榜&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;其他&#34;&gt;其他&lt;/h2&gt;&#xA;&lt;p&gt;若需要在此展示你的网站, 欢迎在下方留言. 高质量的外链可以更好的宣传自己的网站. 回复格式:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;网站名称：阿航的技术小站&lt;/li&gt;&#xA;&lt;li&gt;网站链接：https://www.bugcatt.com&lt;/li&gt;&#xA;&lt;li&gt;网站描述：感受开源之美, 品味幸福代码人生. 一个全栈开发的自我修养.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Flutter 国际化: 多语言处理(Easy localization)</title>
      <link>http://localhost:1313/posts/post/2020/flutter-%E5%9B%BD%E9%99%85%E5%8C%96-%E5%A4%9A%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86easy-localization/</link>
      <pubDate>Wed, 22 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-%E5%9B%BD%E9%99%85%E5%8C%96-%E5%A4%9A%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86easy-localization/</guid>
      <description>&lt;p&gt;语言不互通是困扰了人类几千年的大难题🤐. 许多国外优秀的文学作品、 APP因为没有进行多国语言的处理, 导致发展缓慢甚至停滞. 虽然现在的各大翻译软件已经非常强大了. 但是想象一下: 一个用户一边拿着翻译机一边使用某个软件. 这样恐怕会逼疯用户, 可能会很快的放弃😭😭.&lt;/p&gt;&#xA;&lt;p&gt;如果你的APP有相当一部分用户是来自全球各地, 那么对APP的国际化就是刚需💪.&lt;/p&gt;&#xA;&lt;p&gt;对APP的国际化可以直线提升外国友人用户体验, 顺便会提高你的APP的&amp;quot;逼格&amp;quot;, 用最简单的方式给用户一种&amp;quot;你们的APP很大很强&amp;quot;的感觉😏😏😏.&lt;/p&gt;&#xA;&lt;h2 id=&#34;最终效果&#34;&gt;最终效果&lt;/h2&gt;&#xA;&lt;p&gt;老规矩, 有图有真相. 先来看看我们最终会实现的效果:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/09-2.gif&#34; alt=&#34;Flutter 国际化: 多语言处理(Easy localization)&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;需求&#34;&gt;需求&lt;/h2&gt;&#xA;&lt;p&gt;在做一个事情之前, 我们先来简单的规划一下, 我们的目标是什么, 我们要怎么做:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;提供多种语言处理, 对每部分文本进行单独的翻译.&lt;/li&gt;&#xA;&lt;li&gt;用户可以随时切换语言&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;开始&#34;&gt;开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;第一步-创建flutter-app&#34;&gt;第一步: 创建Flutter APP&lt;/h3&gt;&#xA;&lt;p&gt;这一步不再赘述, 相当基础的东西啦!&lt;/p&gt;&#xA;&lt;h3 id=&#34;第二步-清理项目&#34;&gt;第二步: 清理项目&lt;/h3&gt;&#xA;&lt;h4 id=&#34;删除测试目录&#34;&gt;删除测试目录&lt;/h4&gt;&#xA;&lt;p&gt;删除&lt;code&gt;./lib/test&lt;/code&gt;目录, 因为我们暂时用不上.&lt;/p&gt;&#xA;&lt;h4 id=&#34;清理maindart&#34;&gt;清理main.dart&lt;/h4&gt;&#xA;&lt;p&gt;因为新的Flutter项目中的main会给我们很多用不上的代码, 所以进行替换&lt;code&gt;./lib/main.dart&lt;/code&gt;为:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import &amp;#39;package:flutter/material.dart&amp;#39;;&#xA;&#xA;void main() =&amp;gt; runApp(MyApp());&#xA;&#xA;class MyApp extends StatelessWidget {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return MaterialApp(&#xA;      title: &amp;#39;Flutter 国际化: 多语言处理&amp;#39;,&#xA;      theme: ThemeData(&#xA;        primarySwatch: Colors.blue,&#xA;      ),&#xA;      home: MyHomePage(title: &amp;#39;Hi, 国际化!&amp;#39;),&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;class MyHomePage extends StatefulWidget {&#xA;  MyHomePage({Key key, this.title}) : super(key: key);&#xA;  final String title;&#xA;&#xA;  @override&#xA;  _MyHomePageState createState() =&amp;gt; _MyHomePageState();&#xA;}&#xA;&#xA;class _MyHomePageState extends State {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      appBar: AppBar(&#xA;        title: Text(widget.title),&#xA;      ),&#xA;      body: Center(&#xA;        child: Column(&#xA;          mainAxisAlignment: MainAxisAlignment.center,&#xA;          children: [&#xA;            Text(&#xA;              &amp;#39;你好!&amp;#39;,&#xA;            ),&#xA;          ],&#xA;        ),&#xA;      ),&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;🟢 运行项目, 应该如图所示:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter 游戏开发(flame) 05 收尾和打包(5/5)</title>
      <link>http://localhost:1313/posts/post/2020/flutter-%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91flame-05-%E6%94%B6%E5%B0%BE%E5%92%8C%E6%89%93%E5%8C%85/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91flame-05-%E6%94%B6%E5%B0%BE%E5%92%8C%E6%89%93%E5%8C%85/</guid>
      <description>&lt;p&gt;完成一个项目是世界上最爽的感觉之一. 你呕心沥血的做某件事, 最终想法变成了现实.&lt;/p&gt;&#xA;&lt;p&gt;最后, 欢迎来到本系列的终章. 当然, 只有你一步一步跟随阿航的教程, 终章才有意义.&lt;/p&gt;&#xA;&lt;p&gt;如果你还没有看过之前的章节, 还请你循序渐进, &amp;ldquo;一章一个脚印&amp;rdquo;!&lt;/p&gt;&#xA;&lt;p&gt;下面是我们本系列教程的文章目录:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bugcatt.com/archives/279&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) Flame介绍&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bugcatt.com/archives/292&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) 01 开发2D休闲游戏：消灭小飞蝇(1/5)&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bugcatt.com/archives/560&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) 02 图形和动画(2/5)&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bugcatt.com/archives/562&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) 03 界面和弹窗(3/5)&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bugcatt.com/archives/564&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) 04 分数, 存档和音效(4/5)&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Flutter 游戏开发(flame) 05 收尾和打包(5/5) 本章&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;本系列教程之前的&lt;strong&gt;全部要求&lt;/strong&gt;👈&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;更多的资源包&lt;/strong&gt; – 本教程提供了资源包, 但你也可以使用自己的. 推荐资源网站&lt;a href=&#34;https://opengameart.org/&#34; target=&#34;_blank&#34;&gt;Open Game Art&lt;/a&gt;&#xA;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;我们将使用与前一部分相同的&lt;strong&gt;编码规范&lt;/strong&gt;👩‍🏫&lt;/p&gt;&#xA;&lt;h2 id=&#34;最终的资源包&#34;&gt;最终的资源包&lt;/h2&gt;&#xA;&lt;p&gt;这个最后的资源仅有一个图像, 但是它有5种不同的尺寸. 当游戏安装在设备上时, 图像将作为玩家APP目录的启动图标.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://jap.alekhin.io/wp-content/uploads/2019/04/resource-pack-part-5.zip&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;images/01-1.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://jap.alekhin.io/wp-content/uploads/2019/04/resource-pack-part-5.zip&#34; target=&#34;_blank&#34;&gt;点击图片或者此链接下载资源包!&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;🔴 &lt;strong&gt;注意&lt;/strong&gt;: 如果你遵循本教程, 则可以使用上述资源包. 本资源包是&lt;a href=&#34;https://github.com/japalekhin/langaw&#34; target=&#34;_blank&#34;&gt;Github上Langaw(原作者)&lt;/a&gt;&#xA;项目的一部分, 该项目获得&lt;code&gt;CC-BY-NC-ND&lt;/code&gt;许可证的许可.&lt;/p&gt;&#xA;&lt;p&gt;这意味着您可以共享、复制或者重新分发资源.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;你必须在感谢中提到, 提供许可证的链接, 并标明你是否进行了更改.&lt;/li&gt;&#xA;&lt;li&gt;你不得将资源用于商业目的.&lt;/li&gt;&#xA;&lt;li&gt;如果混合, 转换或者构建资源, 则不能分发修改后的资源.&lt;/li&gt;&#xA;&lt;li&gt;你不得应用法律条款或技术措施, 在法律上限制他人做许可证允许的任何事情.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/2.0/legalcode&#34; target=&#34;_blank&#34;&gt;点击此处了解有关 CC-BY-NC-ND 许可证的更多信息&lt;/a&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter 游戏开发(flame) 01 开发2D休闲游戏：消灭小飞蝇(1/5)</title>
      <link>http://localhost:1313/posts/post/2020/flutter-%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91flame-01-%E5%BC%80%E5%8F%912d%E4%BC%91%E9%97%B2%E6%B8%B8%E6%88%8F%E6%B6%88%E7%81%AD%E5%B0%8F%E9%A3%9E%E8%9D%871-5/</link>
      <pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91flame-01-%E5%BC%80%E5%8F%912d%E4%BC%91%E9%97%B2%E6%B8%B8%E6%88%8F%E6%B6%88%E7%81%AD%E5%B0%8F%E9%A3%9E%E8%9D%871-5/</guid>
      <description>&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;&#xA;&lt;p&gt;曾想过开发一款自己的电子游戏吗? 来对地方了. 本系列教程就是教你如何开发一个属于自己的2D休闲游戏.&lt;/p&gt;&#xA;&lt;p&gt;本教程是&lt;a href=&#34;https://blog.bugcatt.com/archives/279&#34; target=&#34;_blank&#34;&gt;第一章&lt;/a&gt;&#xA;的延续, 是针对任何水平的指南. 在这一章我们将会做一个&amp;quot;打鸟&amp;quot;类型的游戏.&lt;/p&gt;&#xA;&lt;p&gt;这个游戏起名为&amp;quot;&lt;strong&gt;Langaw&lt;/strong&gt;&amp;quot;, 翻译过来就是&amp;quot;小飞蝇&amp;quot;. 玩家的任务就是在小飞蝇到达垃圾堆前尽可能的多消灭小飞蝇(阿航在这里不得不吐槽下原作者, 我们为啥要保护垃圾啊真是的😒).&lt;/p&gt;&#xA;&lt;p&gt;玩家只需要在屏幕上简单的点击就可实现击杀的效果(别用榔头砸手机🤣).这一章中, 我们暂时不会渲染图片, 所以暂时将小飞蝇展示为绿色方块, 当击中小飞蝇后, 变为红色方块并坠落至屏幕底部.&lt;/p&gt;&#xA;&lt;p&gt;你可以在文章底部查看效果视频.&lt;/p&gt;&#xA;&lt;p&gt;下面是我们本系列教程的文章目录:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bugcatt.com/archives/560&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) Flame介绍&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Flutter 游戏开发(flame) 01 开发2D休闲游戏：消灭小飞蝇(1/5) 本章&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bugcatt.com/archives/560&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) 02 图形和动画(2/5)&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bugcatt.com/archives/562&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) 03 界面和弹窗(3/5)&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bugcatt.com/archives/564&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) 04 分数, 存档和音效(4/5)&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bugcatt.com/archives/731&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) 05 收尾和打包(5/5)&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;p&gt;如果你完整的学习了&lt;a href=&#34;https://blog.bugcatt.com/archives/279&#34; target=&#34;_blank&#34;&gt;第一章&lt;/a&gt;&#xA;, 那么你应该已经准备好进行开发了🤩.&lt;/p&gt;&#xA;&lt;p&gt;以防万一, 在这里重复一下:&lt;/p&gt;&#xA;&lt;p&gt;本文将假设您已是一名有一定经验的开发人员, 且拥有了”程序员思维”. 如果你是小白, 没关系! 本篇教程非常入门. 只要兴趣足够, 你也将成为一名”游戏开发者”✌✌.&lt;/p&gt;&#xA;&lt;p&gt;你也需要一个配置足够的电脑, 可以运行IDE、编译并运行Android模拟器. 如果你的电脑配置不够高, 你也可以直接连接Android手机, 在真机上运行和调试.&lt;/p&gt;&#xA;&lt;p&gt;Flutter可以同时构建Android和IOS APP. 本文将围绕Android进行开发. 开发完成后, 你可以运行不同的build, 使你也可以在IOS上玩游戏.&lt;/p&gt;&#xA;&lt;p&gt;要顺利阅读本文, 假定您已经具备以下条件👇:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter 游戏开发(flame) 02 图形和动画(2/5)</title>
      <link>http://localhost:1313/posts/post/2020/flutter-%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91flame-02-%E5%9B%BE%E5%BD%A2%E5%92%8C%E5%8A%A8%E7%94%BB2-5/</link>
      <pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91flame-02-%E5%9B%BE%E5%BD%A2%E5%92%8C%E5%8A%A8%E7%94%BB2-5/</guid>
      <description>&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;&#xA;&lt;p&gt;在本系列教程的这一章, 我们将会把重心放在图形和动画上. 我们在上一章&lt;a href=&#34;https://www.bugcatt.com/archives/292&#34; target=&#34;_blank&#34;&gt;《开发2D休闲游戏：消灭小飞蝇》&lt;/a&gt;&#xA;中创建了一款拥有交互的休闲手游.&lt;/p&gt;&#xA;&lt;p&gt;游戏的核心不变, 但是我们需要为其增加更多的位移和更好的图像.&lt;/p&gt;&#xA;&lt;p&gt;下面是我们本系列教程的文章目录:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.bugcatt.com/archives/279&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) F&lt;/a&gt;&#xA;&lt;a href=&#34;https://www.bugcatt.com/archives/279&#34; target=&#34;_blank&#34;&gt;l&lt;/a&gt;&#xA;&lt;a href=&#34;https://blog.bugcatt.com/archives/279&#34; target=&#34;_blank&#34;&gt;ame介绍&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bugcatt.com/archives/292&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) 01 开发2D休闲游戏：消灭小飞蝇(1/5)&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Flutter 游戏开发(flame) 02 图形和动画(2/5) 本章&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bugcatt.com/archives/562&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) 03 界面和弹窗(3/5)&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bugcatt.com/archives/564&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) 04 分数, 存档和音效(4/5)&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bugcatt.com/archives/731&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) 05 收尾和打包(5/5)&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;本系列教程&lt;a href=&#34;https://blog.bugcatt.com/archives/292&#34; target=&#34;_blank&#34;&gt;第一部分&lt;/a&gt;&#xA;的&lt;strong&gt;全部要求&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;图像资源文件&lt;/strong&gt;- 图像资源可在网上的游戏资源网站找到(比如&lt;a href=&#34;https://opengameart.org/&#34; target=&#34;_blank&#34;&gt;Open Game Art&lt;/a&gt;&#xA;), 但是要确保感谢原作者.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;代码的规则和此前的章节一致.&lt;/p&gt;&#xA;&lt;h2 id=&#34;图像资源&#34;&gt;图像资源&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/011.jpg&#34; alt=&#34;Flutter 游戏开发(flame) 02 图形和动画(2/5)&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;正如你在上一章中看到的上图, 我们实际上已经为小飞蝇准备好了图像资源. 这是一张&lt;a href=&#34;https://opengameart.org/content/green-fly-flying-enemy-game-character&#34; target=&#34;_blank&#34;&gt;来自于Open Game Art的小飞蝇图片&lt;/a&gt;&#xA;. 它被授权为&lt;code&gt;CC0&lt;/code&gt;意思是可用于公共域, 也就是随便用.&lt;/p&gt;&#xA;&lt;p&gt;但是我们不会用上面的那个, 而是用这些:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/01.png&#34; alt=&#34;Flutter 游戏开发(flame) 02 图形和动画(2/5)&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://jap.alekhin.io/wp-content/uploads/2019/03/resource-pack-part-2.zip&#34; target=&#34;_blank&#34;&gt;点击下载&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;🔴 &lt;strong&gt;注意&lt;/strong&gt;: 如果你遵循本教程, 则可以使用上述资源包. 本资源包是&lt;a href=&#34;https://github.com/japalekhin/langaw&#34; target=&#34;_blank&#34;&gt;Github上Langaw(原作者)&lt;/a&gt;&#xA;项目的一部分, 该项目获得&lt;code&gt;CC-BY-NC-ND&lt;/code&gt;许可证的许可.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter 游戏开发(flame) 03 界面和弹窗(3/5)</title>
      <link>http://localhost:1313/posts/post/2020/flutter-%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91flame-03-%E7%95%8C%E9%9D%A2%E5%92%8C%E5%BC%B9%E7%AA%973-5/</link>
      <pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91flame-03-%E7%95%8C%E9%9D%A2%E5%92%8C%E5%BC%B9%E7%AA%973-5/</guid>
      <description>&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;&#xA;&lt;p&gt;我们在这一章将为游戏编写不同的屏幕(界面)和对话框.&lt;/p&gt;&#xA;&lt;p&gt;下面是我们本系列教程的文章目录:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bugcatt.com/archives/279&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) Flame介绍&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bugcatt.com/archives/292&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) 01 开发2D休闲游戏：消灭小飞蝇(1/5)&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://bugcatt.com/archives/560&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) 02 图形和动画(2/5)&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Flutter 游戏开发(flame) 03 界面和弹窗(3/5) 本章&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://bugcatt.com/archives/564&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) 04 分数, 存档和音效(4/5)&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://bugcatt.com/archives/731&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) 05 收尾和打包(5/5)&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;本系列教程之前的&lt;strong&gt;全部要求&lt;/strong&gt;👈&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;更多的资源包&lt;/strong&gt; - 本教程提供了资源包, 但你也可以使用自己的. 推荐资源网站&lt;a href=&#34;https://opengameart.org/&#34; target=&#34;_blank&#34;&gt;Open Game Art&lt;/a&gt;&#xA;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;我们将使用与前一部分相同的&lt;strong&gt;编码规范&lt;/strong&gt;👩‍🏫&lt;/p&gt;&#xA;&lt;p&gt;如果你还没有阅读以前的部分, 你最好回顾下! 从&lt;a href=&#34;https://blog.bugcatt.com/archives/279&#34; target=&#34;_blank&#34;&gt;第一章&lt;/a&gt;&#xA;开始.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;👉在&lt;a href=&#34;https://github.com/HarrisonQi/flame-tutorial-langaw/tree/277749ae54484b45e0ac5be6020eef463f8e4536&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;&#xA;或&lt;a href=&#34;https://github.com/HarrisonQi/flame-tutorial-langaw/tree/277749ae54484b45e0ac5be6020eef463f8e4536&#34; target=&#34;_blank&#34;&gt;码云&lt;/a&gt;&#xA;上查看本章的代码.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;新资源包&#34;&gt;新资源包&lt;/h2&gt;&#xA;&lt;p&gt;我们将使用此资源包, 其中包含游戏所需的第二组图片资源.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/01.jpg&#34; alt=&#34;Flutter 游戏开发(flame) 03 界面和弹窗(3/5)&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://jap.alekhin.io/wp-content/uploads/2019/03/resource-pack-part-3.zip&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;点击下载资源包&lt;/strong&gt;&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;🔴 &lt;strong&gt;注意&lt;/strong&gt;: 如果你遵循本教程, 则可以使用上述资源包. 本资源包是&lt;a href=&#34;https://github.com/japalekhin/langaw&#34; target=&#34;_blank&#34;&gt;Github上Langaw(原作者)&lt;/a&gt;&#xA;项目的一部分, 该项目获得&lt;code&gt;CC-BY-NC-ND&lt;/code&gt;许可证的许可.&lt;/p&gt;&#xA;&lt;p&gt;这意味着您可以共享、复制或者重新分发资源.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;你必须在感谢中提到, 提供许可证的链接, 并标明你是否进行了更改.&lt;/li&gt;&#xA;&lt;li&gt;你不得将资源用于商业目的.&lt;/li&gt;&#xA;&lt;li&gt;如果混合, 转换或者构建资源, 则不能分发修改后的资源.&lt;/li&gt;&#xA;&lt;li&gt;你不得应用法律条款或技术措施, 在法律上限制他人做许可证允许的任何事情.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/2.0/legalcode&#34; target=&#34;_blank&#34;&gt;点击此处了解有关 CC-BY-NC-ND 许可证的更多信息&lt;/a&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter 游戏开发(flame) 04 分数, 存档和音效(4/5)</title>
      <link>http://localhost:1313/posts/post/2020/flutter-%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91flame-04/</link>
      <pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91flame-04/</guid>
      <description>&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;分数&lt;/strong&gt;和&lt;strong&gt;高分记录&lt;/strong&gt;是任何游戏中不可或缺的一部分. 有些游戏根据收集的金币数量计算得分, 有些基于杀敌数, 有些则基于存活时间.&lt;/p&gt;&#xA;&lt;p&gt;同样不能忽视&lt;strong&gt;音效&lt;/strong&gt;和&lt;strong&gt;BGM&lt;/strong&gt;(背景音乐). 加上它们, 游戏将会蜕变🦋.&lt;/p&gt;&#xA;&lt;p&gt;如果一个游戏无声, 它就是不完整的.&lt;/p&gt;&#xA;&lt;p&gt;欢迎来到Flutter+Flame系列的第四章. 如果你还没有读过之前的章节, 建议你先阅读一下哦!🤭&lt;/p&gt;&#xA;&lt;p&gt;🔴 注意: 本教程的背景音乐有些过时. 你可以先学本章教程, 之后再替换为&lt;a href=&#34;https://jap.alekhin.io/background-music-in-a-flame-game&#34; target=&#34;_blank&#34;&gt;这篇教程&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;下面是我们本系列教程的文章目录:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bugcatt.com/archives/279&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) Flame介绍&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bugcatt.com/archives/292&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) 01 开发2D休闲游戏：消灭小飞蝇(1/5)&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bugcatt.com/archives/560&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) 02 图形和动画(2/5)&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bugcatt.com/archives/562&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) 03 界面和弹窗(3/5)&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Flutter 游戏开发(flame) 04 分数, 存档和音效(4/5) 本章&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.bugcatt.com/archives/731&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) 05 收尾和打包(5/5)&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;本系列教程之前的&lt;strong&gt;全部要求&lt;/strong&gt;👈&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;更多的资源包&lt;/strong&gt; – 本教程提供了资源包, 但你也可以使用自己的. 推荐资源网站&lt;a href=&#34;https://opengameart.org/&#34; target=&#34;_blank&#34;&gt;Open Game Art&lt;/a&gt;&#xA;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;音效和音乐资源&lt;/strong&gt; - 这些也可以在游戏资源网站上找到, 比如&lt;a href=&#34;https://opengameart.org/&#34; target=&#34;_blank&#34;&gt;Open Game Art&lt;/a&gt;&#xA;. 还有专门的音频资源比如&lt;a href=&#34;https://www.bensound.com/&#34; target=&#34;_blank&#34;&gt;BenSound.com&lt;/a&gt;&#xA;. 同样, 你必须查看许可并在游戏中表示感谢.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;我们将使用与前一部分相同的&lt;strong&gt;编码规范&lt;/strong&gt;👩‍🏫&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;👉在&lt;a href=&#34;https://github.com/HarrisonQi/flame-tutorial-langaw/tree/e72da435c3100a1601e16e75efc62fbaea6b3fe6&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;&#xA;或&lt;a href=&#34;https://github.com/HarrisonQi/flame-tutorial-langaw/tree/e72da435c3100a1601e16e75efc62fbaea6b3fe6&#34; target=&#34;_blank&#34;&gt;码云&lt;/a&gt;&#xA;上查看本章全部代码&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;新的资源包&#34;&gt;新的资源包&lt;/h2&gt;&#xA;&lt;p&gt;这一部分中, 我们需要另一个资源包, 包含额外的图形、背景音乐和一些音效.&lt;/p&gt;</description>
    </item>
    <item>
      <title>联系表单 1</title>
      <link>http://localhost:1313/posts/wpcf7_contact_form/2020/%E8%81%94%E7%B3%BB%E8%A1%A8%E5%8D%95-1/</link>
      <pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/wpcf7_contact_form/2020/%E8%81%94%E7%B3%BB%E8%A1%A8%E5%8D%95-1/</guid>
      <description>&lt;p&gt;您的名字 (必填) [text* your-name]&lt;/p&gt;&#xA;&lt;p&gt;您的邮箱 (必填) [email* your-email]&lt;/p&gt;&#xA;&lt;p&gt;主题 [text your-subject]&lt;/p&gt;&#xA;&lt;p&gt;您的留言 [textarea your-message]&lt;/p&gt;&#xA;&lt;p&gt;[submit &amp;ldquo;发送&amp;rdquo;] 阿航的技术小站 &amp;ldquo;[your-subject]&amp;rdquo; 阿航的技术小站 发件人：[your-name] &amp;lt;[your-email]&amp;gt; 主题：[your-subject]&lt;/p&gt;&#xA;&lt;p&gt;消息正文： [your-message]&lt;/p&gt;&#xA;&lt;p&gt;-- 这封邮件来自联系表单阿航的技术小站 (&lt;a href=&#34;https://blog.bugcatt.com&#34; target=&#34;_blank&#34;&gt;https://blog.bugcatt.com&lt;/a&gt;&#xA;) &lt;a href=&#34;mailto:harrisonqi@foxmail.com&#34; target=&#34;_blank&#34;&gt;harrisonqi@foxmail.com&lt;/a&gt;&#xA; Reply-To: [your-email]&lt;/p&gt;&#xA;&lt;p&gt;0 0&lt;/p&gt;&#xA;&lt;p&gt;阿航的技术小站 &amp;ldquo;[your-subject]&amp;rdquo; 阿航的技术小站 消息正文： [your-message]&lt;/p&gt;&#xA;&lt;p&gt;-- 这封邮件来自联系表单阿航的技术小站 (&lt;a href=&#34;https://blog.bugcatt.com&#34; target=&#34;_blank&#34;&gt;https://blog.bugcatt.com&lt;/a&gt;&#xA;) [your-email] Reply-To: &lt;a href=&#34;mailto:harrisonqi@foxmail.com&#34; target=&#34;_blank&#34;&gt;harrisonqi@foxmail.com&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;0 0 谢谢。已发送您的信息。 发生错误，请稍后再试。 出现错误，请检查后重新尝试。 发生错误，请稍后再试。 您必须阅读并接受条款和条件，才能发送信息。 必填字段。 内容太长。 内容太短。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter 游戏开发(flame) 00 Flame介绍</title>
      <link>http://localhost:1313/posts/post/2020/flutter-%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91flame-01-%E5%88%9D%E8%AF%86flame/</link>
      <pubDate>Thu, 16 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91flame-01-%E5%88%9D%E8%AF%86flame/</guid>
      <description>&lt;p&gt;如果你对Flutter有一定的了解, 那么应该知道它可以同时转为Android、IOS APP. 并且会在后续的版本支持Web、Mac以及Windows设备.&lt;/p&gt;&#xA;&lt;p&gt;那么, 用Flutter开发游戏似乎是一件很棒的事情😝😝.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;我在《&lt;a href=&#34;https://www.bugcatt.com/archives/4&#34; target=&#34;_blank&#34;&gt;Flutter可以开发游戏啦! Flame游戏开发框架测评&lt;/a&gt;&#xA;》中简单的对Flutter的Flame框架进行了测评.&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;有些朋友希望进一步在Flutter上发展, 并且创建属于自己的游戏. 若你是这一类人, 那么本博客应该是你不错的选择. 本教程将会把重心放在概念上, 而不是立刻制作一个精美、可上线的游戏.&lt;/p&gt;&#xA;&lt;p&gt;如果对博客有任何问题, 欢迎在下方留言, 阿航会尽力、尽快回复🙂.&lt;/p&gt;&#xA;&lt;h2 id=&#34;开发环境&#34;&gt;开发环境&lt;/h2&gt;&#xA;&lt;p&gt;本博客的环境一览:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;环境&lt;/th&gt;&#xA;          &lt;th&gt;版本号&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Flutter&lt;/td&gt;&#xA;          &lt;td&gt;1.14.6 beta&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Dart&lt;/td&gt;&#xA;          &lt;td&gt;2.8.0-dev.5.0&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Android Studio&lt;/td&gt;&#xA;          &lt;td&gt;3.5.2&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;🔴注意: 检查你的环境和文中的差异, 以避免出现不兼容的情况&lt;/p&gt;&#xA;&lt;h2 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h2&gt;&#xA;&lt;p&gt;本文将假设您已是一名有一定经验的开发人员, 且拥有了&amp;quot;程序员思维&amp;quot;. 如果你是小白, 没关系! 本篇教程非常入门. 只要兴趣足够, 你也将成为一名&amp;quot;游戏开发者&amp;quot;.&lt;/p&gt;&#xA;&lt;p&gt;你也需要一个配置足够的电脑, 可以运行IDE、编译并运行Android模拟器. 如果你的电脑配置不够高, 你也可以直接连接Android手机, 在真机上运行和调试.&lt;/p&gt;&#xA;&lt;p&gt;Flutter可以同时构建Android和IOS APP. 本文将围绕Android进行开发. 开发完成后, 你可以运行不同的build, 使你也可以在IOS上玩游戏.&lt;/p&gt;&#xA;&lt;p&gt;要顺利阅读本文, 假定您已经具备以下条件:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;IDE (Android Studio 或者 Microsoft Visual Studio), 以及其所需的Flutter和dart插件&lt;/li&gt;&#xA;&lt;li&gt;Android SDK. 这是开发Android应用的必备条件.&lt;/li&gt;&#xA;&lt;li&gt;Flutter SDK. 本篇将使用Flutter以及Flame进行游戏开发. 请阅读&lt;a href=&#34;https://flutterchina.club/get-started/install/&#34; target=&#34;_blank&#34;&gt;Flutter官方文档&lt;/a&gt;&#xA;, 完成圈内的教程&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Flutter%E5%AE%98%E7%BD%91%E6%88%AA%E5%9B%BE-1024x399.png&#34; alt=&#34;Flutter 游戏开发(flame) 00 Flame介绍&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter可以开发游戏啦! Flame游戏开发框架测评</title>
      <link>http://localhost:1313/posts/post/2020/flutter%E5%8F%AF%E4%BB%A5%E5%BC%80%E5%8F%91%E6%B8%B8%E6%88%8F%E5%95%A6-flame%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6%E6%B5%8B%E8%AF%84/</link>
      <pubDate>Wed, 15 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter%E5%8F%AF%E4%BB%A5%E5%BC%80%E5%8F%91%E6%B8%B8%E6%88%8F%E5%95%A6-flame%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6%E6%B5%8B%E8%AF%84/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;images/photo-of-white-wall-1484759.png&#34; alt=&#34;Flutter可以开发游戏啦! Flame游戏开发框架测评&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Flutter作为近年来的新兴混合开发语言, 一直备受关注. 既然Flutter这么好用, 并且宣传渲染帧率可高达60fps.&lt;/p&gt;&#xA;&lt;p&gt;那我们是不是可以用它开发游戏呢?&lt;/p&gt;&#xA;&lt;p&gt;答案是肯定的, 某个Flutter大神制作了一款框架, 名为Flame.&lt;/p&gt;&#xA;&lt;p&gt;如果你没有代码基础, 想开发一款自己的游戏, 那么Flutter + Flame也许是比较好的选择.&lt;/p&gt;&#xA;&lt;p&gt;先来看一下使用Flutter + Flame做的几款游戏吧:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/RafaelBarbosatec/darkness_dungeon&#34; target=&#34;_blank&#34;&gt;DarknessDungeon&lt;/a&gt;&#xA; 地牢游戏&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/DarknessDungeon-3.gif&#34; alt=&#34;Flutter可以开发游戏啦! Flame游戏开发框架测评&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;4 in A Row 四子棋益智游戏&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/4-in-A-Row-2.gif&#34; alt=&#34;Flutter可以开发游戏啦! Flame游戏开发框架测评&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;嗯…看起来还不错&lt;/p&gt;&#xA;&lt;p&gt;阿航在之前的空闲时间也使用了该框架进行了游戏开发, 体验还不错.&lt;/p&gt;&#xA;&lt;p&gt;这个是游戏大体的框架结构:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E6%A1%86%E6%9E%B6%E5%9B%BE%E7%A4%BA-1024x399.png&#34; alt=&#34;Flutter可以开发游戏啦! Flame游戏开发框架测评&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;使用Flame开发游戏, 只需要先创建&lt;strong&gt;Game loop&lt;/strong&gt;(游戏循环/游戏场景), 维护好&lt;strong&gt;update&lt;/strong&gt;函数(计算各种数值)以及&lt;strong&gt;render&lt;/strong&gt;函数(渲染屏幕).&lt;/p&gt;&#xA;&lt;p&gt;在这里贴出一个Flutter开发与其他游戏开发引擎的对比:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Flutter + Flame&lt;/th&gt;&#xA;          &lt;th&gt;Unity、虚幻等主流开发引擎&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;适合独立开发&lt;/td&gt;&#xA;          &lt;td&gt;很适合&lt;/td&gt;&#xA;          &lt;td&gt;适合&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;需要掌握的技术&lt;/td&gt;&#xA;          &lt;td&gt;仅Flutter&lt;/td&gt;&#xA;          &lt;td&gt;开发语言+软件使用&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;学习难度&lt;/td&gt;&#xA;          &lt;td&gt;容易&lt;/td&gt;&#xA;          &lt;td&gt;中等甚至困难&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;开发难度&lt;/td&gt;&#xA;          &lt;td&gt;容易&lt;/td&gt;&#xA;          &lt;td&gt;中等甚至困难&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;国内文档支持&lt;/td&gt;&#xA;          &lt;td&gt;较少, 阿航的技术小站将会提供中文文档&lt;/td&gt;&#xA;          &lt;td&gt;丰富&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;3d支持&lt;/td&gt;&#xA;          &lt;td&gt;暂无&lt;/td&gt;&#xA;          &lt;td&gt;3d支持很好&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;开发大型游戏&lt;/td&gt;&#xA;          &lt;td&gt;适合&lt;/td&gt;&#xA;          &lt;td&gt;非常适合&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;开发小型游戏&lt;/td&gt;&#xA;          &lt;td&gt;非常适合&lt;/td&gt;&#xA;          &lt;td&gt;适合&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;我已经在博客里写了这个框架的教程以及实例教学！&lt;br&gt;&#xA;立即访问《&lt;a href=&#34;https://blog.bugcatt.com/archives/279&#34; target=&#34;_blank&#34;&gt;Flutter 游戏开发(flame) 01 初识Flame&lt;/a&gt;&#xA;》开始学习!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker 安装 MySQL</title>
      <link>http://localhost:1313/posts/post/2020/docker-%E5%AE%89%E8%A3%85-mysql/</link>
      <pubDate>Mon, 13 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/docker-%E5%AE%89%E8%A3%85-mysql/</guid>
      <description>&lt;p&gt;本文为 docker 安装 mysql 容器的完整详细教程.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;若图片展示异常, 请访问我的&lt;a href=&#34;https://blog.bugcatt.com/archives/267&#34; target=&#34;_blank&#34;&gt;官方博客&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;h2 id=&#34;准备工作&#34;&gt;准备工作&lt;/h2&gt;&#xA;&lt;h3 id=&#34;开发环境&#34;&gt;开发环境&lt;/h3&gt;&#xA;&lt;p&gt;本博客的环境一览:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;环境&lt;/th&gt;&#xA;          &lt;th&gt;版本号&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;docker&lt;/td&gt;&#xA;          &lt;td&gt;1.13.1&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;注意您的环境和文中的差异, 避免出现不兼容的情况哦!&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;h3 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h3&gt;&#xA;&lt;p&gt;要顺利阅读本文, 假定您已经掌握了以下知识:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;docker环境已正常安装&lt;/li&gt;&#xA;&lt;li&gt;掌握基本的终端命令&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;查询所有的mysql镜像&#34;&gt;查询所有的mysql镜像&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker search mysql&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;选择并拉取你想要的镜像这里拿官方的mysql8进行举例&#34;&gt;选择并拉取你想要的镜像(这里拿官方的mysql8进行举例)&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker pull mysql:8.0&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;查询已下载的mysql镜像&#34;&gt;查询已下载的MySQL镜像&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker images |grep mysql&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;使用镜像创建容器&#34;&gt;使用镜像创建容器&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker run -p 3306:3306 --name mymysql -v $PWD/conf:/etc/mysql/conf.d -v $PWD/logs:/logs -v $PWD/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:8.0&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;解析:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;-p 3306:3306&lt;/code&gt;&lt;/strong&gt;：将容器的 3306 端口映射到主机的 3306 端口。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;-v $PWD/conf:/etc/mysql/conf.d&lt;/code&gt;&lt;/strong&gt;：将主机当前目录下的 &lt;code&gt;conf/my.cnf&lt;/code&gt; 挂载到容器的&lt;code&gt;/etc/mysql/my.cnf&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;-v $PWD/logs:/logs&lt;/code&gt;&lt;/strong&gt;：将主机当前目录下的 logs 目录挂载到容器的 &lt;code&gt;/logs&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;-v $PWD/data:/var/lib/mysql&lt;/code&gt;&lt;/strong&gt; ：将主机当前目录下的&lt;code&gt;data&lt;/code&gt;目录挂载到容器的 &lt;code&gt;/var/lib/mysql&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;**&lt;code&gt;-e MYSQL_ROOT_PASSWORD=123456&lt;/code&gt;：**初始化 root 用户的密码。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;查看容器运行情况&#34;&gt;查看容器运行情况&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker ps&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;优雅关闭&#34;&gt;优雅关闭&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker stop [容器id]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;启动已停止的容器&#34;&gt;启动已停止的容器&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker start [容器id]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;重启容器&#34;&gt;重启容器&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker restart [容器id]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;大功告成&#34;&gt;大功告成&lt;/h2&gt;&#xA;&lt;p&gt;通过以上的一些步骤, 我们完成了Dokcer安装Mysql的目标, 是不是很简单?&lt;/p&gt;</description>
    </item>
    <item>
      <title>终于出书了, 竟然还免费! 闲鱼Flutter技术解析与实战大公开(附下载链接)</title>
      <link>http://localhost:1313/posts/post/2020/%E9%97%B2%E9%B1%BCflutter%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%AE%9E%E6%88%98%E5%A4%A7%E5%85%AC%E5%BC%80/</link>
      <pubDate>Sun, 12 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/%E9%97%B2%E9%B1%BCflutter%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%AE%9E%E6%88%98%E5%A4%A7%E5%85%AC%E5%BC%80/</guid>
      <description>&lt;p&gt;若图片资源无法加载, 请访问我的&lt;a href=&#34;https://blog.bugcatt.com/?p=243&#34; target=&#34;_blank&#34;&gt;官方博客&lt;/a&gt;&#xA;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E9%97%B2%E9%B1%BCbanner-657x285.jpg&#34; alt=&#34;终于出书了, 竟然还免费! 闲鱼Flutter技术解析与实战大公开(附下载链接)&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;众所周知, 阿里是国内Flutter的技术先驱团队. 阿里比较有名的开源项目有:&lt;/p&gt;&#xA;&lt;h2 id=&#34;flutter-go&#34;&gt;Flutter Go&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/flutter-go-logo%E6%B0%B4%E5%8D%B0-657x297.png&#34; alt=&#34;终于出书了, 竟然还免费! 闲鱼Flutter技术解析与实战大公开(附下载链接)&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;flutter 开发者帮助 APP，包含 flutter 常用 140+ 组件的demo 演示与中文文档. &lt;a href=&#34;https://flutter-go.pub/website/&#34; target=&#34;_blank&#34;&gt;官网&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;&lt;h2 id=&#34;fish-redux&#34;&gt;Fish Redux&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/fish-redux-logo%E6%B0%B4%E5%8D%B0-657x298.png&#34; alt=&#34;终于出书了, 竟然还免费! 闲鱼Flutter技术解析与实战大公开(附下载链接)&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Fish Redux 是一个基于 Redux 数据管理的组装式 flutter 应用框架， 它特别适用于构建中大型的复杂应用。&lt;/p&gt;&#xA;&lt;p&gt;这回, 阿里闲鱼技术又出书了! 而且, 完全免费😍! 那就是:&lt;/p&gt;&#xA;&lt;h2 id=&#34;flutter-技术解析与实战&#34;&gt;《Flutter 技术解析与实战》&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Flutter%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%AE%9E%E6%88%98%E7%94%B5%E5%AD%90%E4%B9%A6%E5%B0%81%E9%9D%A2%E6%B0%B4%E5%8D%B0-557x391.png&#34; alt=&#34;终于出书了, 竟然还免费! 闲鱼Flutter技术解析与实战大公开(附下载链接)&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;不得不说, 阿里的开源精神仍然是国内一流的.🤭🤭🤭&lt;/p&gt;&#xA;&lt;p&gt;为了节省各位的时间, 阿航在这里直接把书的目录放出来:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/Flutter%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%AE%9E%E6%88%98%E7%94%B5%E5%AD%90%E4%B9%A6%E7%9B%AE%E5%BD%95-650x914.png&#34; alt=&#34;终于出书了, 竟然还免费! 闲鱼Flutter技术解析与实战大公开(附下载链接)&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;看得出来, 书的内容丰富, 十分用心. 具体内容还需各位自行查阅.&lt;/p&gt;&#xA;&lt;h3 id=&#34;下载链接&#34;&gt;下载链接&lt;/h3&gt;&#xA;&lt;p&gt;微信关注&amp;quot;&lt;strong&gt;阿航的技术小站&lt;/strong&gt;&amp;quot;, 发送&amp;quot;&lt;strong&gt;flutter技术解析与实战&lt;/strong&gt;&amp;quot;, 即刻获取网盘下载链接!&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/%E5%85%AC%E4%BC%97%E5%8F%B7-%E6%A8%AA%E5%90%91%E4%BA%8C%E7%BB%B4%E7%A0%81.png&#34; alt=&#34;终于出书了, 竟然还免费! 闲鱼Flutter技术解析与实战大公开(附下载链接)&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;阿航的技术小站公众号&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter 踩坑 A package may not list itself as a dependency</title>
      <link>http://localhost:1313/posts/post/2020/flutter-a-package-may-not-list-itself-as-a-dependency/</link>
      <pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-a-package-may-not-list-itself-as-a-dependency/</guid>
      <description>&lt;p&gt;在使用 Flutter 开发APP时, 运行&lt;code&gt;flutter package get&lt;/code&gt;命令, 控制台报了 A package may not list itself as a dependency 的错误.&lt;/p&gt;&#xA;&lt;h2 id=&#34;问题展示&#34;&gt;问题展示&lt;/h2&gt;&#xA;&lt;p&gt;运行&lt;code&gt;flutter package get&lt;/code&gt;, 控制台报错如下:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;原因&#34;&gt;原因&lt;/h2&gt;&#xA;&lt;p&gt;检查你的Flutter项目, 是否与即将导入的第三方库重名.&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;h3 id=&#34;方案一-修改项目名-推荐&#34;&gt;方案一: 修改项目名 (推荐)&lt;/h3&gt;&#xA;&lt;p&gt;修改你的项目名称. 这种方法虽然会很麻烦, 但是毕竟人家的项目先上传的😅😅.&lt;/p&gt;&#xA;&lt;h3 id=&#34;方案二-寻找功能相似的第三方库不推荐&#34;&gt;方案二: 寻找功能相似的第三方库(不推荐)&lt;/h3&gt;&#xA;&lt;p&gt;寻找功能相似的第三方库(不推荐)&lt;/p&gt;&#xA;&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;&#xA;&lt;p&gt;对文章若有任何问题、异议以及改进建议, 欢迎在下方进行评论. 作者将尽快回复! 获取最新文章, 欢迎阅读&lt;a href=&#34;https://blog.bugcatt.com/?p=208&#34; target=&#34;_blank&#34;&gt;官方博客&lt;/a&gt;&#xA;.&lt;/p&gt;&#xA;&lt;p&gt;更多更好的教程/博客/资讯, 欢迎访问我的官网: &lt;a href=&#34;https://blog.bugcatt.com&#34; target=&#34;_blank&#34;&gt;阿航的技术小站&lt;/a&gt;&#xA;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nginx 踩坑 413 Request Entity Too Large</title>
      <link>http://localhost:1313/posts/post/2020/nginx-413-request-entity-too-large/</link>
      <pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/nginx-413-request-entity-too-large/</guid>
      <description>&lt;p&gt;在进行文件上传的操作时, Nginx 报错: 413 Request Entity Too Large&lt;/p&gt;&#xA;&lt;h2 id=&#34;问题展示&#34;&gt;问题展示&lt;/h2&gt;&#xA;&lt;p&gt;又是熟悉的踩坑环节😂! 看看今天阿航踩了啥坑吧:&lt;/p&gt;&#xA;&lt;p&gt;在尝试上传文件到服务器时, 碰到了大大的:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/nginx-413-595x154.png&#34; alt=&#34;Nginx 踩坑 413 Request Entity Too Large&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;原因&#34;&gt;原因&lt;/h2&gt;&#xA;&lt;p&gt;nginx的默认文件上传大小大于你上传文件的大小&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方案&#34;&gt;解决方案&lt;/h2&gt;&#xA;&lt;h3 id=&#34;找到nginx配置文件&#34;&gt;找到nginx配置文件&lt;/h3&gt;&#xA;&lt;p&gt;找到nginx的配置文件(nginx/conf/nginx.conf)&lt;/p&gt;&#xA;&lt;h3 id=&#34;修改server的location的配置&#34;&gt;修改&lt;code&gt;server&lt;/code&gt;的&lt;code&gt;location&lt;/code&gt;的配置&lt;/h3&gt;&#xA;&lt;p&gt;找到你要修改的server, 比如:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;server {&#xA;    listen 80;&#xA;    server_name adb.abc.com;&#xA;    location / {&#xA;        root   html;&#xA;        index  index.html index.htm;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在location块中添加一行配置:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;client_max_body_size  64m; # 改为你需要的大小!&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;修改后就变为了:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;server {&#xA;    listen 80;&#xA;    server_name adb.abc.com;&#xA;    location / {&#xA;        root   html;&#xA;        index  index.html index.htm;&#xA;        client_max_body_size  64m; # 改为你需要的大小!&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;保存并重启&#34;&gt;保存并重启&lt;/h3&gt;&#xA;&lt;p&gt;保存文件, 重启nginx(首个nginx替换为你安装的目录):&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter 数据存储 SharedPreferences</title>
      <link>http://localhost:1313/posts/post/2020/flutter-%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8-sharedpreferences/</link>
      <pubDate>Thu, 09 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8-sharedpreferences/</guid>
      <description>&lt;p&gt;我们在做APP开发时, 经常会涉及到用户的 数据存储(比如保存用户登录token、用户的某些偏好设置等). 开发过Android的朋友应该知道有 SharedPreferences. 在 Flutter 中, 同样为我们提供了十分相似的(甚至名字都一样)组件, 为我们提供数据存储的能力.&lt;/p&gt;&#xA;&lt;p&gt;本篇教程将用一个简单的小Demo, 让你完全掌握 数据存储之SharedPreferences 的用法.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;若图片展示异常, 请访问我的&lt;a href=&#34;https://blog.bugcatt.com/archives/165&#34; target=&#34;_blank&#34;&gt;官方博客&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;h2 id=&#34;效果&#34;&gt;效果&lt;/h2&gt;&#xA;&lt;p&gt;有图有真相, 我们先来看一下我们最终的效果:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/SharedPreferences%E6%9C%80%E7%BB%88%E6%95%88%E6%9E%9C.gif&#34; alt=&#34;Flutter 数据存储 SharedPreferences&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;SharedPreferences最终效果&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h2 id=&#34;仓库地址&#34;&gt;仓库地址&lt;/h2&gt;&#xA;&lt;p&gt;所有源码(含注释)均已上传至开源仓库:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/HarrisonQi/flutter-actual-combat-demo/tree/master/my_shared_preferences_demo&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://gitee.com/HarrisonQI/flutter-actual-combat-demo/tree/master/my_shared_preferences_demo&#34; target=&#34;_blank&#34;&gt;码云&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;准备工作&#34;&gt;准备工作&lt;/h2&gt;&#xA;&lt;h3 id=&#34;开发环境&#34;&gt;开发环境&lt;/h3&gt;&#xA;&lt;p&gt;本博客的环境一览:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;环境&lt;/th&gt;&#xA;          &lt;th&gt;版本号&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Flutter&lt;/td&gt;&#xA;          &lt;td&gt;1.14.6 beta&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Dart&lt;/td&gt;&#xA;          &lt;td&gt;2.8.0-dev.5.0&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Android Studio&lt;/td&gt;&#xA;          &lt;td&gt;3.5.2&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;注意您的环境和文中的差异, 避免出现不兼容的情况哦!&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;h3 id=&#34;需具备的条件&#34;&gt;需具备的条件&lt;/h3&gt;&#xA;&lt;p&gt;要顺利阅读本文, 假定您已经具备以下条件:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;一台电脑(能同时运行IDE、APP模拟器).&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Android Studio&lt;/code&gt; 或 &lt;code&gt;VSCode&lt;/code&gt;(或任何你喜欢的代码编辑器).&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Flutter&lt;/code&gt;开发环境.&lt;/li&gt;&#xA;&lt;li&gt;您掌握了&lt;code&gt;Flutter&lt;/code&gt;的开发基础(至少了解目录结构、&lt;code&gt;Dart&lt;/code&gt;语言基本知识).&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;创建flutter项目&#34;&gt;创建Flutter项目&lt;/h3&gt;&#xA;&lt;p&gt;创建一个新的Flutter项目, 命名为&lt;code&gt;my_shared_preferences_demo&lt;/code&gt;(您可以随意起名, 但是在下面也要替换名字为您自己的).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter 底部导航栏 / BottomNavigationBar</title>
      <link>http://localhost:1313/posts/post/2020/flutter-%E5%AE%9E%E6%88%98-%E5%BA%95%E9%83%A8%E5%AF%BC%E8%88%AA%E6%A0%8F-bottomnavigationbar/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-%E5%AE%9E%E6%88%98-%E5%BA%95%E9%83%A8%E5%AF%BC%E8%88%AA%E6%A0%8F-bottomnavigationbar/</guid>
      <description>&lt;p&gt;几乎99%的应用类APP都需要一个底部导航栏. 这篇教程为 &lt;strong&gt;Flutter&lt;/strong&gt; 语言中, 如何写一个主流的 &lt;strong&gt;底部导航栏&lt;/strong&gt; . 并使用 &lt;strong&gt;Flutter&lt;/strong&gt; 官方提供的 &lt;strong&gt;BottomNavigationBar&lt;/strong&gt; 组件. 几乎每一个APP都拥有一个底部导航栏, 所以这篇教程将会十分有用🤭&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;效果&#34;&gt;效果&lt;/h2&gt;&#xA;&lt;p&gt;有图有真相, 我们本次要实现 底部导航栏 的最终效果如下🙊:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/final-renderings.gif&#34; alt=&#34;Flutter 底部导航栏 / BottomNavigationBar&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;底部导航栏最终效果&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h2 id=&#34;仓库地址&#34;&gt;仓库地址&lt;/h2&gt;&#xA;&lt;p&gt;全部代码均已上传至开源仓库(含完整注释):&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/HarrisonQi/flutter-actual-combat-demo/tree/master/bottom_navigation&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://gitee.com/HarrisonQI/flutter-actual-combat-demo/tree/master/bottom_navigation&#34; target=&#34;_blank&#34;&gt;码云&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;用途&#34;&gt;用途&lt;/h2&gt;&#xA;&lt;p&gt;虽然如此普遍, 但我们还是要更直观的看下哪里需要用到底部导航栏, 如下图:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/demo.png&#34; alt=&#34;Flutter 底部导航栏 / BottomNavigationBar&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;用到底部导航栏的主流APP&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;可以得知, 最流行的、最主流的APP都需要导航栏&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter 指纹验证/人脸识别</title>
      <link>http://localhost:1313/posts/post/2020/flutter-%E6%8C%87%E7%BA%B9%E9%AA%8C%E8%AF%81-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/flutter-%E6%8C%87%E7%BA%B9%E9%AA%8C%E8%AF%81-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/</guid>
      <description>&lt;p&gt;指纹验证/指纹识别 以及 人脸识别 是我们在平常使用各种APP时常用的功能, 这篇教程将使用第三方库 local_auth 来实现 Flutter 中的指纹验证以及人脸识别.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;效果&#34;&gt;效果&lt;/h2&gt;&#xA;&lt;p&gt;有图有真相, 我们本次要实现的最终效果如下:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/rendering.gif&#34; alt=&#34;Flutter 指纹验证/人脸识别&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;指纹识别图片效果展示&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h2 id=&#34;仓库地址&#34;&gt;仓库地址&lt;/h2&gt;&#xA;&lt;p&gt;全部代码均已上传至开源仓库(含完整注释):&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/HarrisonQi/flutter-actual-combat-demo/tree/master/fingerprint_verification&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://gitee.com/HarrisonQI/flutter-actual-combat-demo/tree/master/fingerprint_verification&#34; target=&#34;_blank&#34;&gt;码云&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;用途&#34;&gt;用途&lt;/h2&gt;&#xA;&lt;p&gt;这个在支付相关功能中最常见了, 用于二次验证当前操作者是否为本人. 当然, 有时我们保护的不仅是现金.&lt;/p&gt;&#xA;&lt;h2 id=&#34;实战开始&#34;&gt;实战开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;导入第三方库-local_auth&#34;&gt;导入第三方库: local_auth&lt;/h3&gt;&#xA;&lt;p&gt;在&lt;code&gt;./lib/pubspec.yaml&lt;/code&gt;中导入:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dependencies:&#xA;  local_auth: ^0.6.1+3&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;修改mainactivity&#34;&gt;修改MainActivity&lt;/h3&gt;&#xA;&lt;p&gt;进入&lt;code&gt;./android/app/src/main/***/MainActivity.java&lt;/code&gt;或&lt;code&gt;MainActivity.kt&lt;/code&gt;,导入依赖:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import io.flutter.embedding.android.FlutterFragmentActivity;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;修改:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;class MainActivity: FlutterActivity() {&#xA;    override fun configureFlutterEngine(@NonNull flutterEngine: FlutterEngine) {&#xA;        GeneratedPluginRegistrant.registerWith(flutterEngine);&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;为:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;class MainActivity: FlutterFragmentActivity() {&#xA;    override fun configureFlutterEngine(@NonNull flutterEngine: FlutterEngine) {&#xA;        GeneratedPluginRegistrant.registerWith(flutterEngine);&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;这里主要是修改了&lt;code&gt;FlutterActivity&lt;/code&gt;为&lt;code&gt;FlutterFragmentActivity&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>世界，您好！</title>
      <link>http://localhost:1313/posts/post/2020/hello-world/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/post/2020/hello-world/</guid>
      <description>&lt;p&gt;你好, 我是阿航&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&#xA;import &amp;#39;package:flutter/material.dart&amp;#39;;&#xA;import &amp;#39;package:flutter/services.dart&amp;#39;;&#xA;&#xA;Future main() async {&#xA;  // set preferred orientations (landscape only)&#xA;  await SystemChrome.setPreferredOrientations([&#xA;    DeviceOrientation.landscapeLeft,&#xA;    DeviceOrientation.landscapeRight,&#xA;  ]);&#xA;&#xA;  // disable all UI overlays (show fullscreen)&#xA;  await SystemChrome.setEnabledSystemUIOverlays([]);&#xA;}&#xA;&#xA;// start app&#xA;runApp(&#xA;  Directionality(&#xA;    textDirection: TextDirection.ltr,&#xA;    child: Stack(&#xA;      children: [&#xA;        // placeholder for game&#xA;        Container(&#xA;          color: Color(0xff27ae60),&#xA;        ),&#xA;&#xA;        // joypad overlay&#xA;        Container(),&#xA;      ],&#xA;    ),&#xA;  ),&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>示例页面</title>
      <link>http://localhost:1313/posts/page/2020/sample-page/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2020/sample-page/</guid>
      <description>&lt;p&gt;这是示范页面。页面和博客文章不同，它的位置是固定的，通常会在站点导航栏显示。很多用户都创建一个“关于”页面，向访客介绍自己。例如：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;欢迎！我白天是个邮递员，晚上就是个有抱负的演员。这是我的网站。我住在天朝的帝都，有条叫做Jack的狗。&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;……或这个：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&gt;&#xA;    &lt;p&gt;XYZ Doohickey公司成立于1971年，自从建立以来，我们一直向社会贡献着优秀doohickies。我们的公司总部位于天朝魔都，有着超过两千名员工，对魔都政府税收有着巨大贡献。&lt;/p&gt;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;而您，作为一个WordPress用户，我们建议您访问&lt;a href=&#34;https://blog.bugcatt.com/wp-admin/&#34; target=&#34;_blank&#34;&gt;控制板&lt;/a&gt;&#xA;，删除本页面，然后添加您自己的页面。祝您使用愉快！&lt;/p&gt;</description>
    </item>
    <item>
      <title>隐私政策</title>
      <link>http://localhost:1313/posts/page/2020/privacy-policy/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2020/privacy-policy/</guid>
      <description>&lt;h2 id=&#34;我们是谁&#34;&gt;我们是谁&lt;/h2&gt;&#xA;&lt;p&gt;我们的站点地址是：https://blog.bugcatt.com。&lt;/p&gt;&#xA;&lt;h2 id=&#34;我们收集何种及为何收集个人数据&#34;&gt;我们收集何种及为何收集个人数据&lt;/h2&gt;&#xA;&lt;h3 id=&#34;评论&#34;&gt;评论&lt;/h3&gt;&#xA;&lt;p&gt;当访客留下评论时，我们会收集评论表单所显示的数据，和访客的IP地址及浏览器的user agent字符串来帮助检查垃圾评论。&lt;/p&gt;&#xA;&lt;p&gt;由您的电子邮件地址所生成的匿名化字符串（又称为哈希）可能会被提供给Gravatar服务确认您是否有使用该服务。Gravatar服务的隐私政策在此：https://automattic.com/privacy/。在您的评论获批准后，您的资料图片将在您的评论旁公开展示。&lt;/p&gt;&#xA;&lt;h3 id=&#34;媒体&#34;&gt;媒体&lt;/h3&gt;&#xA;&lt;p&gt;如果您向此网站上传图片，您应当避免上传那些有嵌入地理位置信息（EXIF GPS）的图片。此网站的访客将可以下载并提取此网站的图片中的位置信息。&lt;/p&gt;&#xA;&lt;h3 id=&#34;联系表单&#34;&gt;联系表单&lt;/h3&gt;&#xA;&lt;h3 id=&#34;cookies&#34;&gt;Cookies&lt;/h3&gt;&#xA;&lt;p&gt;如果您在我们的站点上留下评论，您可以选择用cookies保存您的姓名、电子邮件地址和网站。这是通过让您可以不用在评论时再次填写相关内容而向您提供方便。这些cookies会保留一年。&lt;/p&gt;&#xA;&lt;p&gt;如果您访问我们的登录页，我们会设置一个临时的cookie来确认您的浏览器是否接受cookies。此cookie不包含个人数据，且会在您关闭浏览器时被丢弃。&lt;/p&gt;&#xA;&lt;p&gt;当您登录时，我们也会设置多个cookies来保存您的登录信息及屏幕显示选项。登录cookies会保留两天，而屏幕显示选项cookies会保留一年。如果您选择了“记住我”，您的登录会保留两周。如果您注销，登录cookies将被移除。&lt;/p&gt;&#xA;&lt;p&gt;如果您编辑或发布文章，我们会在您的浏览器中保存一个额外的cookie。这个cookie不包含个人数据而只记录了您刚才编辑的文章的ID。这个小甜饼会保留一天。&lt;/p&gt;&#xA;&lt;h3 id=&#34;其他站点的嵌入内容&#34;&gt;其他站点的嵌入内容&lt;/h3&gt;&#xA;&lt;p&gt;此站点上的文章可能会包含嵌入的内容（如视频、图像、文章等）。来自其他站点的嵌入内容的行为和您直接访问这些其他站点没有区别。&lt;/p&gt;&#xA;&lt;p&gt;这些站点可能会收集关于您的数据、使用cookies、嵌入额外的第三方跟踪程序及监视您与这些嵌入内容的交互，包括在您有这些站点的账户并登录了这些站点时，跟踪您与嵌入内容的交互。&lt;/p&gt;&#xA;&lt;h3 id=&#34;统计&#34;&gt;统计&lt;/h3&gt;&#xA;&lt;h2 id=&#34;我们与谁共享您的信息&#34;&gt;我们与谁共享您的信息&lt;/h2&gt;&#xA;&lt;h2 id=&#34;我们保留多久您的信息&#34;&gt;我们保留多久您的信息&lt;/h2&gt;&#xA;&lt;p&gt;如果您留下评论，评论和其元数据将被无限期保存。我们这样做以便能识别并自动批准任何后续评论，而不用将这些后续评论加入待审队列。&lt;/p&gt;&#xA;&lt;p&gt;对于本网站的注册用户，我们也会保存用户在个人资料中提供的个人信息。所有用户可以在任何时候查看、编辑或删除他们的个人信息（除了不能变更用户名外）、站点管理员也可以查看及编辑那些信息。&lt;/p&gt;&#xA;&lt;h2 id=&#34;您对您的信息有什么权利&#34;&gt;您对您的信息有什么权利&lt;/h2&gt;&#xA;&lt;p&gt;如果您有此站点的账户，或曾经留下评论，您可以请求我们提供我们所拥有的您的个人数据的导出文件，这也包括了所有您提供给我们的数据。您也可以要求我们抹除所有关于您的个人数据。这不包括我们因管理、法规或安全需要而必须保留的数据。&lt;/p&gt;&#xA;&lt;h2 id=&#34;我们将您的信息发送到哪&#34;&gt;我们将您的信息发送到哪&lt;/h2&gt;&#xA;&lt;p&gt;访客评论可能会被自动垃圾评论监测服务检查。&lt;/p&gt;&#xA;&lt;h2 id=&#34;您的联系信息&#34;&gt;您的联系信息&lt;/h2&gt;&#xA;&lt;h2 id=&#34;其他信息&#34;&gt;其他信息&lt;/h2&gt;&#xA;&lt;h3 id=&#34;我们如何保护您的数据&#34;&gt;我们如何保护您的数据&lt;/h3&gt;&#xA;&lt;h3 id=&#34;我们有何种数据泄露处理流程&#34;&gt;我们有何种数据泄露处理流程&lt;/h3&gt;&#xA;&lt;h3 id=&#34;我们从哪些第三方接收数据&#34;&gt;我们从哪些第三方接收数据&lt;/h3&gt;&#xA;&lt;h3 id=&#34;我们通过用户数据进行何种自动决策及或归纳&#34;&gt;我们通过用户数据进行何种自动决策及/或归纳&lt;/h3&gt;&#xA;&lt;h3 id=&#34;行业监管披露要求&#34;&gt;行业监管披露要求&lt;/h3&gt;</description>
    </item>
    <item>
      <title>Accordions and Tabs</title>
      <link>http://localhost:1313/posts/page/2019/accordions-and-tabs/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2019/accordions-and-tabs/</guid>
      <description>&lt;h2 id=&#34;toggles&#34;&gt;Toggles&lt;/h2&gt;&#xA;&lt;p&gt;[epcl_toggle show=&amp;ldquo;opened&amp;rdquo; title=&amp;ldquo;1. A wonderful serenity has taken possession&amp;rdquo;]&lt;/p&gt;&#xA;&lt;p&gt;A wonderful serenity has taken possession of my entire soul, like these sweet mornings of spring which I enjoy with my whole heart. I am alone, and feel the charm of existence in this spot, which was created for the bliss of souls like mine. I am so happy, my dear friend, so absorbed in the exquisite sense of mere tranquil existence, that I neglect my talents.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Alert Messages</title>
      <link>http://localhost:1313/posts/page/2019/alert-messages/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2019/alert-messages/</guid>
      <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Curabitur quam augue, vehicula quis, tincidunt vel, varius vitae, nulla.&lt;/p&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;error&amp;rdquo;]A wonderful serenity has taken possession[/epcl_box]&lt;/p&gt;&#xA;&lt;p&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Curabitur quam augue, vehicula quis, tincidunt vel, varius vitae, nulla.&lt;/p&gt;&#xA;&lt;p&gt;[epcl_box type=&amp;ldquo;success&amp;rdquo;]A wonderful serenity has taken possession of my entire soul, like these sweet mornings of spring which[/epcl_box]&lt;/p&gt;&#xA;&lt;p&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Curabitur quam augue, vehicula quis, tincidunt vel, varius vitae, nulla.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Buttons</title>
      <link>http://localhost:1313/posts/page/2019/buttons/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2019/buttons/</guid>
      <description>&lt;h3 id=&#34;styles&#34;&gt;Styles&lt;/h3&gt;&#xA;&lt;p&gt;[epcl_button label=&amp;ldquo;Flat&amp;rdquo; url=&amp;quot;&amp;quot; type=&amp;ldquo;flat&amp;rdquo; size=&amp;ldquo;regular&amp;rdquo; color=&amp;ldquo;green&amp;rdquo; icon=&amp;quot;&amp;quot; target=&amp;quot;_self&amp;quot;] [epcl_button label=&amp;ldquo;Glow&amp;rdquo; url=&amp;quot;&amp;quot; type=&amp;ldquo;glow&amp;rdquo; size=&amp;ldquo;regular&amp;rdquo; color=&amp;ldquo;green&amp;rdquo; icon=&amp;quot;&amp;quot; target=&amp;quot;_self&amp;quot;] [epcl_button label=&amp;ldquo;Gradient&amp;rdquo; url=&amp;quot;&amp;quot; type=&amp;ldquo;gradient&amp;rdquo; size=&amp;ldquo;regular&amp;rdquo; color=&amp;ldquo;green&amp;rdquo; icon=&amp;quot;&amp;quot; target=&amp;quot;_self&amp;quot;] [epcl_button label=&amp;ldquo;Outline&amp;rdquo; url=&amp;quot;&amp;quot; type=&amp;ldquo;outline&amp;rdquo; size=&amp;ldquo;regular&amp;rdquo; color=&amp;ldquo;green&amp;rdquo; icon=&amp;quot;&amp;quot; target=&amp;quot;_self&amp;quot;]&lt;/p&gt;&#xA;&lt;h3 id=&#34;sizes&#34;&gt;Sizes&lt;/h3&gt;&#xA;&lt;p&gt;[epcl_button label=&amp;ldquo;Extra Small&amp;rdquo; url=&amp;quot;&amp;quot; type=&amp;ldquo;flat&amp;rdquo; size=&amp;ldquo;extra-small&amp;rdquo; color=&amp;ldquo;green&amp;rdquo; icon=&amp;quot;&amp;quot; target=&amp;quot;_self&amp;quot;] [epcl_button label=&amp;ldquo;Small&amp;rdquo; url=&amp;quot;&amp;quot; type=&amp;ldquo;flat&amp;rdquo; size=&amp;ldquo;small&amp;rdquo; color=&amp;ldquo;green&amp;rdquo; icon=&amp;quot;&amp;quot; target=&amp;quot;_self&amp;quot;] [epcl_button label=&amp;ldquo;Regular&amp;rdquo; url=&amp;quot;&amp;quot; type=&amp;ldquo;flat&amp;rdquo; size=&amp;ldquo;regular&amp;rdquo; color=&amp;ldquo;green&amp;rdquo; icon=&amp;quot;&amp;quot; target=&amp;quot;_self&amp;quot;] [epcl_button label=&amp;ldquo;Large&amp;rdquo; url=&amp;quot;&amp;quot; type=&amp;ldquo;flat&amp;rdquo; size=&amp;ldquo;large&amp;rdquo; color=&amp;ldquo;green&amp;rdquo; icon=&amp;quot;&amp;quot; target=&amp;quot;_self&amp;quot;] [epcl_button label=&amp;ldquo;Extra Large&amp;rdquo; url=&amp;quot;&amp;quot; type=&amp;ldquo;flat&amp;rdquo; size=&amp;ldquo;extra-large&amp;rdquo; color=&amp;ldquo;green&amp;rdquo; icon=&amp;quot;&amp;quot; target=&amp;quot;_self&amp;quot;] [epcl_button label=&amp;ldquo;Fluid&amp;rdquo; url=&amp;quot;&amp;quot; type=&amp;ldquo;flat&amp;rdquo; size=&amp;ldquo;fluid&amp;rdquo; color=&amp;ldquo;green&amp;rdquo; icon=&amp;quot;&amp;quot; target=&amp;quot;_self&amp;quot;]&lt;/p&gt;</description>
    </item>
    <item>
      <title>Columns</title>
      <link>http://localhost:1313/posts/page/2019/columns/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2019/columns/</guid>
      <description>&lt;p&gt;[epcl_columns]&lt;/p&gt;&#xA;&lt;p&gt;[epcl_col width=&amp;ldquo;50&amp;rdquo;]&lt;/p&gt;&#xA;&lt;h4 id=&#34;half-page-12&#34;&gt;Half Page 1/2&lt;/h4&gt;&#xA;&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas mollis a est suscipit malesuada. Cras dapibus nulla sed justo convallis, a dignissim nunc tincidunt. Nunc sit amet dictum eros. Nulla tincidunt vitae dui aliquam pretium. Suspendisse sit amet libero a nisl tempor ultrices. Integer quis nisi est&lt;/p&gt;&#xA;&lt;p&gt;[/epcl_col]&lt;/p&gt;&#xA;&lt;p&gt;[epcl_col width=&amp;ldquo;50&amp;rdquo;]&lt;/p&gt;&#xA;&lt;h4 id=&#34;half-page-12-1&#34;&gt;Half Page 1/2&lt;/h4&gt;&#xA;&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas mollis a est suscipit malesuada. Cras dapibus nulla sed justo convallis, a dignissim nunc tincidunt. Nunc sit amet dictum eros. Nulla tincidunt vitae dui aliquam pretium. Suspendisse sit amet libero a nisl tempor ultrices. Integer quis nisi est&lt;/p&gt;</description>
    </item>
    <item>
      <title>Contact</title>
      <link>http://localhost:1313/posts/page/2019/contact/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2019/contact/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;[contact-form-7 id=&amp;ldquo;19&amp;rdquo; title=&amp;ldquo;Contact form 1&amp;rdquo;]&lt;/p&gt;</description>
    </item>
    <item>
      <title>Contact form 1</title>
      <link>http://localhost:1313/posts/wpcf7_contact_form/2019/contact-form-1/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/wpcf7_contact_form/2019/contact-form-1/</guid>
      <description>&lt;p&gt;[text* your-name placeholder &amp;ldquo;Your Name *&amp;rdquo;]&lt;/p&gt;&#xA;&lt;p&gt;[email* your-email placeholder &amp;ldquo;Your Email *&amp;rdquo;]&lt;/p&gt;&#xA;&lt;p&gt;[text* your-subject placeholder &amp;ldquo;Your Subject&amp;rdquo;]&lt;/p&gt;&#xA;&lt;p&gt;[textarea your-message placeholder &amp;ldquo;Your Message&amp;rdquo;]&lt;/p&gt;&#xA;&lt;p&gt;[submit &amp;ldquo;Send Message&amp;rdquo;] 1 Breek &amp;ldquo;[your-subject]&amp;rdquo; Breek &lt;a href=&#34;mailto:admin@estudiopatagon.com&#34; target=&#34;_blank&#34;&gt;admin@estudiopatagon.com&lt;/a&gt;&#xA; From: [your-name] &amp;lt;[your-email]&amp;gt; Subject: [your-subject]&lt;/p&gt;&#xA;&lt;p&gt;Message Body: [your-message]&lt;/p&gt;&#xA;&lt;p&gt;-- This e-mail was sent from a contact form on Breek (&lt;a href=&#34;http://estudiopatagon.com/themes/wordpress/breek&#34; target=&#34;_blank&#34;&gt;http://estudiopatagon.com/themes/wordpress/breek&lt;/a&gt;&#xA;) Reply-To: [your-email]&lt;/p&gt;&#xA;&lt;p&gt;Breek &amp;ldquo;[your-subject]&amp;rdquo; Breek [your-email] Message Body: [your-message]&lt;/p&gt;&#xA;&lt;p&gt;-- This e-mail was sent from a contact form on Breek (&lt;a href=&#34;http://estudiopatagon.com/themes/wordpress/breek&#34; target=&#34;_blank&#34;&gt;http://estudiopatagon.com/themes/wordpress/breek&lt;/a&gt;&#xA;) Reply-To: &lt;a href=&#34;mailto:admin@estudiopatagon.com&#34; target=&#34;_blank&#34;&gt;admin@estudiopatagon.com&lt;/a&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Features</title>
      <link>http://localhost:1313/posts/page/2019/features/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2019/features/</guid>
      <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Curabitur quam augue, vehicula quis, tincidunt vel, varius vitae, nulla. Sed convallis orci. Duis libero orci, pretium a, convallis quis, pellentesque a, dolor. Curabitur vitae nisi non dolor vestibulum consequat.&lt;/p&gt;&#xA;&lt;h1 id=&#34;level-1-heading&#34;&gt;Level 1 Heading&lt;/h1&gt;&#xA;&lt;p&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Curabitur quam augue, vehicula quis, tincidunt vel, varius vitae, nulla.&lt;/p&gt;&#xA;&lt;h2 id=&#34;level-2-heading&#34;&gt;Level 2 Heading&lt;/h2&gt;&#xA;&lt;p&gt;Proin vestibulum. Ut ligula. Nullam sed dolor id odio volutpat pulvinar.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Home 4 columns</title>
      <link>http://localhost:1313/posts/page/2019/home-4-columns/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2019/home-4-columns/</guid>
      <description></description>
    </item>
    <item>
      <title>Home Advertising Area</title>
      <link>http://localhost:1313/posts/page/2019/home-advertising-area/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2019/home-advertising-area/</guid>
      <description></description>
    </item>
    <item>
      <title>Home Carousel</title>
      <link>http://localhost:1313/posts/page/2019/home-carousel/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2019/home-carousel/</guid>
      <description></description>
    </item>
    <item>
      <title>Home Classic Posts</title>
      <link>http://localhost:1313/posts/page/2019/home-classic-posts/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2019/home-classic-posts/</guid>
      <description></description>
    </item>
    <item>
      <title>Home Grid Style</title>
      <link>http://localhost:1313/posts/page/2019/home-grid-style/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2019/home-grid-style/</guid>
      <description></description>
    </item>
    <item>
      <title>Home Grid with Sidebar</title>
      <link>http://localhost:1313/posts/page/2019/home-grid-with-sidebar/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2019/home-grid-with-sidebar/</guid>
      <description></description>
    </item>
    <item>
      <title>Home Masonry</title>
      <link>http://localhost:1313/posts/page/2019/home-masonry/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2019/home-masonry/</guid>
      <description></description>
    </item>
    <item>
      <title>Privacy Policy</title>
      <link>http://localhost:1313/posts/page/2019/privacy-policy-2/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/page/2019/privacy-policy-2/</guid>
      <description>&lt;h2 id=&#34;who-we-are&#34;&gt;Who we are&lt;/h2&gt;&#xA;&lt;p&gt;Our website address is: &lt;a href=&#34;http://estudiopatagon.com/themes/wordpress/breek&#34; target=&#34;_blank&#34;&gt;http://estudiopatagon.com/themes/wordpress/breek&lt;/a&gt;&#xA;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-personal-data-we-collect-and-why-we-collect-it&#34;&gt;What personal data we collect and why we collect it&lt;/h2&gt;&#xA;&lt;h3 id=&#34;comments&#34;&gt;Comments&lt;/h3&gt;&#xA;&lt;p&gt;When visitors leave comments on the site we collect the data shown in the comments form, and also the visitor’s IP address and browser user agent string to help spam detection.&lt;/p&gt;&#xA;&lt;p&gt;An anonymized string created from your email address (also called a hash) may be provided to the Gravatar service to see if you are using it. The Gravatar service privacy policy is available here: &lt;a href=&#34;https://automattic.com/privacy/&#34; target=&#34;_blank&#34;&gt;https://automattic.com/privacy/&lt;/a&gt;&#xA;. After approval of your comment, your profile picture is visible to the public in the context of your comment.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
